$comment Generated by Amaranth $end
$date 2025-07-27 14:34:12.397464 $end
$timescale 1 fs $end
$scope module bench $end
$scope module top $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # prog__ack $end
$var wire 1 $ bus__ack $end
$var wire 32 % bus__addr $end
$var wire 32 & prog__addr $end
$var wire 1 ' bus__cyc $end
$var wire 1 ( prog__cyc $end
$var wire 32 ) prog__r_data $end
$var wire 32 * bus__r_data $end
$var wire 1 + bus__stb $end
$var wire 1 , prog__stb $end
$var wire 32 - bus__w_data $end
$var wire 32 . prog__w_data $end
$var wire 1 / bus__w_en $end
$var wire 1 0 prog__w_en $end
$scope module cpu $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # prog__ack $end
$var wire 32 & prog__addr $end
$var wire 1 ( prog__cyc $end
$var wire 32 ) prog__r_data $end
$var wire 1 , prog__stb $end
$var wire 118 1 consume__data $end
$var wire 32 2 \consume__data.pc $end
$var string 1 3 \consume__data.op $end
$var wire 79 4 \consume__data.mode $end
$var wire 79 5 \consume__data.mode.arith $end
$var wire 3 6 \consume__data.mode.arith.f $end
$var wire 7 7 \consume__data.mode.arith.m $end
$var wire 32 8 \consume__data.mode.arith.s1 $end
$var wire 32 9 \consume__data.mode.arith.s2 $end
$var wire 5 : \consume__data.mode.arith.d $end
$var wire 59 ; \consume__data.mode.imm $end
$var wire 3 < \consume__data.mode.imm.f $end
$var wire 7 = \consume__data.mode.imm.m $end
$var wire 32 > \consume__data.mode.imm.s $end
$var wire 12 ? \consume__data.mode.imm.i $end
$var wire 5 @ \consume__data.mode.imm.d $end
$var wire 79 A \consume__data.mode.store $end
$var wire 3 B \consume__data.mode.store.f $end
$var wire 12 C \consume__data.mode.store.offset $end
$var wire 32 D \consume__data.mode.store.s1 $end
$var wire 32 E \consume__data.mode.store.s2 $end
$var wire 37 F \consume__data.mode.upper $end
$var wire 5 G \consume__data.mode.upper.d $end
$var wire 32 H \consume__data.mode.upper.i $end
$var wire 26 I \consume__data.mode.jump $end
$var wire 5 J \consume__data.mode.jump.d $end
$var wire 21 K \consume__data.mode.jump.offset $end
$var wire 118 L produce__data $end
$var wire 32 M \produce__data.pc $end
$var string 1 N \produce__data.op $end
$var wire 79 O \produce__data.mode $end
$var wire 79 P \produce__data.mode.arith $end
$var wire 3 Q \produce__data.mode.arith.f $end
$var wire 7 R \produce__data.mode.arith.m $end
$var wire 32 S \produce__data.mode.arith.s1 $end
$var wire 32 T \produce__data.mode.arith.s2 $end
$var wire 5 U \produce__data.mode.arith.d $end
$var wire 59 V \produce__data.mode.imm $end
$var wire 3 W \produce__data.mode.imm.f $end
$var wire 7 X \produce__data.mode.imm.m $end
$var wire 32 Y \produce__data.mode.imm.s $end
$var wire 12 Z \produce__data.mode.imm.i $end
$var wire 5 [ \produce__data.mode.imm.d $end
$var wire 79 \ \produce__data.mode.store $end
$var wire 3 ] \produce__data.mode.store.f $end
$var wire 12 ^ \produce__data.mode.store.offset $end
$var wire 32 _ \produce__data.mode.store.s1 $end
$var wire 32 ` \produce__data.mode.store.s2 $end
$var wire 37 a \produce__data.mode.upper $end
$var wire 5 b \produce__data.mode.upper.d $end
$var wire 32 c \produce__data.mode.upper.i $end
$var wire 26 d \produce__data.mode.jump $end
$var wire 5 e \produce__data.mode.jump.d $end
$var wire 21 f \produce__data.mode.jump.offset $end
$var wire 1 g produce__ready $end
$var wire 1 h consume__ready $end
$var wire 1 i consume__valid $end
$var wire 1 j produce__valid $end
$var wire 32 k pc $end
$var wire 1 l consume__ready$9 $end
$var wire 1 m prog_enable $end
$var wire 1 n latch $end
$var wire 64 o consume__data$13 $end
$var wire 32 p \consume__data$13.pc $end
$var string 1 q \consume__data$13.op $end
$var wire 25 r \consume__data$13.mode $end
$var wire 25 s \consume__data$13.mode.r $end
$var wire 5 t \consume__data$13.mode.r.rd $end
$var wire 3 u \consume__data$13.mode.r.f_lower $end
$var wire 5 v \consume__data$13.mode.r.rs1 $end
$var wire 5 w \consume__data$13.mode.r.rs2 $end
$var wire 7 x \consume__data$13.mode.r.f_upper $end
$var wire 25 y \consume__data$13.mode.i $end
$var wire 5 z \consume__data$13.mode.i.rd $end
$var wire 3 { \consume__data$13.mode.i.f $end
$var wire 5 | \consume__data$13.mode.i.rs $end
$var wire 12 } \consume__data$13.mode.i.imm $end
$var wire 25 ~ \consume__data$13.mode.u $end
$var wire 5 !! \consume__data$13.mode.u.rd $end
$var wire 20 "! \consume__data$13.mode.u.imm $end
$var wire 25 #! \consume__data$13.mode.s $end
$var wire 5 $! \consume__data$13.mode.s.imm_lower $end
$var wire 3 %! \consume__data$13.mode.s.f $end
$var wire 5 &! \consume__data$13.mode.s.rs1 $end
$var wire 5 '! \consume__data$13.mode.s.rs2 $end
$var wire 7 (! \consume__data$13.mode.s.imm_upper $end
$var wire 25 )! \consume__data$13.mode.j $end
$var wire 5 *! \consume__data$13.mode.j.rd $end
$var wire 20 +! \consume__data$13.mode.j.offset $end
$var wire 25 ,! \consume__data$13.mode.b $end
$var wire 5 -! \consume__data$13.mode.b.offset_lower $end
$var wire 3 .! \consume__data$13.mode.b.f $end
$var wire 5 /! \consume__data$13.mode.b.rs1 $end
$var wire 5 0! \consume__data$13.mode.b.rs2 $end
$var wire 7 1! \consume__data$13.mode.b.offset_upper $end
$var wire 25 2! \consume__data$13.mode.m $end
$var wire 5 3! \consume__data$13.mode.m.rd $end
$var wire 3 4! \consume__data$13.mode.m.f $end
$var wire 5 5! \consume__data$13.mode.m.rs1 $end
$var wire 5 6! \consume__data$13.mode.m.rs2 $end
$var wire 7 7! \consume__data$13.mode.m.muldiv $end
$var wire 1 8! consume__valid$15 $end
$var wire 118 9! produce__data$17 $end
$var wire 32 :! \produce__data$17.pc $end
$var string 1 ;! \produce__data$17.op $end
$var wire 79 <! \produce__data$17.mode $end
$var wire 79 =! \produce__data$17.mode.arith $end
$var wire 3 >! \produce__data$17.mode.arith.f $end
$var wire 7 ?! \produce__data$17.mode.arith.m $end
$var wire 32 @! \produce__data$17.mode.arith.s1 $end
$var wire 32 A! \produce__data$17.mode.arith.s2 $end
$var wire 5 B! \produce__data$17.mode.arith.d $end
$var wire 59 C! \produce__data$17.mode.imm $end
$var wire 3 D! \produce__data$17.mode.imm.f $end
$var wire 7 E! \produce__data$17.mode.imm.m $end
$var wire 32 F! \produce__data$17.mode.imm.s $end
$var wire 12 G! \produce__data$17.mode.imm.i $end
$var wire 5 H! \produce__data$17.mode.imm.d $end
$var wire 79 I! \produce__data$17.mode.store $end
$var wire 3 J! \produce__data$17.mode.store.f $end
$var wire 12 K! \produce__data$17.mode.store.offset $end
$var wire 32 L! \produce__data$17.mode.store.s1 $end
$var wire 32 M! \produce__data$17.mode.store.s2 $end
$var wire 37 N! \produce__data$17.mode.upper $end
$var wire 5 O! \produce__data$17.mode.upper.d $end
$var wire 32 P! \produce__data$17.mode.upper.i $end
$var wire 26 Q! \produce__data$17.mode.jump $end
$var wire 5 R! \produce__data$17.mode.jump.d $end
$var wire 21 S! \produce__data$17.mode.jump.offset $end
$var wire 32 T! consume__s1 $end
$var wire 32 U! consume__s2 $end
$var string 1 V! consume__function $end
$var wire 7 W! consume__mode $end
$var wire 5 X! consume__d $end
$var wire 1 Y! consume__valid$23 $end
$var wire 1 Z! produce__valid$24 $end
$var wire 1 [! produce__ready$25 $end
$var wire 32 \! bus__addr $end
$var wire 32 ]! bus__w_data $end
$var wire 1 ^! bus__w_en $end
$var wire 1 _! bus__stb $end
$var wire 1 `! bus__cyc $end
$var wire 1 a! bus__ack $end
$var wire 2 b! size $end
$var wire 5 c! write__addr $end
$var wire 37 d! produce__data$34 $end
$var wire 5 e! \produce__data$34.d $end
$var wire 32 f! \produce__data$34.value $end
$var wire 32 g! write__w_data $end
$var wire 1 h! write__w_en $end
$var wire 1 i! write__stb $end
$var wire 1 j! produce__valid$38 $end
$var wire 1 k! write__cyc $end
$var wire 1 l! produce__ready$40 $end
$var wire 1 m! write__ack $end
$var string 1 n! write_route $end
$var wire 37 o! consume__data$43 $end
$var wire 5 p! \consume__data$43.d $end
$var wire 32 q! \consume__data$43.value $end
$var wire 32 r! produce__value $end
$var wire 5 s! produce__d $end
$var wire 1 t! consume__valid$46 $end
$var wire 1 u! produce__valid$47 $end
$var wire 1 v! consume__ready$48 $end
$scope module alu $end
$var wire 32 T! consume__s1 $end
$var wire 32 U! consume__s2 $end
$var string 1 V! consume__function $end
$var wire 7 W! consume__mode $end
$var wire 5 X! consume__d $end
$var wire 1 Y! consume__valid $end
$var wire 32 r! produce__value $end
$var wire 5 s! produce__d $end
$var wire 1 u! produce__valid $end
$var wire 1 C# produce__error $end
$upscope $end
$scope module decode $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 118 L produce__data $end
$var wire 32 M \produce__data.pc $end
$var string 1 N \produce__data.op $end
$var wire 79 O \produce__data.mode $end
$var wire 79 P \produce__data.mode.arith $end
$var wire 3 Q \produce__data.mode.arith.f $end
$var wire 7 R \produce__data.mode.arith.m $end
$var wire 32 S \produce__data.mode.arith.s1 $end
$var wire 32 T \produce__data.mode.arith.s2 $end
$var wire 5 U \produce__data.mode.arith.d $end
$var wire 59 V \produce__data.mode.imm $end
$var wire 3 W \produce__data.mode.imm.f $end
$var wire 7 X \produce__data.mode.imm.m $end
$var wire 32 Y \produce__data.mode.imm.s $end
$var wire 12 Z \produce__data.mode.imm.i $end
$var wire 5 [ \produce__data.mode.imm.d $end
$var wire 79 \ \produce__data.mode.store $end
$var wire 3 ] \produce__data.mode.store.f $end
$var wire 12 ^ \produce__data.mode.store.offset $end
$var wire 32 _ \produce__data.mode.store.s1 $end
$var wire 32 ` \produce__data.mode.store.s2 $end
$var wire 37 a \produce__data.mode.upper $end
$var wire 5 b \produce__data.mode.upper.d $end
$var wire 32 c \produce__data.mode.upper.i $end
$var wire 26 d \produce__data.mode.jump $end
$var wire 5 e \produce__data.mode.jump.d $end
$var wire 21 f \produce__data.mode.jump.offset $end
$var wire 1 g produce__ready $end
$var wire 1 j produce__valid $end
$var wire 1 l consume__ready $end
$var wire 64 o consume__data $end
$var wire 32 p \consume__data.pc $end
$var string 1 q \consume__data.op $end
$var wire 25 r \consume__data.mode $end
$var wire 25 s \consume__data.mode.r $end
$var wire 5 t \consume__data.mode.r.rd $end
$var wire 3 u \consume__data.mode.r.f_lower $end
$var wire 5 v \consume__data.mode.r.rs1 $end
$var wire 5 w \consume__data.mode.r.rs2 $end
$var wire 7 x \consume__data.mode.r.f_upper $end
$var wire 25 y \consume__data.mode.i $end
$var wire 5 z \consume__data.mode.i.rd $end
$var wire 3 { \consume__data.mode.i.f $end
$var wire 5 | \consume__data.mode.i.rs $end
$var wire 12 } \consume__data.mode.i.imm $end
$var wire 25 ~ \consume__data.mode.u $end
$var wire 5 !! \consume__data.mode.u.rd $end
$var wire 20 "! \consume__data.mode.u.imm $end
$var wire 25 #! \consume__data.mode.s $end
$var wire 5 $! \consume__data.mode.s.imm_lower $end
$var wire 3 %! \consume__data.mode.s.f $end
$var wire 5 &! \consume__data.mode.s.rs1 $end
$var wire 5 '! \consume__data.mode.s.rs2 $end
$var wire 7 (! \consume__data.mode.s.imm_upper $end
$var wire 25 )! \consume__data.mode.j $end
$var wire 5 *! \consume__data.mode.j.rd $end
$var wire 20 +! \consume__data.mode.j.offset $end
$var wire 25 ,! \consume__data.mode.b $end
$var wire 5 -! \consume__data.mode.b.offset_lower $end
$var wire 3 .! \consume__data.mode.b.f $end
$var wire 5 /! \consume__data.mode.b.rs1 $end
$var wire 5 0! \consume__data.mode.b.rs2 $end
$var wire 7 1! \consume__data.mode.b.offset_upper $end
$var wire 25 2! \consume__data.mode.m $end
$var wire 5 3! \consume__data.mode.m.rd $end
$var wire 3 4! \consume__data.mode.m.f $end
$var wire 5 5! \consume__data.mode.m.rs1 $end
$var wire 5 6! \consume__data.mode.m.rs2 $end
$var wire 7 7! \consume__data.mode.m.muldiv $end
$var wire 1 8! consume__valid $end
$var wire 5 c! write__addr $end
$var wire 32 g! write__w_data $end
$var wire 1 h! write__w_en $end
$var wire 1 i! write__stb $end
$var wire 1 k! write__cyc $end
$var wire 1 m! write__ack $end
$var wire 5 w! r_rd $end
$var wire 1 x! r_valid $end
$var wire 1 y! reg_write $end
$var wire 1 z! register_ready $end
$var wire 1 {! error_flag $end
$var wire 32 |! rs1__r_data $end
$var wire 32 }! rs2__r_data $end
$var wire 1 ~! error__cyc $end
$var wire 1 !" error__stb $end
$var wire 1 "" error__w_en $end
$var wire 32 #" error__w_data $end
$var wire 5 $" rs1__addr $end
$var wire 5 %" rs2__addr $end
$var wire 2 &" num_regs $end
$var wire 1 '" rs1__cyc $end
$var wire 1 (" rs1__stb $end
$var wire 1 )" rs1__ack $end
$var wire 1 *" rs2__cyc $end
$var wire 1 +" rs2__stb $end
$var wire 1 ," rs2__ack $end
$var wire 5 -" rd__addr $end
$var wire 1 ." rd__cyc $end
$var wire 1 /" rd__stb $end
$var wire 32 0" rd__w_data $end
$var wire 1 1" rd__w_en $end
$var wire 32 2" debug__r_data $end
$var wire 32 3" rd__r_data $end
$var wire 1 4" rd__ack $end
$var wire 5 5" debug__addr $end
$var wire 1 6" debug__cyc $end
$var wire 1 7" debug__stb $end
$var wire 32 8" debug__w_data $end
$var wire 1 9" debug__w_en $end
$var wire 1 :" debug__ack $end
$scope module reg $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 5 w! r_rd$3 $end
$var wire 1 x! r_valid$1 $end
$var wire 32 |! rs1__r_data $end
$var wire 32 }! rs2__r_data $end
$var wire 5 $" rs1__addr $end
$var wire 5 %" rs2__addr $end
$var wire 1 )" rs1__ack $end
$var wire 1 ," rs2__ack $end
$var wire 5 -" rd__addr $end
$var wire 1 ." rd__cyc $end
$var wire 1 /" rd__stb $end
$var wire 32 0" rd__w_data $end
$var wire 1 1" rd__w_en $end
$var wire 32 3" rd__r_data $end
$var wire 1 4" rd__ack $end
$var wire 1 ;" r_valid $end
$var wire 5 <" r_rd $end
$var wire 5 =" r_rs1 $end
$var wire 5 >" r_rs2 $end
$var wire 32 ?" r00 $end
$var wire 32 @" r01 $end
$var wire 32 A" r02 $end
$var wire 32 B" r03 $end
$var wire 32 C" r04 $end
$var wire 32 D" r05 $end
$var wire 32 E" r06 $end
$var wire 32 F" r07 $end
$var wire 32 G" r08 $end
$var wire 32 H" r09 $end
$var wire 32 I" r0A $end
$var wire 32 J" r0B $end
$var wire 32 K" r0C $end
$var wire 32 L" r0D $end
$var wire 32 M" r0E $end
$var wire 32 N" r0F $end
$var wire 32 O" r10 $end
$var wire 32 P" r11 $end
$var wire 32 Q" r12 $end
$var wire 32 R" r13 $end
$var wire 32 S" r14 $end
$var wire 32 T" r15 $end
$var wire 32 U" r16 $end
$var wire 32 V" r17 $end
$var wire 32 W" r18 $end
$var wire 32 X" r19 $end
$var wire 32 Y" r1A $end
$var wire 32 Z" r1B $end
$var wire 32 [" r1C $end
$var wire 32 \" r1D $end
$var wire 32 ]" r1E $end
$var wire 32 ^" r1F $end
$var wire 1 _" r_ok1 $end
$var wire 1 `" r_ok2 $end
$var wire 1 a" w_valid $end
$var wire 5 b" w_rd $end
$scope module mask $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 ;" r_valid $end
$var wire 5 <" r_rd $end
$var wire 5 =" r_rs1 $end
$var wire 5 >" r_rs2 $end
$var wire 1 _" r_ok1 $end
$var wire 1 `" r_ok2 $end
$var wire 1 a" w_valid $end
$var wire 5 b" w_rd $end
$var wire 1 c" r1_ok $end
$var wire 32 d" reg_mask $end
$var wire 1 e" r2_ok $end
$var wire 32 f" set_mask $end
$var wire 32 g" clear_mask $end
$upscope $end
$upscope $end
$upscope $end
$scope module decode_buffer $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 118 1 consume__data $end
$var wire 32 2 \consume__data.pc $end
$var string 1 3 \consume__data.op $end
$var wire 79 4 \consume__data.mode $end
$var wire 79 5 \consume__data.mode.arith $end
$var wire 3 6 \consume__data.mode.arith.f $end
$var wire 7 7 \consume__data.mode.arith.m $end
$var wire 32 8 \consume__data.mode.arith.s1 $end
$var wire 32 9 \consume__data.mode.arith.s2 $end
$var wire 5 : \consume__data.mode.arith.d $end
$var wire 59 ; \consume__data.mode.imm $end
$var wire 3 < \consume__data.mode.imm.f $end
$var wire 7 = \consume__data.mode.imm.m $end
$var wire 32 > \consume__data.mode.imm.s $end
$var wire 12 ? \consume__data.mode.imm.i $end
$var wire 5 @ \consume__data.mode.imm.d $end
$var wire 79 A \consume__data.mode.store $end
$var wire 3 B \consume__data.mode.store.f $end
$var wire 12 C \consume__data.mode.store.offset $end
$var wire 32 D \consume__data.mode.store.s1 $end
$var wire 32 E \consume__data.mode.store.s2 $end
$var wire 37 F \consume__data.mode.upper $end
$var wire 5 G \consume__data.mode.upper.d $end
$var wire 32 H \consume__data.mode.upper.i $end
$var wire 26 I \consume__data.mode.jump $end
$var wire 5 J \consume__data.mode.jump.d $end
$var wire 21 K \consume__data.mode.jump.offset $end
$var wire 1 h consume__ready $end
$var wire 1 i consume__valid $end
$var wire 118 9! produce__data $end
$var wire 32 :! \produce__data.pc $end
$var string 1 ;! \produce__data.op $end
$var wire 79 <! \produce__data.mode $end
$var wire 79 =! \produce__data.mode.arith $end
$var wire 3 >! \produce__data.mode.arith.f $end
$var wire 7 ?! \produce__data.mode.arith.m $end
$var wire 32 @! \produce__data.mode.arith.s1 $end
$var wire 32 A! \produce__data.mode.arith.s2 $end
$var wire 5 B! \produce__data.mode.arith.d $end
$var wire 59 C! \produce__data.mode.imm $end
$var wire 3 D! \produce__data.mode.imm.f $end
$var wire 7 E! \produce__data.mode.imm.m $end
$var wire 32 F! \produce__data.mode.imm.s $end
$var wire 12 G! \produce__data.mode.imm.i $end
$var wire 5 H! \produce__data.mode.imm.d $end
$var wire 79 I! \produce__data.mode.store $end
$var wire 3 J! \produce__data.mode.store.f $end
$var wire 12 K! \produce__data.mode.store.offset $end
$var wire 32 L! \produce__data.mode.store.s1 $end
$var wire 32 M! \produce__data.mode.store.s2 $end
$var wire 37 N! \produce__data.mode.upper $end
$var wire 5 O! \produce__data.mode.upper.d $end
$var wire 32 P! \produce__data.mode.upper.i $end
$var wire 26 Q! \produce__data.mode.jump $end
$var wire 5 R! \produce__data.mode.jump.d $end
$var wire 21 S! \produce__data.mode.jump.offset $end
$var wire 1 Z! produce__valid $end
$var wire 1 [! produce__ready $end
$var wire 1 h" produce_select $end
$var wire 1 i" select $end
$var wire 118 j" c0 $end
$var wire 32 k" \c0.pc $end
$var string 1 l" \c0.op $end
$var wire 79 m" \c0.mode $end
$var wire 79 n" \c0.mode.arith $end
$var wire 3 o" \c0.mode.arith.f $end
$var wire 7 p" \c0.mode.arith.m $end
$var wire 32 q" \c0.mode.arith.s1 $end
$var wire 32 r" \c0.mode.arith.s2 $end
$var wire 5 s" \c0.mode.arith.d $end
$var wire 59 t" \c0.mode.imm $end
$var wire 3 u" \c0.mode.imm.f $end
$var wire 7 v" \c0.mode.imm.m $end
$var wire 32 w" \c0.mode.imm.s $end
$var wire 12 x" \c0.mode.imm.i $end
$var wire 5 y" \c0.mode.imm.d $end
$var wire 79 z" \c0.mode.store $end
$var wire 3 {" \c0.mode.store.f $end
$var wire 12 |" \c0.mode.store.offset $end
$var wire 32 }" \c0.mode.store.s1 $end
$var wire 32 ~" \c0.mode.store.s2 $end
$var wire 37 !# \c0.mode.upper $end
$var wire 5 "# \c0.mode.upper.d $end
$var wire 32 ## \c0.mode.upper.i $end
$var wire 26 $# \c0.mode.jump $end
$var wire 5 %# \c0.mode.jump.d $end
$var wire 21 &# \c0.mode.jump.offset $end
$var wire 118 '# c1 $end
$var wire 32 (# \c1.pc $end
$var string 1 )# \c1.op $end
$var wire 79 *# \c1.mode $end
$var wire 79 +# \c1.mode.arith $end
$var wire 3 ,# \c1.mode.arith.f $end
$var wire 7 -# \c1.mode.arith.m $end
$var wire 32 .# \c1.mode.arith.s1 $end
$var wire 32 /# \c1.mode.arith.s2 $end
$var wire 5 0# \c1.mode.arith.d $end
$var wire 59 1# \c1.mode.imm $end
$var wire 3 2# \c1.mode.imm.f $end
$var wire 7 3# \c1.mode.imm.m $end
$var wire 32 4# \c1.mode.imm.s $end
$var wire 12 5# \c1.mode.imm.i $end
$var wire 5 6# \c1.mode.imm.d $end
$var wire 79 7# \c1.mode.store $end
$var wire 3 8# \c1.mode.store.f $end
$var wire 12 9# \c1.mode.store.offset $end
$var wire 32 :# \c1.mode.store.s1 $end
$var wire 32 ;# \c1.mode.store.s2 $end
$var wire 37 <# \c1.mode.upper $end
$var wire 5 =# \c1.mode.upper.d $end
$var wire 32 ># \c1.mode.upper.i $end
$var wire 26 ?# \c1.mode.jump $end
$var wire 5 @# \c1.mode.jump.d $end
$var wire 21 A# \c1.mode.jump.offset $end
$var wire 2 B# cache_ready $end
$upscope $end
$scope module write_buffer $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 37 d! produce__data $end
$var wire 5 e! \produce__data.d $end
$var wire 32 f! \produce__data.value $end
$var wire 1 j! produce__valid $end
$var wire 1 l! produce__ready $end
$var wire 37 o! consume__data $end
$var wire 5 p! \consume__data.d $end
$var wire 32 q! \consume__data.value $end
$var wire 1 t! consume__valid $end
$var wire 1 v! consume__ready $end
$var wire 1 D# produce_select $end
$var wire 1 E# select $end
$var wire 37 F# c0 $end
$var wire 5 G# \c0.d $end
$var wire 32 H# \c0.value $end
$var wire 37 I# c1 $end
$var wire 5 J# \c1.d $end
$var wire 32 K# \c1.value $end
$var wire 2 L# cache_ready $end
$upscope $end
$upscope $end
$scope module ram $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 $ bus__ack $end
$var wire 32 % bus__addr $end
$var wire 1 ' bus__cyc $end
$var wire 32 * bus__r_data $end
$var wire 1 + bus__stb $end
$var wire 32 - bus__w_data $end
$var wire 1 / bus__w_en $end
$var wire 1 M# write_port__en $end
$var wire 8 N# write_port__addr $end
$var wire 8 O# read_port__addr $end
$var wire 1 P# write_ok $end
$var wire 1 Q# read_ok $end
$var wire 32 R# read_port__data $end
$var wire 32 S# write_port__data $end
$var wire 32 T# \mem[0] $end
$var wire 32 U# \mem[1] $end
$var wire 32 V# \mem[2] $end
$var wire 32 W# \mem[3] $end
$var wire 32 X# \mem[4] $end
$var wire 32 Y# \mem[5] $end
$var wire 32 Z# \mem[6] $end
$var wire 32 [# \mem[7] $end
$var wire 32 \# \mem[8] $end
$var wire 32 ]# \mem[9] $end
$var wire 32 ^# \mem[10] $end
$var wire 32 _# \mem[11] $end
$var wire 32 `# \mem[12] $end
$var wire 32 a# \mem[13] $end
$var wire 32 b# \mem[14] $end
$var wire 32 c# \mem[15] $end
$var wire 32 d# \mem[16] $end
$var wire 32 e# \mem[17] $end
$var wire 32 f# \mem[18] $end
$var wire 32 g# \mem[19] $end
$var wire 32 h# \mem[20] $end
$var wire 32 i# \mem[21] $end
$var wire 32 j# \mem[22] $end
$var wire 32 k# \mem[23] $end
$var wire 32 l# \mem[24] $end
$var wire 32 m# \mem[25] $end
$var wire 32 n# \mem[26] $end
$var wire 32 o# \mem[27] $end
$var wire 32 p# \mem[28] $end
$var wire 32 q# \mem[29] $end
$var wire 32 r# \mem[30] $end
$var wire 32 s# \mem[31] $end
$var wire 32 t# \mem[32] $end
$var wire 32 u# \mem[33] $end
$var wire 32 v# \mem[34] $end
$var wire 32 w# \mem[35] $end
$var wire 32 x# \mem[36] $end
$var wire 32 y# \mem[37] $end
$var wire 32 z# \mem[38] $end
$var wire 32 {# \mem[39] $end
$var wire 32 |# \mem[40] $end
$var wire 32 }# \mem[41] $end
$var wire 32 ~# \mem[42] $end
$var wire 32 !$ \mem[43] $end
$var wire 32 "$ \mem[44] $end
$var wire 32 #$ \mem[45] $end
$var wire 32 $$ \mem[46] $end
$var wire 32 %$ \mem[47] $end
$var wire 32 &$ \mem[48] $end
$var wire 32 '$ \mem[49] $end
$var wire 32 ($ \mem[50] $end
$var wire 32 )$ \mem[51] $end
$var wire 32 *$ \mem[52] $end
$var wire 32 +$ \mem[53] $end
$var wire 32 ,$ \mem[54] $end
$var wire 32 -$ \mem[55] $end
$var wire 32 .$ \mem[56] $end
$var wire 32 /$ \mem[57] $end
$var wire 32 0$ \mem[58] $end
$var wire 32 1$ \mem[59] $end
$var wire 32 2$ \mem[60] $end
$var wire 32 3$ \mem[61] $end
$var wire 32 4$ \mem[62] $end
$var wire 32 5$ \mem[63] $end
$var wire 32 6$ \mem[64] $end
$var wire 32 7$ \mem[65] $end
$var wire 32 8$ \mem[66] $end
$var wire 32 9$ \mem[67] $end
$var wire 32 :$ \mem[68] $end
$var wire 32 ;$ \mem[69] $end
$var wire 32 <$ \mem[70] $end
$var wire 32 =$ \mem[71] $end
$var wire 32 >$ \mem[72] $end
$var wire 32 ?$ \mem[73] $end
$var wire 32 @$ \mem[74] $end
$var wire 32 A$ \mem[75] $end
$var wire 32 B$ \mem[76] $end
$var wire 32 C$ \mem[77] $end
$var wire 32 D$ \mem[78] $end
$var wire 32 E$ \mem[79] $end
$var wire 32 F$ \mem[80] $end
$var wire 32 G$ \mem[81] $end
$var wire 32 H$ \mem[82] $end
$var wire 32 I$ \mem[83] $end
$var wire 32 J$ \mem[84] $end
$var wire 32 K$ \mem[85] $end
$var wire 32 L$ \mem[86] $end
$var wire 32 M$ \mem[87] $end
$var wire 32 N$ \mem[88] $end
$var wire 32 O$ \mem[89] $end
$var wire 32 P$ \mem[90] $end
$var wire 32 Q$ \mem[91] $end
$var wire 32 R$ \mem[92] $end
$var wire 32 S$ \mem[93] $end
$var wire 32 T$ \mem[94] $end
$var wire 32 U$ \mem[95] $end
$var wire 32 V$ \mem[96] $end
$var wire 32 W$ \mem[97] $end
$var wire 32 X$ \mem[98] $end
$var wire 32 Y$ \mem[99] $end
$var wire 32 Z$ \mem[100] $end
$var wire 32 [$ \mem[101] $end
$var wire 32 \$ \mem[102] $end
$var wire 32 ]$ \mem[103] $end
$var wire 32 ^$ \mem[104] $end
$var wire 32 _$ \mem[105] $end
$var wire 32 `$ \mem[106] $end
$var wire 32 a$ \mem[107] $end
$var wire 32 b$ \mem[108] $end
$var wire 32 c$ \mem[109] $end
$var wire 32 d$ \mem[110] $end
$var wire 32 e$ \mem[111] $end
$var wire 32 f$ \mem[112] $end
$var wire 32 g$ \mem[113] $end
$var wire 32 h$ \mem[114] $end
$var wire 32 i$ \mem[115] $end
$var wire 32 j$ \mem[116] $end
$var wire 32 k$ \mem[117] $end
$var wire 32 l$ \mem[118] $end
$var wire 32 m$ \mem[119] $end
$var wire 32 n$ \mem[120] $end
$var wire 32 o$ \mem[121] $end
$var wire 32 p$ \mem[122] $end
$var wire 32 q$ \mem[123] $end
$var wire 32 r$ \mem[124] $end
$var wire 32 s$ \mem[125] $end
$var wire 32 t$ \mem[126] $end
$var wire 32 u$ \mem[127] $end
$var wire 32 v$ \mem[128] $end
$var wire 32 w$ \mem[129] $end
$var wire 32 x$ \mem[130] $end
$var wire 32 y$ \mem[131] $end
$var wire 32 z$ \mem[132] $end
$var wire 32 {$ \mem[133] $end
$var wire 32 |$ \mem[134] $end
$var wire 32 }$ \mem[135] $end
$var wire 32 ~$ \mem[136] $end
$var wire 32 !% \mem[137] $end
$var wire 32 "% \mem[138] $end
$var wire 32 #% \mem[139] $end
$var wire 32 $% \mem[140] $end
$var wire 32 %% \mem[141] $end
$var wire 32 &% \mem[142] $end
$var wire 32 '% \mem[143] $end
$var wire 32 (% \mem[144] $end
$var wire 32 )% \mem[145] $end
$var wire 32 *% \mem[146] $end
$var wire 32 +% \mem[147] $end
$var wire 32 ,% \mem[148] $end
$var wire 32 -% \mem[149] $end
$var wire 32 .% \mem[150] $end
$var wire 32 /% \mem[151] $end
$var wire 32 0% \mem[152] $end
$var wire 32 1% \mem[153] $end
$var wire 32 2% \mem[154] $end
$var wire 32 3% \mem[155] $end
$var wire 32 4% \mem[156] $end
$var wire 32 5% \mem[157] $end
$var wire 32 6% \mem[158] $end
$var wire 32 7% \mem[159] $end
$var wire 32 8% \mem[160] $end
$var wire 32 9% \mem[161] $end
$var wire 32 :% \mem[162] $end
$var wire 32 ;% \mem[163] $end
$var wire 32 <% \mem[164] $end
$var wire 32 =% \mem[165] $end
$var wire 32 >% \mem[166] $end
$var wire 32 ?% \mem[167] $end
$var wire 32 @% \mem[168] $end
$var wire 32 A% \mem[169] $end
$var wire 32 B% \mem[170] $end
$var wire 32 C% \mem[171] $end
$var wire 32 D% \mem[172] $end
$var wire 32 E% \mem[173] $end
$var wire 32 F% \mem[174] $end
$var wire 32 G% \mem[175] $end
$var wire 32 H% \mem[176] $end
$var wire 32 I% \mem[177] $end
$var wire 32 J% \mem[178] $end
$var wire 32 K% \mem[179] $end
$var wire 32 L% \mem[180] $end
$var wire 32 M% \mem[181] $end
$var wire 32 N% \mem[182] $end
$var wire 32 O% \mem[183] $end
$var wire 32 P% \mem[184] $end
$var wire 32 Q% \mem[185] $end
$var wire 32 R% \mem[186] $end
$var wire 32 S% \mem[187] $end
$var wire 32 T% \mem[188] $end
$var wire 32 U% \mem[189] $end
$var wire 32 V% \mem[190] $end
$var wire 32 W% \mem[191] $end
$var wire 32 X% \mem[192] $end
$var wire 32 Y% \mem[193] $end
$var wire 32 Z% \mem[194] $end
$var wire 32 [% \mem[195] $end
$var wire 32 \% \mem[196] $end
$var wire 32 ]% \mem[197] $end
$var wire 32 ^% \mem[198] $end
$var wire 32 _% \mem[199] $end
$var wire 32 `% \mem[200] $end
$var wire 32 a% \mem[201] $end
$var wire 32 b% \mem[202] $end
$var wire 32 c% \mem[203] $end
$var wire 32 d% \mem[204] $end
$var wire 32 e% \mem[205] $end
$var wire 32 f% \mem[206] $end
$var wire 32 g% \mem[207] $end
$var wire 32 h% \mem[208] $end
$var wire 32 i% \mem[209] $end
$var wire 32 j% \mem[210] $end
$var wire 32 k% \mem[211] $end
$var wire 32 l% \mem[212] $end
$var wire 32 m% \mem[213] $end
$var wire 32 n% \mem[214] $end
$var wire 32 o% \mem[215] $end
$var wire 32 p% \mem[216] $end
$var wire 32 q% \mem[217] $end
$var wire 32 r% \mem[218] $end
$var wire 32 s% \mem[219] $end
$var wire 32 t% \mem[220] $end
$var wire 32 u% \mem[221] $end
$var wire 32 v% \mem[222] $end
$var wire 32 w% \mem[223] $end
$var wire 32 x% \mem[224] $end
$var wire 32 y% \mem[225] $end
$var wire 32 z% \mem[226] $end
$var wire 32 {% \mem[227] $end
$var wire 32 |% \mem[228] $end
$var wire 32 }% \mem[229] $end
$var wire 32 ~% \mem[230] $end
$var wire 32 !& \mem[231] $end
$var wire 32 "& \mem[232] $end
$var wire 32 #& \mem[233] $end
$var wire 32 $& \mem[234] $end
$var wire 32 %& \mem[235] $end
$var wire 32 && \mem[236] $end
$var wire 32 '& \mem[237] $end
$var wire 32 (& \mem[238] $end
$var wire 32 )& \mem[239] $end
$var wire 32 *& \mem[240] $end
$var wire 32 +& \mem[241] $end
$var wire 32 ,& \mem[242] $end
$var wire 32 -& \mem[243] $end
$var wire 32 .& \mem[244] $end
$var wire 32 /& \mem[245] $end
$var wire 32 0& \mem[246] $end
$var wire 32 1& \mem[247] $end
$var wire 32 2& \mem[248] $end
$var wire 32 3& \mem[249] $end
$var wire 32 4& \mem[250] $end
$var wire 32 5& \mem[251] $end
$var wire 32 6& \mem[252] $end
$var wire 32 7& \mem[253] $end
$var wire 32 8& \mem[254] $end
$var wire 32 9& \mem[255] $end
$scope module mem $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 M# write_port__en $end
$var wire 8 N# write_port__addr $end
$var wire 8 O# read_port__addr $end
$var wire 32 R# read_port__data $end
$var wire 32 S# write_port__data $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
1#
1$
b0 %
b0 &
1'
1(
b111000000010011 )
b111000000010011 *
1+
1,
b0 -
b0 .
0/
00
b111001001100000000000000000000000000000000 1
b0 2
sARITHIMM 3
b111 4
b111 5
b111 6
b0 7
b0 8
b0 9
b0 :
b111 ;
b111 <
b0 =
b0 >
b0 ?
b0 @
b111 A
b111 B
b0 C
b0 D
b0 E
b111 F
b111 G
b0 H
b111 I
b111 J
b0 K
b111001001100000000000000000000000000000000 L
b0 M
sARITHIMM N
b111 O
b111 P
b111 Q
b0 R
b0 S
b0 T
b0 U
b111 V
b111 W
b0 X
b0 Y
b0 Z
b0 [
b111 \
b111 ]
b0 ^
b0 _
b0 `
b111 a
b111 b
b0 c
b111 d
b111 e
b0 f
1g
1h
1i
1j
b0 k
1l
1m
0n
b11100000001001100000000000000000000000000000000 o
b0 p
sARITHIMM q
b11100000 r
b11100000 s
b0 t
b111 u
b0 v
b0 w
b0 x
b11100000 y
b0 z
b111 {
b0 |
b0 }
b11100000 ~
b0 !!
b111 "!
b11100000 #!
b0 $!
b111 %!
b0 &!
b0 '!
b0 (!
b11100000 )!
b0 *!
b111 +!
b11100000 ,!
b0 -!
b111 .!
b0 /!
b0 0!
b0 1!
b11100000 2!
b0 3!
b111 4!
b0 5!
b0 6!
b0 7!
18!
b0 9!
b0 :!
s[unknown] ;!
b0 <!
b0 =!
b0 >!
b0 ?!
b0 @!
b0 A!
b0 B!
b0 C!
b0 D!
b0 E!
b0 F!
b0 G!
b0 H!
b0 I!
b0 J!
b0 K!
b0 L!
b0 M!
b0 N!
b0 O!
b0 P!
b0 Q!
b0 R!
b0 S!
b0 T!
b0 U!
sADDSUB V!
b0 W!
b0 X!
0Y!
0Z!
0[!
b0 \!
b0 ]!
0^!
0_!
0`!
0a!
b0 b!
b0 c!
b0 d!
b0 e!
b0 f!
b0 g!
1h!
0i!
0j!
0k!
0l!
0m!
sNONE n!
b0 o!
b0 p!
b0 q!
b0 r!
b0 s!
0t!
0u!
1v!
b0 w!
1x!
1y!
1z!
0{!
b0 |!
b0 }!
0~!
0!"
0""
b0 #"
b0 $"
b0 %"
b1 &"
1'"
1("
1)"
0*"
0+"
1,"
b0 -"
0."
0/"
b0 0"
11"
b0 2"
b0 3"
04"
b0 5"
06"
07"
b0 8"
09"
0:"
1;"
b0 <"
b0 ="
b0 >"
b0 ?"
b0 @"
b0 A"
b0 B"
b0 C"
b0 D"
b0 E"
b0 F"
b0 G"
b0 H"
b0 I"
b0 J"
b0 K"
b0 L"
b0 M"
b0 N"
b0 O"
b0 P"
b0 Q"
b0 R"
b0 S"
b0 T"
b0 U"
b0 V"
b0 W"
b0 X"
b0 Y"
b0 Z"
b0 ["
b0 \"
b0 ]"
b0 ^"
1_"
1`"
0a"
b0 b"
1c"
b0 d"
1e"
b1 f"
b11111111111111111111111111111111 g"
1h"
0i"
b0 j"
b0 k"
s[unknown] l"
b0 m"
b0 n"
b0 o"
b0 p"
b0 q"
b0 r"
b0 s"
b0 t"
b0 u"
b0 v"
b0 w"
b0 x"
b0 y"
b0 z"
b0 {"
b0 |"
b0 }"
b0 ~"
b0 !#
b0 "#
b0 ##
b0 $#
b0 %#
b0 &#
b0 '#
b0 (#
s[unknown] )#
b0 *#
b0 +#
b0 ,#
b0 -#
b0 .#
b0 /#
b0 0#
b0 1#
b0 2#
b0 3#
b0 4#
b0 5#
b0 6#
b0 7#
b0 8#
b0 9#
b0 :#
b0 ;#
b0 <#
b0 =#
b0 >#
b0 ?#
b0 @#
b0 A#
b11 B#
0C#
1D#
0E#
b0 F#
b0 G#
b0 H#
b0 I#
b0 J#
b0 K#
b11 L#
0M#
b0 N#
b0 O#
0P#
1Q#
b111000000010011 R#
b0 S#
b111000000010011 T#
b100000000000000011101111 U#
b101100000000000000010011 V#
b110100000000000000010011 W#
b10111000100010011 X#
b10010000000100011 Y#
b100010010001000100011 Z#
b0 [#
b0 \#
b0 ]#
b0 ^#
b0 _#
b0 `#
b0 a#
b0 b#
b0 c#
b0 d#
b0 e#
b0 f#
b0 g#
b0 h#
b0 i#
b0 j#
b0 k#
b0 l#
b0 m#
b0 n#
b0 o#
b0 p#
b0 q#
b0 r#
b0 s#
b0 t#
b0 u#
b0 v#
b0 w#
b0 x#
b0 y#
b0 z#
b0 {#
b0 |#
b0 }#
b0 ~#
b0 !$
b0 "$
b0 #$
b0 $$
b0 %$
b0 &$
b0 '$
b0 ($
b0 )$
b0 *$
b0 +$
b0 ,$
b0 -$
b0 .$
b0 /$
b0 0$
b0 1$
b0 2$
b0 3$
b0 4$
b0 5$
b0 6$
b0 7$
b0 8$
b0 9$
b0 :$
b0 ;$
b0 <$
b0 =$
b0 >$
b0 ?$
b0 @$
b0 A$
b0 B$
b0 C$
b0 D$
b0 E$
b0 F$
b0 G$
b0 H$
b0 I$
b0 J$
b0 K$
b0 L$
b0 M$
b0 N$
b0 O$
b0 P$
b0 Q$
b0 R$
b0 S$
b0 T$
b0 U$
b0 V$
b0 W$
b0 X$
b0 Y$
b0 Z$
b0 [$
b0 \$
b0 ]$
b0 ^$
b0 _$
b0 `$
b0 a$
b0 b$
b0 c$
b0 d$
b0 e$
b0 f$
b0 g$
b0 h$
b0 i$
b0 j$
b0 k$
b0 l$
b0 m$
b0 n$
b0 o$
b0 p$
b0 q$
b0 r$
b0 s$
b0 t$
b0 u$
b0 v$
b0 w$
b0 x$
b0 y$
b0 z$
b0 {$
b0 |$
b0 }$
b0 ~$
b0 !%
b0 "%
b0 #%
b0 $%
b0 %%
b0 &%
b0 '%
b0 (%
b0 )%
b0 *%
b0 +%
b0 ,%
b0 -%
b0 .%
b0 /%
b0 0%
b0 1%
b0 2%
b0 3%
b0 4%
b0 5%
b0 6%
b0 7%
b0 8%
b0 9%
b0 :%
b0 ;%
b0 <%
b0 =%
b0 >%
b0 ?%
b0 @%
b0 A%
b0 B%
b0 C%
b0 D%
b0 E%
b0 F%
b0 G%
b0 H%
b0 I%
b0 J%
b0 K%
b0 L%
b0 M%
b0 N%
b0 O%
b0 P%
b0 Q%
b0 R%
b0 S%
b0 T%
b0 U%
b0 V%
b0 W%
b0 X%
b0 Y%
b0 Z%
b0 [%
b0 \%
b0 ]%
b0 ^%
b0 _%
b0 `%
b0 a%
b0 b%
b0 c%
b0 d%
b0 e%
b0 f%
b0 g%
b0 h%
b0 i%
b0 j%
b0 k%
b0 l%
b0 m%
b0 n%
b0 o%
b0 p%
b0 q%
b0 r%
b0 s%
b0 t%
b0 u%
b0 v%
b0 w%
b0 x%
b0 y%
b0 z%
b0 {%
b0 |%
b0 }%
b0 ~%
b0 !&
b0 "&
b0 #&
b0 $&
b0 %&
b0 &&
b0 '&
b0 (&
b0 )&
b0 *&
b0 +&
b0 ,&
b0 -&
b0 .&
b0 /&
b0 0&
b0 1&
b0 2&
b0 3&
b0 4&
b0 5&
b0 6&
b0 7&
b0 8&
b0 9&
$end
#5000000
1!
b100 k
b1 d"
b111001001100000000000000000000000000000000 j"
sARITHIMM l"
b111 m"
b111 n"
b111 o"
b111 t"
b111 u"
b111 z"
b111 {"
b111 !#
b111 "#
b111 $#
b111 %#
1i"
b10 B#
b100 &
0h"
1Z!
b11100000001001100000000000000000000000000000100 o
b100 p
0c"
0e"
b111001001100000000000000000000000000000100 L
b100 M
0_"
0`"
b100 %
b111001001100000000000000000000000000000000 9!
sARITHIMM ;!
b111 <!
b111 =!
b111 >!
b111 C!
b111 D!
b111 I!
b111 J!
b111 N!
b111 O!
b111 Q!
b111 R!
0,"
0)"
sAND V!
sALU n!
b111001001100000000000000000000000000000100 1
b100 2
b1 O#
1Y!
1[!
b1 N#
b100000000000000011101111 R#
1u!
0z!
0j
b100000000000000011101111 *
1t!
0l
0i
0,
0(
0x!
b100000000000000011101111 )
0+
b10000000000000001110111100000000000000000000000000000100 o
sJAL q
b10000000000000001 r
b10000000000000001 s
b1 t
b0 u
b1000 w
b10000000000000001 y
b1 z
b0 {
b1000 }
b10000000000000001 ~
b1 !!
b100000000000 "!
b10000000000000001 #!
b1 $!
b0 %!
b1000 '!
b10000000000000001 )!
b1 *!
b100000000000 +!
b10000000000000001 ,!
b1 -!
b0 .!
b1000 0!
b10000000000000001 2!
b1 3!
b0 4!
b1000 6!
0;"
0'
b1000 %"
b100000001110111100000000000000000000000000000100 L
sJAL N
b100000001 O
b100000001 P
b1 Q
b100000 R
b100000001 V
b1 W
b100000 X
b100000001 \
b1 ]
b100000 ^
b100000001 a
b1 b
b1000 c
b100000001 d
b1 e
b1000 f
b0 &"
0Q#
b1 w!
b0 f"
b100000001110111100000000000000000000000000000100 1
sJAL 3
b100000001 4
b100000001 5
b1 6
b100000 7
b100000001 ;
b1 <
b100000 =
b100000001 A
b1 B
b100000 C
b100000001 F
b1 G
b1000 H
b100000001 I
b1 J
b1000 K
0("
1z!
0$
0'"
b1 <"
b1000 >"
1j
1l
0#
1e"
1,
1`"
1(
08!
1x!
1i
1,"
1;"
0j
0x!
1'
1+
0i
1Q#
0;"
b10 f"
1$
b0 f"
1#
18!
1j
1x!
1;"
1i
b10 f"
#10000000
0!
#15000000
1!
b100000001110111100000000000000000000000000000100 '#
b100 (#
sJAL )#
b100000001 *#
b100000001 +#
b1 ,#
b100000 -#
b100000001 1#
b1 2#
b100000 3#
b100000001 7#
b1 8#
b100000 9#
b100000001 <#
b1 =#
b1000 >#
b100000001 ?#
b1 @#
b1000 A#
b11 d"
1E#
b10 L#
0i"
b1 B#
1n
1h"
0,
1j!
0D#
0(
b100000001110111100000000000000000000000000000100 9!
b100 :!
sJAL ;!
b100000001 <!
b100000001 =!
b1 >!
b100000 ?!
b100000001 C!
b1 D!
b100000 E!
b100000001 I!
b1 J!
b100000 K!
b100000001 N!
b1 O!
b1000 P!
b100000001 Q!
b1 R!
b1000 S!
1i!
1k!
0+
0'
sADDSUB V!
sPC n!
1/"
0Q#
0Y!
0[!
1."
0u!
0$
1[!
b100000001 o!
b1 p!
b1000 q!
14"
1a"
1m!
0#
b11111111111111111111111111111110 g"
08!
1l!
0j
0x!
0;"
0i
b0 f"
#20000000
0!
#25000000
1!
b1100 k
b10 d"
b100000001 I#
b1 J#
b1000 K#
0E#
b1 L#
b11 B#
0n
b1100 &
0Z!
1,
1D#
b10000000000000001110111100000000000000000000000000001100 o
b1100 p
1(
1c"
b1000000001 o!
b10000 q!
b100000001110111100000000000000000000000000001100 L
b1100 M
b100000001 d!
b1 e!
b1000 f!
1'
1_"
b1100 %
1+
0t!
1)"
b100000001110111100000000000000000000000000001100 1
b1100 2
b11 O#
1Q#
b1 c!
b1000 g!
b11 N#
1$
b1 -"
b110100000000000000010011 R#
b1000 0"
b110100000000000000010011 *
b1 b"
1#
18!
b11111111111111111111111111111101 g"
b110100000000000000010011 )
1j
1x!
b11010000000000000001001100000000000000000000000000001100 o
sARITHIMM q
b11010000000000000 r
b11010000000000000 s
b0 t
b1101 w
b11010000000000000 y
b0 z
b1101 }
b11010000000000000 ~
b0 !!
b110100000000 "!
b11010000000000000 #!
b0 $!
b1101 '!
b11010000000000000 )!
b0 *!
b110100000000 +!
b11010000000000000 ,!
b0 -!
b1101 0!
b11010000000000000 2!
b0 3!
b1101 6!
b1101 %"
b1101000000000000000000000000000000000000000000001001100000000000000000000000000001100 L
sARITHIMM N
b1101000000000000000000000000000000000000000000 O
b1101000000000000000000000000000000000000000000 P
b0 Q
b0 R
b1101 T
b1101000000000000000000000000000000000000000000 V
b0 W
b0 X
b1101 Z
b1101000000000000000000000000000000000000000000 \
b0 ]
b0 ^
b1101000000000000000000000000000 _
b0 a
b0 b
b0 c
b0 d
b0 e
b0 f
b1 &"
b0 w!
1;"
1i
b1101000000000000000000000000000000000000000000001001100000000000000000000000000001100 1
sARITHIMM 3
b1101000000000000000000000000000000000000000000 4
b1101000000000000000000000000000000000000000000 5
b0 6
b0 7
b1101 9
b1101000000000000000000000000000000000000000000 ;
b0 <
b0 =
b1101 ?
b1101000000000000000000000000000000000000000000 A
b0 B
b0 C
b1101000000000000000000000000000 D
b0 F
b0 G
b0 H
b0 I
b0 J
b0 K
1("
b10 f"
1'"
b0 <"
b1101 >"
b1 f"
#30000000
0!
#35000000
1!
b10000 k
b1 d"
b11 L#
b1101000000000000000000000000000000000000000000001001100000000000000000000000000001100 j"
b1100 k"
b1101000000000000000000000000000000000000000000 m"
b1101000000000000000000000000000000000000000000 n"
b0 o"
b1101 r"
b1101000000000000000000000000000000000000000000 t"
b0 u"
b1101 x"
b1101000000000000000000000000000000000000000000 z"
b0 {"
b1101000000000000000000000000000 }"
b0 !#
b0 "#
b0 $#
b0 %#
b1000 @"
1i"
b10 B#
b10000 &
0h"
1Z!
0j!
b11010000000000000001001100000000000000000000000000010000 o
b10000 p
0c"
b1010000001 o!
b10100 q!
b1101000000000000000000000000000000000000000000001001100000000000000000000000000001100 9!
b1100 :!
sARITHIMM ;!
b1101000000000000000000000000000000000000000000 <!
b1101000000000000000000000000000000000000000000 =!
b0 >!
b0 ?!
b1101 A!
b1101000000000000000000000000000000000000000000 C!
b0 D!
b0 E!
b1101 G!
b1101000000000000000000000000000000000000000000 I!
b0 J!
b0 K!
b1101000000000000000000000000000 L!
b0 N!
b0 O!
b0 P!
b0 Q!
b0 R!
b0 S!
b1101000000000000000000000000000000000000000000001001100000000000000000000000000010000 L
b10000 M
0i!
0_"
0k!
b10000 %
1t!
0)"
sALU n!
b1101000000000000000000000000000000000000000000001001100000000000000000000000000010000 1
b10000 2
b100 O#
0/"
b1101 U!
1Y!
b1010000000 o!
b0 p!
0."
b100 N#
b1101 r!
b10111000100010011 R#
1u!
0z!
b0 o!
b0 q!
04"
0t!
0a"
b11111111111111111111111111111111 g"
b10111000100010011 *
0m!
0l
b110100000 o!
b1101 q!
0j
1t!
b10111000100010011 )
0,
0l!
0(
0x!
0i
0+
b1011100010001001100000000000000000000000000010000 o
b1011100010 r
b1011100010 s
b10 t
b111 u
b10 v
b0 w
b1011100010 y
b10 z
b111 {
b10 |
b0 }
b1011100010 ~
b10 !!
b10111 "!
b1011100010 #!
b10 $!
b111 %!
b10 &!
b0 '!
b1011100010 )!
b10 *!
b10111 +!
b1011100010 ,!
b10 -!
b111 .!
b10 /!
b0 0!
b1011100010 2!
b10 3!
b111 4!
b10 5!
b0 6!
0;"
0'
b0 %"
b10000000000000000000000000000000000000000000000000000111001001100000000000000000000000000010000 L
b10000000000000000000000000000000000000000000000000000111 O
b10000000000000000000000000000000000000000000000000000111 P
b111 Q
b10000000000000 T
b10000000000000000000000000000000000000000000000000000111 V
b111 W
b0 Z
b10 [
b10000000000000000000000000000000000000000000000000000111 \
b111 ]
b0 _
b100000000 `
b111 a
b111 b
b111 d
b111 e
b10 w!
0Q#
b10 $"
b0 f"
b10000000000000000000000000000000000000000000000000000111001001100000000000000000000000000010000 1
b10000000000000000000000000000000000000000000000000000111 4
b10000000000000000000000000000000000000000000000000000111 5
b111 6
b10000000000000 9
b10000000000000000000000000000000000000000000000000000111 ;
b111 <
b0 ?
b10 @
b10000000000000000000000000000000000000000000000000000111 A
b111 B
b0 D
b100000000 E
b111 F
b111 G
b111 I
b111 J
0$
b10 ="
b10 <"
b0 >"
1c"
0#
0e"
1_"
08!
0`"
0,"
0'"
1)"
0("
1z!
1l
1(
1,
1+
1'
1Q#
1$
1#
18!
1j
1x!
1("
1'"
1;"
1i
b100 f"
#40000000
0!
#45000000
1!
b10100 k
b101 d"
b10000000000000000000000000000000000000000000000000000111001001100000000000000000000000000010000 '#
b10000 (#
sARITHIMM )#
b10000000000000000000000000000000000000000000000000000111 *#
b10000000000000000000000000000000000000000000000000000111 +#
b111 ,#
b0 -#
b10000000000000 /#
b10000000000000000000000000000000000000000000000000000111 1#
b111 2#
b0 3#
b10 6#
b10000000000000000000000000000000000000000000000000000111 7#
b111 8#
b0 9#
b100000000 ;#
b111 <#
b111 =#
b0 >#
b111 ?#
b111 @#
b0 A#
1E#
b10 L#
b110100000 F#
b1101 H#
0i"
b1 B#
b10100 &
1h"
1j!
0D#
b1011100010001001100000000000000000000000000010100 o
b10100 p
b10000000000000000000000000000000000000000000000000000111001001100000000000000000000000000010100 L
b10100 M
1i!
b110100000 d!
b0 e!
b1101 f!
1k!
b10100 %
b10000000000000000000000000000000000000000000000000000111001001100000000000000000000000000010000 9!
b10000 :!
b10000000000000000000000000000000000000000000000000000111 <!
b10000000000000000000000000000000000000000000000000000111 =!
b111 >!
b10000000000000 A!
b10000000000000000000000000000000000000000000000000000111 C!
b111 D!
b0 G!
b10 H!
b10000000000000000000000000000000000000000000000000000111 I!
b111 J!
b0 L!
b100000000 M!
b111 N!
b111 O!
b111 Q!
b111 R!
sAND V!
b10000000000000000000000000000000000000000000000000000111001001100000000000000000000000000010100 1
b10100 2
b10 X!
1/"
b101 O#
b0 U!
b0 c!
b1101 g!
1."
b101 N#
b0 r!
b10010000000100011 R#
b10 s!
b0 -"
b1101 0"
14"
1a"
b11111111111111111111111111111101 g"
b10010000000100011 *
1m!
b0 b"
b10 o!
b10 p!
b0 q!
1l!
b11111111111111111111111111111110 g"
b10010000000100011 )
b1001000000010001100000000000000000000000000010100 o
sMEMORYSTORE q
b1001000000 r
b1001000000 s
b0 t
b10 u
b1001000000 y
b0 z
b10 {
b1001000000 ~
b0 !!
b10010 "!
b1001000000 #!
b0 $!
b10 %!
b1001000000 )!
b0 *!
b10010 +!
b1001000000 ,!
b0 -!
b10 .!
b1001000000 2!
b0 3!
b10 4!
0y!
b0 w!
b10 &"
b10010001100000000000000000000000000010100 L
sMEMORYSTORE N
b10 O
b10 P
b10 Q
b0 T
b10 V
b10 W
b0 [
b10 \
b10 ]
b0 `
b10 a
b10 b
b10 d
b10 e
1+"
1*"
b10010001100000000000000000000000000010100 1
sMEMORYSTORE 3
b10 4
b10 5
b10 6
b0 9
b10 ;
b10 <
b0 @
b10 A
b10 B
b0 E
b10 F
b10 G
b10 I
b10 J
0z!
0x!
b0 <"
0j
0l
0;"
b1 f"
0(
0i
0,
b0 f"
0+
0'
0Q#
0$
0#
08!
0*"
0("
0'"
0+"
#50000000
0!
#55000000
1!
b1101 ?"
b100 d"
b10 I#
b10 J#
b0 K#
0E#
b1 L#
b11 B#
1D#
b1101 }!
0Z!
1e"
b110100000000000000000000000000000000000000000000010010001100000000000000000000000000010100 L
b110100000000000000000000000000000000000000000000010 O
b110100000000000000000000000000000000000000000000010 P
b110100000 T
b110100000000000000000000000000000000000000000000010 V
b110100000 Z
b110100000000000000000000000000000000000000000000010 \
b1101 `
1`"
0Y!
b10 d!
b10 e!
b0 f!
1,"
b110100000000000000000000000000000000000000000000010010001100000000000000000000000000010100 1
b110100000000000000000000000000000000000000000000010 4
b110100000000000000000000000000000000000000000000010 5
b110100000 9
b110100000000000000000000000000000000000000000000010 ;
b110100000 ?
b110100000000000000000000000000000000000000000000010 A
b1101 E
0u!
b0 s!
b10 c!
b0 g!
1z!
b10 -"
b0 o!
b0 p!
0t!
b0 0"
1l
b10 b"
1(
b11111111111111111111111111111011 g"
1,
1+
1'
1Q#
1$
1#
18!
1+"
1*"
1("
1j
1'"
1i
#60000000
0!
#65000000
1!
b11000 k
b0 d"
b11 L#
b110100000000000000000000000000000000000000000000010010001100000000000000000000000000010100 j"
b10100 k"
sMEMORYSTORE l"
b110100000000000000000000000000000000000000000000010 m"
b110100000000000000000000000000000000000000000000010 n"
b10 o"
b110100000 r"
b110100000000000000000000000000000000000000000000010 t"
b10 u"
b110100000 x"
b110100000000000000000000000000000000000000000000010 z"
b10 {"
b0 }"
b1101 ~"
b10 !#
b10 "#
b10 $#
b10 %#
1i"
b10 B#
b11000 &
0h"
1Z!
0j!
b1001000000010001100000000000000000000000000011000 o
b11000 p
b110100000000000000000000000000000000000000000000010010001100000000000000000000000000011000 L
b11000 M
0i!
0k!
b11000 %
1Y!
b110100000000000000000000000000000000000000000000010010001100000000000000000000000000010100 9!
b10100 :!
sMEMORYSTORE ;!
b110100000000000000000000000000000000000000000000010 <!
b110100000000000000000000000000000000000000000000010 =!
b10 >!
b110100000 A!
b110100000000000000000000000000000000000000000000010 C!
b10 D!
b110100000 G!
b0 H!
b110100000000000000000000000000000000000000000000010 I!
b10 J!
b1101 M!
b10 N!
b10 O!
b10 Q!
b10 R!
1^!
sADDSUB V!
sNONE n!
b110100000000000000000000000000000000000000000000010010001100000000000000000000000000011000 1
b11000 2
b0 X!
0/"
b110 O#
1u!
0Y!
b10 s!
0[!
0."
1_!
b110 N#
1`!
b1101 ]!
b100010010001000100011 R#
0u!
b0 s!
04"
0a"
0m!
b100010010001000100011 *
b11111111111111111111111111111111 g"
0l!
b100010010001000100011 )
b10001001000100010001100000000000000000000000000011000 o
b10001001000100 r
b10001001000100 s
b100 t
b1 w
b10001001000100 y
b100 z
b1 }
b10001001000100 ~
b100 !!
b100010010 "!
b10001001000100 #!
b100 $!
b1 '!
b10001001000100 )!
b100 *!
b100010010 +!
b10001001000100 ,!
b100 -!
b1 0!
b10001001000100 2!
b100 3!
b1 6!
b1 %"
b110100000000000000000000000000000000000000000100010010001100000000000000000000000000011000 L
b110100000000000000000000000000000000000000000100010 O
b110100000000000000000000000000000000000000000100010 P
b100 R
b110100000000000000000000000000000000000000000100010 V
b100 X
b110100000000000000000000000000000000000000000100010 \
b100 ^
b100010 a
b1 c
b100010 d
b1 f
b100 w!
b110100000000000000000000000000000000000000000100010010001100000000000000000000000000011000 1
b110100000000000000000000000000000000000000000100010 4
b110100000000000000000000000000000000000000000100010 5
b100 7
b110100000000000000000000000000000000000000000100010 ;
b100 =
b110100000000000000000000000000000000000000000100010 A
b100 C
b100010 F
b1 H
b100010 I
b1 K
b100 <"
b1000 }!
b1 >"
b100000000000000000000000000000000000000000000100010010001100000000000000000000000000011000 L
b100000000000000000000000000000000000000000000100010 O
b100000000000000000000000000000000000000000000100010 P
b100000000 T
b100000000000000000000000000000000000000000000100010 V
b100000000 Z
b100000000000000000000000000000000000000000000100010 \
b1000 `
b100000000000000000000000000000000000000000000100010010001100000000000000000000000000011000 1
b100000000000000000000000000000000000000000000100010 4
b100000000000000000000000000000000000000000000100010 5
b100000000 9
b100000000000000000000000000000000000000000000100010 ;
b100000000 ?
b100000000000000000000000000000000000000000000100010 A
b1000 E
1a!
1[!
#70000000
0!
#75000000
1!
b11100 k
b100000000000000000000000000000000000000000000100010010001100000000000000000000000000011000 '#
b11000 (#
sMEMORYSTORE )#
b100000000000000000000000000000000000000000000100010 *#
b100000000000000000000000000000000000000000000100010 +#
b10 ,#
b100 -#
b100000000 /#
b100000000000000000000000000000000000000000000100010 1#
b10 2#
b100 3#
b100000000 5#
b0 6#
b100000000000000000000000000000000000000000000100010 7#
b10 8#
b100 9#
b1000 ;#
b100010 <#
b10 =#
b1 >#
b100010 ?#
b10 @#
b1 A#
0i"
b1 B#
b10001001000100010001100000000000000000000000000011100 o
b11100 p
b11100 &
1h"
b100000000000000000000000000000000000000000000100010010001100000000000000000000000000011000 9!
b11000 :!
b100000000000000000000000000000000000000000000100010 <!
b100000000000000000000000000000000000000000000100010 =!
b100 ?!
b100000000 A!
b100000000000000000000000000000000000000000000100010 C!
b100 E!
b100000000 G!
b100000000000000000000000000000000000000000000100010 I!
b100 K!
b1000 M!
b100010 N!
b1 P!
b100010 Q!
b1 S!
b11100 %
b100000000000000000000000000000000000000000000100010010001100000000000000000000000000011100 L
b11100 M
b100000000000000000000000000000000000000000000100010010001100000000000000000000000000011100 1
b11100 2
b111 O#
b100 \!
b111 N#
b1000 ]!
b0 R#
b0 *
b0 )
b11100 o
s[unknown] q
b0 r
b0 s
b0 t
b0 u
b0 v
b0 w
b0 y
b0 z
b0 {
b0 |
b0 }
b0 ~
b0 !!
b0 "!
b0 #!
b0 $!
b0 %!
b0 &!
b0 '!
b0 )!
b0 *!
b0 +!
b0 ,!
b0 -!
b0 .!
b0 /!
b0 0!
b0 2!
b0 3!
b0 4!
b0 5!
b0 6!
b0 %"
1!"
b11100 L
s[unknown] N
b0 O
b0 P
b0 Q
b0 R
b0 T
b0 V
b0 W
b0 X
b0 Z
b0 \
b0 ]
b0 ^
b0 `
b0 a
b0 b
b0 c
b0 d
b0 e
b0 f
b0 &"
b0 w!
b0 $"
1{!
1~!
1""
0+"
0*"
b11100 1
s[unknown] 3
b0 4
b0 5
b0 6
b0 7
b0 9
b0 ;
b0 <
b0 =
b0 ?
b0 A
b0 B
b0 C
b0 E
b0 F
b0 G
b0 H
b0 I
b0 J
b0 K
0("
b1101 }!
0j
b1101 |!
b0 ="
0l
b0 -"
01"
0'"
b0 <"
b0 >"
0(
b0 b"
0,
0i
0+
0'
0Q#
0$
0#
08!
0a!
0[!
1a!
1[!
#80000000
0!
#85000000
1!
b11 B#
0Z!
0_!
0`!
0a!
0[!
#90000000
0!
#95000000
1!
#100000000
0!
#105000000
1!
#110000000
0!
#115000000
1!
#120000000
0!
#125000000
1!
#130000000
0!
#135000000
1!
#140000000
0!
#145000000
1!
#150000000
0!
#155000000
1!
#160000000
0!
#165000000
1!
#170000000
0!
#175000000
1!
#180000000
0!
#185000000
1!
#190000000
0!
#195000000
1!
#200000000
0!
#205000000
1!
#210000000
0!
#215000000
1!
#220000000
0!
#225000000
1!
#230000000
0!
#235000000
1!
#240000000
0!
#245000000
1!
#250000000
0!
#255000000
1!
#260000000
0!
#265000000
1!
#270000000
0!
#275000000
1!
#280000000
0!
#285000000
1!
#290000000
0!
#295000000
1!
#300000000
0!
#305000000
1!
#310000000
0!
#315000000
1!
#320000000
0!
#325000000
1!
#330000000
0!
#335000000
1!
#340000000
0!
#345000000
1!
#350000000
0!
#355000000
1!
#360000000
0!
#365000000
1!
#370000000
0!
#375000000
1!
#380000000
0!
#385000000
1!
#390000000
0!
#395000000
1!
#400000000
0!
#405000000
1!
#410000000
0!
#415000000
1!
#420000000
0!
#425000000
1!
#430000000
0!
#435000000
1!
#440000000
0!
#445000000
1!
#450000000
0!
#455000000
1!
#460000000
0!
#465000000
1!
#470000000
0!
#475000000
1!
#480000000
0!
#485000000
1!
#490000000
0!
#495000000
1!
#500000000
0!
#505000000
1!
#510000000
0!
#515000000
1!
#520000000
0!
#525000000
1!
#530000000
0!
#535000000
1!
#540000000
0!
#545000000
1!
#550000000
0!
#555000000
1!
#560000000
0!
#565000000
1!
#570000000
0!
#575000000
1!
#580000000
0!
#585000000
1!
#590000000
0!
#595000000
1!
#600000000
0!
#605000000
1!
#610000000
0!
#615000000
1!
#620000000
0!
#625000000
1!
#630000000
0!
#635000000
1!
#640000000
0!
#645000000
1!
#650000000
0!
#655000000
1!
#660000000
0!
#665000000
1!
#670000000
0!
#675000000
1!
#680000000
0!
#685000000
1!
#690000000
0!
#695000000
1!
#700000000
0!
#705000000
1!
#710000000
0!
#715000000
1!
#720000000
0!
#725000000
1!
#730000000
0!
#735000000
1!
#740000000
0!
#745000000
1!
#750000000
0!
#755000000
1!
#760000000
0!
#765000000
1!
#770000000
0!
#775000000
1!
#780000000
0!
#785000000
1!
#790000000
0!
#795000000
1!
#800000000
0!
#805000000
1!
#810000000
0!
#815000000
1!
#820000000
0!
#825000000
1!
#830000000
0!
#835000000
1!
#840000000
0!
#845000000
1!
#850000000
0!
#855000000
1!
#860000000
0!
#865000000
1!
#870000000
0!
#875000000
1!
#880000000
0!
#885000000
1!
#890000000
0!
#895000000
1!
#900000000
0!
#905000000
1!
#910000000
0!
#915000000
1!
#920000000
0!
#925000000
1!
#930000000
0!
#935000000
1!
#940000000
0!
#945000000
1!
#950000000
0!
#955000000
1!
#960000000
0!
#965000000
1!
#970000000
0!
#975000000
1!
#980000000
0!
#985000000
1!
#990000000
0!
#995000000
1!
#1000000000
