/* Generated by Amaranth Yosys 0.40 (PyPI ver 0.40.0.0.post101, git sha1 a1bb0255d) */

(* top =  1  *)
(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:27" *)
(* generator = "Amaranth" *)
module risc_project(axi_wready, axi_arready, axi_rdata, axi_rvalid, axi_bresp, axi_bvalid, prog_awready, prog_wready, prog_arready, prog_rdata, prog_rvalid, prog_bresp, prog_bvalid, direct_awready, direct_wready, direct_arready, direct_rdata, direct_rvalid, direct_bresp, direct_bvalid, rx
, clk, rst, axi_awvalid, axi_awaddr, axi_wdata, axi_wvalid, axi_arvalid, axi_araddr, axi_rready, axi_bready, prog_awvalid, prog_awaddr, prog_wdata, prog_wvalid, prog_arvalid, prog_araddr, prog_rready, prog_bready, direct_awvalid, direct_awaddr, direct_wdata
, direct_wvalid, direct_arvalid, direct_araddr, direct_rready, direct_bready, tx, axi_awready);
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:92" *)
  output [31:0] axi_araddr;
  wire [31:0] axi_araddr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:97" *)
  wire [31:0] \axi_araddr$77 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:96" *)
  input axi_arready;
  wire axi_arready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:96" *)
  wire \axi_arready$78 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:102" *)
  output axi_arvalid;
  wire axi_arvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:95" *)
  wire \axi_arvalid$79 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:92" *)
  output [31:0] axi_awaddr;
  wire [31:0] axi_awaddr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:91" *)
  wire [31:0] \axi_awaddr$80 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:90" *)
  input axi_awready;
  wire axi_awready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:90" *)
  wire \axi_awready$81 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:102" *)
  output axi_awvalid;
  wire axi_awvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire \axi_awvalid$82 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:102" *)
  output axi_bready;
  wire axi_bready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:102" *)
  wire \axi_bready$83 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:101" *)
  input [1:0] axi_bresp;
  wire [1:0] axi_bresp;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:101" *)
  wire [1:0] \axi_bresp$84 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:103" *)
  input axi_bvalid;
  wire axi_bvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:103" *)
  wire \axi_bvalid$85 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:98" *)
  input [31:0] axi_rdata;
  wire [31:0] axi_rdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:98" *)
  wire [31:0] \axi_rdata$86 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:102" *)
  output axi_rready;
  wire axi_rready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:100" *)
  wire \axi_rready$87 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:99" *)
  input axi_rvalid;
  wire axi_rvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:99" *)
  wire \axi_rvalid$88 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:92" *)
  output [31:0] axi_wdata;
  wire [31:0] axi_wdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:92" *)
  wire [31:0] \axi_wdata$89 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:94" *)
  input axi_wready;
  wire axi_wready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:94" *)
  wire \axi_wready$90 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:102" *)
  output axi_wvalid;
  wire axi_wvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:93" *)
  wire \axi_wvalid$91 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:65" *)
  wire [7:0] command_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:67" *)
  wire command_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:66" *)
  wire command_tvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:65" *)
  wire [7:0] consume_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:67" *)
  wire consume_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:66" *)
  wire consume_tvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:92" *)
  output [31:0] direct_araddr;
  wire [31:0] direct_araddr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:96" *)
  input direct_arready;
  wire direct_arready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:95" *)
  output direct_arvalid;
  wire direct_arvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:92" *)
  output [31:0] direct_awaddr;
  wire [31:0] direct_awaddr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:90" *)
  input direct_awready;
  wire direct_awready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  output direct_awvalid;
  wire direct_awvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:102" *)
  output direct_bready;
  wire direct_bready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:101" *)
  input [1:0] direct_bresp;
  wire [1:0] direct_bresp;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:103" *)
  input direct_bvalid;
  wire direct_bvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:98" *)
  input [31:0] direct_rdata;
  wire [31:0] direct_rdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:100" *)
  output direct_rready;
  wire direct_rready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:99" *)
  input direct_rvalid;
  wire direct_rvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:92" *)
  output [31:0] direct_wdata;
  wire [31:0] direct_wdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:94" *)
  input direct_wready;
  wire direct_wready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:93" *)
  output direct_wvalid;
  wire direct_wvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire produce_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] produce_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire produce_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] produce_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire produce_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:65" *)
  wire [7:0] produce_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:67" *)
  wire produce_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:66" *)
  wire produce_tvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] produce_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire produce_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:92" *)
  output [31:0] prog_araddr;
  wire [31:0] prog_araddr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:96" *)
  input prog_arready;
  wire prog_arready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:102" *)
  output prog_arvalid;
  wire prog_arvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:92" *)
  output [31:0] prog_awaddr;
  wire [31:0] prog_awaddr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:90" *)
  input prog_awready;
  wire prog_awready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:102" *)
  output prog_awvalid;
  wire prog_awvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:102" *)
  output prog_bready;
  wire prog_bready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:101" *)
  input [1:0] prog_bresp;
  wire [1:0] prog_bresp;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:103" *)
  input prog_bvalid;
  wire prog_bvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:98" *)
  input [31:0] prog_rdata;
  wire [31:0] prog_rdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:102" *)
  output prog_rready;
  wire prog_rready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:99" *)
  input prog_rvalid;
  wire prog_rvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:92" *)
  output [31:0] prog_wdata;
  wire [31:0] prog_wdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:94" *)
  input prog_wready;
  wire prog_wready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:102" *)
  output prog_wvalid;
  wire prog_wvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:65" *)
  wire [7:0] reply_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:67" *)
  wire reply_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:66" *)
  wire reply_tvalid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:105" *)
  input rx;
  wire rx;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:105" *)
  wire \rx$50 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:18" *)
  output tx;
  wire tx;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:18" *)
  wire \tx$49 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire wish_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] wish_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire wish_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] wish_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire wish_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] wish_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire wish_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:32" *)
  \risc_project.bridge  bridge (
    .clk(clk),
    .command_tdata(command_tdata),
    .command_tready(produce_tready),
    .command_tvalid(command_tvalid),
    .produce_ack(produce_ack),
    .produce_addr(wish_addr),
    .produce_cyc(wish_cyc),
    .produce_stb(wish_stb),
    .produce_w_data(wish_w_data),
    .produce_w_en(wish_w_en),
    .reply_tdata(consume_tdata),
    .reply_tready(reply_tready),
    .reply_tvalid(consume_tvalid),
    .rst(rst)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:42" *)
  \risc_project.bridge_to_axi  bridge_to_axi (
    .axi_arready(direct_arready),
    .axi_arvalid(direct_arvalid),
    .axi_awready(direct_awready),
    .axi_awvalid(direct_awvalid),
    .axi_bready(direct_bready),
    .axi_bvalid(direct_bvalid),
    .axi_rready(direct_rready),
    .axi_rvalid(direct_rvalid),
    .axi_wready(direct_wready),
    .axi_wvalid(direct_wvalid),
    .clk(clk),
    .rst(rst),
    .wish_ack(produce_ack),
    .wish_cyc(wish_cyc),
    .wish_stb(wish_stb),
    .wish_w_en(wish_w_en)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:30" *)
  \risc_project.uart_rx  uart_rx (
    .clk(clk),
    .produce_tdata(command_tdata),
    .produce_tvalid(command_tvalid),
    .r_en(produce_tready),
    .rst(rst),
    .rx(rx)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:29" *)
  \risc_project.uart_tx  uart_tx (
    .clk(clk),
    .consume_tready(reply_tready),
    .rst(rst),
    .tx(tx),
    .w_data(consume_tdata),
    .w_en(consume_tvalid)
  );
  assign \tx$49  = tx;
  assign \rx$50  = rx;
  assign reply_tdata = consume_tdata;
  assign consume_tready = reply_tready;
  assign reply_tvalid = consume_tvalid;
  assign produce_tdata = command_tdata;
  assign command_tready = produce_tready;
  assign produce_tvalid = command_tvalid;
  assign wish_ack = produce_ack;
  assign produce_addr = wish_addr;
  assign produce_cyc = wish_cyc;
  assign produce_r_data = 32'd0;
  assign wish_r_data = 32'd0;
  assign produce_stb = wish_stb;
  assign produce_w_data = wish_w_data;
  assign produce_w_en = wish_w_en;
  assign \axi_araddr$77  = 32'd0;
  assign \axi_arready$78  = direct_arready;
  assign \axi_arvalid$79  = direct_arvalid;
  assign \axi_awaddr$80  = 32'd0;
  assign \axi_awready$81  = direct_awready;
  assign \axi_awvalid$82  = direct_awvalid;
  assign \axi_bready$83  = direct_bready;
  assign \axi_bresp$84  = direct_bresp;
  assign \axi_bvalid$85  = direct_bvalid;
  assign \axi_rdata$86  = direct_rdata;
  assign \axi_rready$87  = direct_rready;
  assign \axi_rvalid$88  = direct_rvalid;
  assign \axi_wdata$89  = 32'd0;
  assign \axi_wready$90  = direct_wready;
  assign \axi_wvalid$91  = direct_wvalid;
  assign axi_awvalid = 1'h0;
  assign axi_awaddr = 32'd0;
  assign axi_wdata = 32'd0;
  assign axi_wvalid = 1'h0;
  assign axi_arvalid = 1'h0;
  assign axi_araddr = 32'd0;
  assign axi_rready = 1'h0;
  assign axi_bready = 1'h0;
  assign prog_awvalid = 1'h0;
  assign prog_awaddr = 32'd0;
  assign prog_wdata = 32'd0;
  assign prog_wvalid = 1'h0;
  assign prog_arvalid = 1'h0;
  assign prog_araddr = 32'd0;
  assign prog_rready = 1'h0;
  assign prog_bready = 1'h0;
  assign direct_awaddr = 32'd0;
  assign direct_wdata = 32'd0;
  assign direct_araddr = 32'd0;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:33" *)
(* generator = "Amaranth" *)
module \risc_project.bridge (rst, reply_tready, command_tvalid, command_tdata, command_tready, produce_stb, produce_cyc, reply_tvalid, reply_tdata, produce_addr, produce_w_data, produce_w_en, produce_ack, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$1  = 0;
  wire [7:0] \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire [2:0] \$15 ;
  wire \$16 ;
  wire [2:0] \$17 ;
  wire \$18 ;
  wire [2:0] \$19 ;
  wire \$2 ;
  wire \$20 ;
  reg [31:0] \$21 ;
  reg [31:0] \$22 ;
  reg \$23 ;
  reg [1:0] \$24 ;
  reg [1:0] \$25 ;
  reg [2:0] \$26 ;
  reg [7:0] \$27 ;
  reg [31:0] \$28 ;
  reg \$29 ;
  wire \$3 ;
  wire [5:0] \$30 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:39" *)
  reg [31:0] arg = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  reg bus_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire bus_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire bus_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [7:0] bus_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire bus_w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:65" *)
  input [7:0] command_tdata;
  wire [7:0] command_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:67" *)
  output command_tready;
  reg command_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:66" *)
  input command_tvalid;
  wire command_tvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:36" *)
  reg [1:0] counter = 2'h0;
  (* init = 1'h1 *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:41" *)
  wire ext_reset;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:38" *)
  reg [7:0] prefix = 8'h00;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  input produce_ack;
  wire produce_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  output [31:0] produce_addr;
  reg [31:0] produce_addr = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  output produce_cyc;
  reg produce_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] produce_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  output produce_stb;
  reg produce_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  output [31:0] produce_w_data;
  reg [31:0] produce_w_data = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  output produce_w_en;
  reg produce_w_en = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:65" *)
  output [7:0] reply_tdata;
  reg [7:0] reply_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:67" *)
  input reply_tready;
  wire reply_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:66" *)
  output reply_tvalid;
  reg reply_tvalid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:35" *)
  reg [1:0] size = 2'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:29" *)
  reg soft_reset = 1'h1;
  assign \$30  = counter * (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:138" *) 4'h8;
  assign \$1  = arg >> \$30 ;
  assign \$2  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:163" *) command_tvalid;
  assign \$3  = \$6  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:163" *) \$2 ;
  assign \$6  = ! (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) fsm_state;
  assign \$7  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 1'h1;
  assign \$8  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h2;
  assign \$9  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h3;
  assign \$10  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h4;
  assign \$11  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h5;
  assign \$12  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h6;
  assign \$13  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h7;
  assign \$14  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:96" *) counter;
  assign \$15  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:103" *) 1'h1;
  assign \$16  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:108" *) counter;
  assign \$17  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:111" *) 1'h1;
  assign \$18  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:141" *) counter;
  assign \$19  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:144" *) 1'h1;
  assign \$20  = reply_tvalid & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:160" *) reply_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  always @(posedge clk)
    produce_addr <= \$21 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  always @(posedge clk)
    produce_w_data <= \$22 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  always @(posedge clk)
    produce_w_en <= \$23 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:35" *)
  always @(posedge clk)
    size <= \$24 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:36" *)
  always @(posedge clk)
    counter <= \$25 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  always @(posedge clk)
    fsm_state <= \$26 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:38" *)
  always @(posedge clk)
    prefix <= \$27 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:39" *)
  always @(posedge clk)
    arg <= \$28 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:41" *)
  always @(posedge clk)
    soft_reset <= \$29 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    command_tready = 1'h0;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          command_tready = 1'h1;
      3'h1:
          command_tready = 1'h1;
      3'h5:
          command_tready = 1'h1;
      3'h6:
          /* empty */;
      3'h2:
          /* empty */;
      3'h7:
          /* empty */;
      3'h4:
          /* empty */;
      3'h3:
          command_tready = reply_tready;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    produce_stb = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          produce_stb = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    produce_cyc = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          produce_cyc = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    reply_tvalid = 1'h0;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          /* empty */;
      3'h2:
          reply_tvalid = 1'h1;
      3'h7:
          reply_tvalid = 1'h1;
      3'h4:
          reply_tvalid = 1'h1;
      3'h3:
          reply_tvalid = command_tvalid;
    endcase
    if (\$3 ) begin
      if (\$5 ) begin
        reply_tvalid = 1'h1;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    reply_tdata = 8'h00;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          /* empty */;
      3'h2:
          reply_tdata = prefix;
      3'h7:
          reply_tdata = \$1 ;
      3'h4:
          reply_tdata = 8'h0a;
      3'h3:
          reply_tdata = command_tdata;
    endcase
    if (\$3 ) begin
      if (\$5 ) begin
        reply_tdata = 8'h00;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    bus_ack = 1'h0;
    if (\$3 ) begin
      if (\$5 ) begin
        bus_ack = reply_tready;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$21  = produce_addr;
    casez (fsm_state)
      3'h0:
          \$21  = 32'd0;
      3'h1:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (counter)
              2'h0:
                  \$21 [7:0] = command_tdata;
              2'h1:
                  \$21 [15:8] = command_tdata;
              2'h2:
                  \$21 [23:16] = command_tdata;
              2'h3:
                  \$21 [31:24] = command_tdata;
            endcase
          end
    endcase
    if (rst) begin
      \$21  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$22  = produce_w_data;
    casez (fsm_state)
      3'h0:
          \$22  = 32'd0;
      3'h1:
          /* empty */;
      3'h5:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (counter)
              2'h0:
                  \$22 [7:0] = command_tdata;
              2'h1:
                  \$22 [15:8] = command_tdata;
              2'h2:
                  \$22 [23:16] = command_tdata;
              2'h3:
                  \$22 [31:24] = command_tdata;
            endcase
          end
    endcase
    if (rst) begin
      \$22  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$23  = produce_w_en;
    casez (fsm_state)
      3'h0:
        begin
          \$23  = 1'h0;
          if (command_tvalid) begin
            casez (command_tdata)
              8'h77:
                  \$23  = 1'h1;
              8'h57:
                  \$23  = 1'h1;
            endcase
          end
        end
    endcase
    if (rst) begin
      \$23  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$24  = size;
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            casez (command_tdata)
              8'h77:
                  \$24  = 2'h0;
              8'h57:
                  \$24  = 2'h3;
              8'h72:
                  \$24  = 2'h0;
              8'h52:
                  \$24  = 2'h3;
            endcase
          end
    endcase
    if (rst) begin
      \$24  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$25  = counter;
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (command_tdata)
              8'h77:
                  \$25  = 2'h0;
              8'h57:
                  \$25  = 2'h3;
              8'h72:
                  \$25  = 2'h0;
              8'h52:
                  \$25  = 2'h3;
              8'h49:
                  \$25  = 2'h0;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  /* empty */;
              default:
                  \$25  = 2'h0;
            endcase
          end
      3'h1:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            if (\$14 ) begin
              \$25  = size;
            end else begin
              \$25  = \$15 [1:0];
            end
          end
      3'h5:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            if (\$16 ) begin
            end else begin
              \$25  = \$17 [1:0];
            end
          end
      3'h6:
          if (produce_ack) begin
            (* full_case = 32'd1 *)
            if (produce_w_en) begin
              \$25  = size;
            end else begin
              \$25  = size;
            end
          end
      3'h2:
          /* empty */;
      3'h7:
          if (reply_tready) begin
            (* full_case = 32'd1 *)
            if (\$18 ) begin
            end else begin
              \$25  = \$19 [1:0];
            end
          end
    endcase
    if (rst) begin
      \$25  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$26  = fsm_state;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (command_tdata)
              8'h77:
                  \$26  = 3'h1;
              8'h57:
                  \$26  = 3'h1;
              8'h72:
                  \$26  = 3'h1;
              8'h52:
                  \$26  = 3'h1;
              8'h49:
                  \$26  = 3'h2;
              8'h65:
                  \$26  = 3'h3;
              8'h0a:
                  \$26  = 3'h4;
              8'h78:
                  /* empty */;
              default:
                  \$26  = 3'h2;
            endcase
          end
      3'h1:
          if (command_tvalid) begin
            if (\$14 ) begin
              (* full_case = 32'd1 *)
              if (produce_w_en) begin
                \$26  = 3'h5;
              end else begin
                \$26  = 3'h6;
              end
            end
          end
      3'h5:
          if (command_tvalid) begin
            if (\$16 ) begin
              \$26  = 3'h6;
            end
          end
      3'h6:
          if (produce_ack) begin
            \$26  = 3'h2;
          end
      3'h2:
          if (reply_tready) begin
            \$26  = 3'h7;
          end
      3'h7:
          if (reply_tready) begin
            if (\$18 ) begin
              \$26  = 3'h0;
            end
          end
      3'h4:
          if (reply_tready) begin
            \$26  = 3'h0;
          end
      3'h3:
          if (\$20 ) begin
            \$26  = 3'h0;
          end
    endcase
    if (rst) begin
      \$26  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$27  = prefix;
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (command_tdata)
              8'h77:
                  /* empty */;
              8'h57:
                  /* empty */;
              8'h72:
                  /* empty */;
              8'h52:
                  /* empty */;
              8'h49:
                  \$27  = 8'h49;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  /* empty */;
              default:
                  \$27  = 8'h25;
            endcase
          end
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          if (produce_ack) begin
            (* full_case = 32'd1 *)
            if (produce_w_en) begin
              \$27  = 8'h57;
            end else begin
              \$27  = 8'h52;
            end
          end
    endcase
    if (rst) begin
      \$27  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$28  = arg;
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (command_tdata)
              8'h77:
                  /* empty */;
              8'h57:
                  /* empty */;
              8'h72:
                  /* empty */;
              8'h52:
                  /* empty */;
              8'h49:
                  \$28  = 32'd68;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  /* empty */;
              default:
                  \$28  = { 24'h000000, command_tdata };
            endcase
          end
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          if (produce_ack) begin
            (* full_case = 32'd1 *)
            if (produce_w_en) begin
              \$28  = produce_addr;
            end else begin
              \$28  = 32'd0;
            end
          end
    endcase
    if (rst) begin
      \$28  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$29  = soft_reset;
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            casez (command_tdata)
              8'h77:
                  /* empty */;
              8'h57:
                  /* empty */;
              8'h72:
                  /* empty */;
              8'h52:
                  /* empty */;
              8'h49:
                  /* empty */;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  \$29  = 1'h0;
            endcase
          end
    endcase
    if (rst) begin
      \$29  = 1'h1;
    end
  end
  assign ext_reset = soft_reset;
  assign bus_stb = 1'h0;
  assign bus_cyc = 1'h0;
  assign bus_w_en = 1'h0;
  assign bus_w_data = 8'h00;
  assign produce_r_data = 32'd0;
  assign \$4  = 1'h0;
  assign \$5  = 1'h0;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:20" *)
(* generator = "Amaranth" *)
module \risc_project.bridge_to_axi (axi_wready, axi_arready, axi_rvalid, axi_bvalid, clk, rst, axi_awvalid, axi_wvalid, axi_arvalid, axi_rready, wish_stb, wish_cyc, wish_w_en, wish_ack, axi_bready, axi_awready);
  reg \$auto$verilog_backend.cc:2352:dump_module$2  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire \$18 ;
  wire \$19 ;
  wire \$2 ;
  reg \$20 ;
  reg \$21 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:22" *)
  reg address_written = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:96" *)
  input axi_arready;
  wire axi_arready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:95" *)
  output axi_arvalid;
  wire axi_arvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:90" *)
  input axi_awready;
  wire axi_awready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  output axi_awvalid;
  wire axi_awvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:102" *)
  output axi_bready;
  reg axi_bready = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:103" *)
  input axi_bvalid;
  wire axi_bvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:100" *)
  output axi_rready;
  wire axi_rready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:99" *)
  input axi_rvalid;
  wire axi_rvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:94" *)
  input axi_wready;
  wire axi_wready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:93" *)
  output axi_wvalid;
  wire axi_wvalid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  output wish_ack;
  reg wish_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  input wish_cyc;
  wire wish_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  input wish_stb;
  wire wish_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  input wish_w_en;
  wire wish_w_en;
  assign \$1  = wish_w_en & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:25" *) wish_stb;
  assign \$2  = \$1  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:25" *) wish_cyc;
  assign \$3  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:25" *) address_written;
  assign axi_awvalid = \$2  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:25" *) \$3 ;
  assign \$4  = wish_w_en & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:26" *) wish_stb;
  assign \$5  = \$4  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:26" *) wish_cyc;
  assign axi_wvalid = \$5  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:26" *) address_written;
  assign \$6  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:29" *) wish_w_en;
  assign \$7  = \$6  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:29" *) wish_stb;
  assign \$8  = \$7  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:29" *) wish_cyc;
  assign \$9  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:29" *) address_written;
  assign axi_arvalid = \$8  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:29" *) \$9 ;
  assign \$10  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:30" *) wish_w_en;
  assign \$11  = \$10  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:30" *) wish_stb;
  assign \$12  = \$11  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:30" *) wish_cyc;
  assign axi_rready = \$12  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:30" *) address_written;
  assign \$13  = axi_wready & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:36" *) axi_wvalid;
  assign \$14  = axi_rready & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:38" *) axi_rvalid;
  assign \$15  = axi_awvalid & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:42" *) axi_awready;
  assign \$16  = axi_arvalid & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:44" *) axi_arready;
  assign \$17  = axi_rvalid & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:48" *) axi_rready;
  assign \$18  = axi_wvalid & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:52" *) axi_wready;
  assign \$19  = axi_bready & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:55" *) axi_bvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:22" *)
  always @(posedge clk)
    address_written <= \$20 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:102" *)
  always @(posedge clk)
    axi_bready <= \$21 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    (* full_case = 32'd1 *)
    if (wish_w_en) begin
      wish_ack = \$13 ;
    end else begin
      wish_ack = \$14 ;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$20  = address_written;
    if (\$15 ) begin
      \$20  = 1'h1;
    end
    if (\$16 ) begin
      \$20  = 1'h1;
    end
    if (\$17 ) begin
      \$20  = 1'h0;
    end
    if (\$19 ) begin
      \$20  = 1'h0;
    end
    if (rst) begin
      \$20  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$21  = axi_bready;
    if (\$18 ) begin
      \$21  = 1'h1;
    end
    if (\$19 ) begin
      \$21  = 1'h0;
    end
    if (rst) begin
      \$21  = 1'h0;
    end
  end
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:109" *)
(* generator = "Amaranth" *)
module \risc_project.uart_rx (clk, rst, produce_tvalid, produce_tdata, r_en, rx);
  reg \$auto$verilog_backend.cc:2352:dump_module$3  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [7:0] \$14 ;
  wire [7:0] \$15 ;
  wire [8:0] \$16 ;
  wire \$17 ;
  wire [3:0] \$18 ;
  wire \$19 ;
  wire \$2 ;
  wire \$20 ;
  wire \$21 ;
  wire [3:0] \$22 ;
  reg [13:0] \$23 ;
  reg [2:0] \$24 ;
  reg [2:0] \$25 ;
  reg [7:0] \$26 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [14:0] \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:124" *)
  reg [2:0] bit_counter = 3'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:119" *)
  reg [13:0] counter = 14'h0000;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:125" *)
  reg [7:0] data_register = 8'h00;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  output [7:0] produce_tdata;
  wire [7:0] produce_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:67" *)
  wire produce_tready;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output produce_tvalid;
  wire produce_tvalid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:67" *)
  input r_en;
  wire r_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:105" *)
  input rx;
  wire rx;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  reg [7:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  reg w_en;
  assign \$1  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:160" *) counter;
  assign \$2  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:161" *) bit_counter;
  assign \$3  = ! (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) fsm_state;
  assign \$4  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 1'h1;
  assign \$5  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h2;
  assign \$6  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h3;
  assign \$7  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h4;
  assign \$8  = counter > (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:121" *) 1'h0;
  assign \$9  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:122" *) 1'h1;
  assign \$10  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:129" *) rx;
  assign \$11  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:134" *) counter;
  assign \$13  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:143" *) counter;
  assign \$16  = \$14  + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:144" *) \$15 ;
  assign \$17  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:146" *) bit_counter;
  assign \$18  = bit_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:153" *) 1'h1;
  assign \$19  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:155" *) counter;
  assign \$20  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:160" *) counter;
  assign \$21  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:161" *) bit_counter;
  assign \$22  = bit_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:167" *) 1'h1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:119" *)
  always @(posedge clk)
    counter <= \$23 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  always @(posedge clk)
    fsm_state <= \$24 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:124" *)
  always @(posedge clk)
    bit_counter <= \$25 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:125" *)
  always @(posedge clk)
    data_register <= \$26 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:111" *)
  \risc_project.uart_rx.buffer  buffer (
    .clk(clk),
    .r_data(produce_tdata),
    .r_en(r_en),
    .r_rdy(produce_tvalid),
    .rst(rst),
    .w_en(w_en),
    .w_port_data(w_data)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    w_data = 8'h00;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h4:
          /* empty */;
      3'h3:
          if (\$1 ) begin
            if (\$2 ) begin
              w_data = data_register;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    w_en = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h4:
          /* empty */;
      3'h3:
          if (\$1 ) begin
            if (\$2 ) begin
              w_en = 1'h1;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$23  = counter;
    if (\$8 ) begin
      \$23  = \$9 [13:0];
    end
    casez (fsm_state)
      3'h0:
          if (\$10 ) begin
            \$23  = 14'h1458;
          end
      3'h1:
          if (\$11 ) begin
            (* full_case = 32'd1 *)
            if (\$12 ) begin
            end else begin
              \$23  = 14'h28b0;
            end
          end
      3'h2:
          if (\$13 ) begin
            \$23  = 14'h28b0;
          end
      3'h4:
          if (\$19 ) begin
            \$23  = 14'h28b0;
          end
      3'h3:
          if (\$20 ) begin
            (* full_case = 32'd1 *)
            if (\$21 ) begin
            end else begin
              \$23  = 14'h28b0;
            end
          end
    endcase
    if (rst) begin
      \$23  = 14'h0000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$24  = fsm_state;
    casez (fsm_state)
      3'h0:
          if (\$10 ) begin
            \$24  = 3'h1;
          end
      3'h1:
          if (\$11 ) begin
            (* full_case = 32'd1 *)
            if (\$12 ) begin
              \$24  = 3'h0;
            end else begin
              \$24  = 3'h2;
            end
          end
      3'h2:
          if (\$13 ) begin
            if (\$17 ) begin
              \$24  = 3'h3;
            end
          end
      3'h4:
          if (\$19 ) begin
            \$24  = 3'h3;
          end
      3'h3:
          if (\$20 ) begin
            if (\$21 ) begin
              \$24  = 3'h0;
            end
          end
    endcase
    if (rst) begin
      \$24  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$25  = bit_counter;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          if (\$11 ) begin
            (* full_case = 32'd1 *)
            if (\$12 ) begin
            end else begin
              \$25  = 3'h7;
            end
          end
      3'h2:
          if (\$13 ) begin
            (* full_case = 32'd1 *)
            if (\$17 ) begin
              \$25  = 3'h0;
            end else begin
              \$25  = \$18 [2:0];
            end
          end
      3'h4:
          if (\$19 ) begin
            \$25  = 3'h0;
          end
      3'h3:
          if (\$20 ) begin
            (* full_case = 32'd1 *)
            if (\$21 ) begin
            end else begin
              \$25  = \$22 [2:0];
            end
          end
    endcase
    if (rst) begin
      \$25  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$26  = data_register;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          if (\$13 ) begin
            \$26  = \$16 [7:0];
          end
    endcase
    if (rst) begin
      \$26  = 8'h00;
    end
  end
  assign r_data = produce_tdata;
  assign r_rdy = produce_tvalid;
  assign produce_tready = r_en;
  assign \$12  = rx;
  assign \$14  = { 1'h0, data_register[7:1] };
  assign \$15  = { rx, 7'h00 };
endmodule

(* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:144" *)
(* generator = "Amaranth" *)
module \risc_project.uart_rx.buffer (rst, r_rdy, r_data, w_port_data, w_en, r_en, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$4  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [3:0] \$14 ;
  reg [1:0] \$15 ;
  reg [1:0] \$16 ;
  reg [2:0] \$17 ;
  wire [2:0] \$2 ;
  wire \$3 ;
  wire [2:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [3:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  wire [1:0] consume;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  reg [2:0] level = 3'h0;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  wire [1:0] produce;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  output [7:0] r_data;
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  input r_en;
  wire r_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  wire [2:0] r_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg [1:0] r_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [7:0] r_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output r_rdy;
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [7:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  input w_en;
  wire w_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:90" *)
  wire [2:0] w_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg [1:0] w_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  input [7:0] w_port_data;
  wire [7:0] w_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:400" *)
  wire w_port_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  wire w_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:162" *)
  reg [7:0] storage [3:0];
  initial begin
    storage[0] = 8'h00;
    storage[1] = 8'h00;
    storage[2] = 8'h00;
    storage[3] = 8'h00;
  end
  always @(posedge clk) begin
    if (w_port_en)
      storage[w_port_addr] <= w_port_data;
  end
  assign r_data = storage[r_port_addr];
  assign w_rdy = level != (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:153" *) 3'h4;
  assign r_rdy = | (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:154" *) level;
  assign w_port_en = w_en & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:171" *) w_rdy;
  assign \$1  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$2  = w_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$3  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$4  = r_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$5  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$6  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$6 ;
  assign \$8  = \$5  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$7 ;
  assign \$9  = level + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:184" *) 1'h1;
  assign \$10  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$11  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$12  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$11 ;
  assign \$13  = \$10  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$12 ;
  assign \$14  = level - (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:186" *) 1'h1;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  always @(posedge clk)
    w_port_addr <= \$15 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  always @(posedge clk)
    r_port_addr <= \$16 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  always @(posedge clk)
    level <= \$17 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$15  = w_port_addr;
    if (\$1 ) begin
      \$15  = \$2 [1:0];
    end
    if (rst) begin
      \$15  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$16  = r_port_addr;
    if (\$3 ) begin
      \$16  = \$4 [1:0];
    end
    if (rst) begin
      \$16  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$17  = level;
    if (\$8 ) begin
      \$17  = \$9 [2:0];
    end
    if (\$13 ) begin
      \$17  = \$14 [2:0];
    end
    if (rst) begin
      \$17  = 3'h0;
    end
  end
  assign w_level = level;
  assign r_level = level;
  assign produce = w_port_addr;
  assign w_data = w_port_data;
  assign consume = r_port_addr;
  assign r_port_data = r_data;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:22" *)
(* generator = "Amaranth" *)
module \risc_project.uart_tx (rst, consume_tready, tx, w_en, w_data, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$5  = 0;
  wire \$1 ;
  wire [7:0] \$10 ;
  wire \$11 ;
  wire [3:0] \$12 ;
  wire [14:0] \$13 ;
  wire \$14 ;
  wire [14:0] \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire [3:0] \$18 ;
  wire [14:0] \$19 ;
  wire \$2 ;
  reg [7:0] \$20 ;
  reg [13:0] \$21 ;
  reg [2:0] \$22 ;
  reg [2:0] \$23 ;
  reg \$24 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire [14:0] \$7 ;
  wire \$8 ;
  wire [1:0] \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:36" *)
  reg [2:0] byte_counter = 3'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:65" *)
  wire [7:0] consume_tdata;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  output consume_tready;
  wire consume_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:66" *)
  wire consume_tvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:35" *)
  reg [13:0] counter = 14'h0000;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:32" *)
  reg [7:0] data_register = 8'h00;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:33" *)
  reg parity = 1'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  reg r_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:18" *)
  output tx;
  reg tx;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:65" *)
  input [7:0] w_data;
  wire [7:0] w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:66" *)
  input w_en;
  wire w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  wire w_rdy;
  assign \$1  = ! (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) fsm_state;
  assign \$2  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 1'h1;
  assign \$3  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h2;
  assign \$4  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h3;
  assign \$5  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h4;
  assign \$6  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:50" *) counter;
  assign \$7  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:55" *) 1'h1;
  assign \$8  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:59" *) counter;
  assign \$9  = parity + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:60" *) data_register[0];
  assign \$11  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:63" *) byte_counter;
  assign \$12  = byte_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:70" *) 1'h1;
  assign \$13  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:72" *) 1'h1;
  assign \$14  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:76" *) counter;
  assign \$15  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:82" *) 1'h1;
  assign \$16  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:86" *) counter;
  assign \$17  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:87" *) byte_counter;
  assign \$18  = byte_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:90" *) 1'h1;
  assign \$19  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:93" *) 1'h1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:32" *)
  always @(posedge clk)
    data_register <= \$20 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:35" *)
  always @(posedge clk)
    counter <= \$21 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  always @(posedge clk)
    fsm_state <= \$22 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:36" *)
  always @(posedge clk)
    byte_counter <= \$23 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:33" *)
  always @(posedge clk)
    parity <= \$24 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:24" *)
  \risc_project.uart_tx.buffer  buffer (
    .clk(clk),
    .r_data(r_data),
    .r_en(r_en),
    .r_rdy(r_rdy),
    .rst(rst),
    .w_en(w_en),
    .w_port_data(w_data),
    .w_rdy(consume_tready)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    tx = 1'h0;
    casez (fsm_state)
      3'h0:
          tx = 1'h1;
      3'h1:
          tx = 1'h0;
      3'h2:
          tx = data_register[0];
      3'h4:
          tx = parity;
      3'h3:
          tx = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    r_en = 1'h0;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            r_en = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$20  = data_register;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            \$20  = r_data;
          end
      3'h1:
          /* empty */;
      3'h2:
          if (\$8 ) begin
            \$20  = \$10 ;
          end
    endcase
    if (rst) begin
      \$20  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$21  = counter;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            \$21  = 14'h28b0;
          end
      3'h1:
          (* full_case = 32'd1 *)
          if (\$6 ) begin
            \$21  = 14'h28b0;
          end else begin
            \$21  = \$7 [13:0];
          end
      3'h2:
          (* full_case = 32'd1 *)
          if (\$8 ) begin
            \$21  = 14'h28b0;
          end else begin
            \$21  = \$13 [13:0];
          end
      3'h4:
          (* full_case = 32'd1 *)
          if (\$14 ) begin
            \$21  = 14'h28b0;
          end else begin
            \$21  = \$15 [13:0];
          end
      3'h3:
          (* full_case = 32'd1 *)
          if (\$16 ) begin
            (* full_case = 32'd1 *)
            if (\$17 ) begin
            end else begin
              \$21  = 14'h28b0;
            end
          end else begin
            \$21  = \$19 [13:0];
          end
    endcase
    if (rst) begin
      \$21  = 14'h0000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$22  = fsm_state;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            \$22  = 3'h1;
          end
      3'h1:
          if (\$6 ) begin
            \$22  = 3'h2;
          end
      3'h2:
          if (\$8 ) begin
            if (\$11 ) begin
              \$22  = 3'h3;
            end
          end
      3'h4:
          if (\$14 ) begin
            \$22  = 3'h3;
          end
      3'h3:
          if (\$16 ) begin
            if (\$17 ) begin
              \$22  = 3'h0;
            end
          end
    endcase
    if (rst) begin
      \$22  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$23  = byte_counter;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          if (\$6 ) begin
            \$23  = 3'h7;
          end
      3'h2:
          if (\$8 ) begin
            (* full_case = 32'd1 *)
            if (\$11 ) begin
              \$23  = 3'h1;
            end else begin
              \$23  = \$12 [2:0];
            end
          end
      3'h4:
          if (\$14 ) begin
            \$23  = 3'h1;
          end
      3'h3:
          if (\$16 ) begin
            (* full_case = 32'd1 *)
            if (\$17 ) begin
            end else begin
              \$23  = \$18 [2:0];
            end
          end
    endcase
    if (rst) begin
      \$23  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$24  = parity;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          if (\$8 ) begin
            \$24  = \$9 [0];
          end
      3'h4:
          if (\$14 ) begin
            \$24  = 1'h0;
          end
    endcase
    if (rst) begin
      \$24  = 1'h0;
    end
  end
  assign consume_tvalid = w_en;
  assign consume_tdata = w_data;
  assign w_rdy = consume_tready;
  assign \$10  = { 1'h0, data_register[7:1] };
endmodule

(* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:144" *)
(* generator = "Amaranth" *)
module \risc_project.uart_tx.buffer (rst, w_rdy, r_rdy, r_data, r_en, w_en, w_port_data, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$6  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [3:0] \$14 ;
  reg [1:0] \$15 ;
  reg [1:0] \$16 ;
  reg [2:0] \$17 ;
  wire [2:0] \$2 ;
  wire \$3 ;
  wire [2:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [3:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  wire [1:0] consume;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  reg [2:0] level = 3'h0;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  wire [1:0] produce;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  output [7:0] r_data;
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  input r_en;
  wire r_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  wire [2:0] r_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg [1:0] r_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [7:0] r_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output r_rdy;
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [7:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  input w_en;
  wire w_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:90" *)
  wire [2:0] w_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg [1:0] w_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  input [7:0] w_port_data;
  wire [7:0] w_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:400" *)
  wire w_port_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  output w_rdy;
  wire w_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:162" *)
  reg [7:0] storage [3:0];
  initial begin
    storage[0] = 8'h00;
    storage[1] = 8'h00;
    storage[2] = 8'h00;
    storage[3] = 8'h00;
  end
  always @(posedge clk) begin
    if (w_port_en)
      storage[w_port_addr] <= w_port_data;
  end
  assign r_data = storage[r_port_addr];
  assign w_rdy = level != (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:153" *) 3'h4;
  assign r_rdy = | (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:154" *) level;
  assign w_port_en = w_en & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:171" *) w_rdy;
  assign \$1  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$2  = w_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$3  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$4  = r_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$5  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$6  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$6 ;
  assign \$8  = \$5  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$7 ;
  assign \$9  = level + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:184" *) 1'h1;
  assign \$10  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$11  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$12  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$11 ;
  assign \$13  = \$10  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$12 ;
  assign \$14  = level - (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:186" *) 1'h1;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  always @(posedge clk)
    w_port_addr <= \$15 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  always @(posedge clk)
    r_port_addr <= \$16 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  always @(posedge clk)
    level <= \$17 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$15  = w_port_addr;
    if (\$1 ) begin
      \$15  = \$2 [1:0];
    end
    if (rst) begin
      \$15  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$16  = r_port_addr;
    if (\$3 ) begin
      \$16  = \$4 [1:0];
    end
    if (rst) begin
      \$16  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$17  = level;
    if (\$8 ) begin
      \$17  = \$9 [2:0];
    end
    if (\$13 ) begin
      \$17  = \$14 [2:0];
    end
    if (rst) begin
      \$17  = 3'h0;
    end
  end
  assign w_level = level;
  assign r_level = level;
  assign produce = w_port_addr;
  assign w_data = w_port_data;
  assign consume = r_port_addr;
  assign r_port_data = r_data;
endmodule
