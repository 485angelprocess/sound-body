/* Generated by Amaranth Yosys 0.40 (PyPI ver 0.40.0.0.post101, git sha1 a1bb0255d) */

(* top =  1  *)
(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:33" *)
(* generator = "Amaranth" *)
module risc_project(axi_wready, axi_arready, axi_rdata, axi_rvalid, axi_bresp, axi_bvalid, rx, clk, rst, axi_awvalid, axi_awaddr, axi_wdata, axi_wvalid, axi_arvalid, axi_araddr, axi_rready, axi_bready, tx, periph_resetn, axi_awready);
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire a_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire \a_ack$79 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] a_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] \a_addr$82 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire a_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire \a_cyc$84 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] a_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] \a_r_data$85 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire a_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire \a_stb$88 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] a_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] \a_w_data$90 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire a_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire \a_w_en$92 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:111" *)
  output [31:0] axi_araddr;
  wire [31:0] axi_araddr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:117" *)
  wire [31:0] \axi_araddr$149 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:116" *)
  input axi_arready;
  wire axi_arready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:116" *)
  wire \axi_arready$150 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:115" *)
  output axi_arvalid;
  wire axi_arvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:115" *)
  wire \axi_arvalid$151 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:111" *)
  output [31:0] axi_awaddr;
  wire [31:0] axi_awaddr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:111" *)
  wire [31:0] \axi_awaddr$152 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:110" *)
  input axi_awready;
  wire axi_awready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:110" *)
  wire \axi_awready$153 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:109" *)
  output axi_awvalid;
  wire axi_awvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:109" *)
  wire \axi_awvalid$154 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:122" *)
  output axi_bready;
  wire axi_bready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:122" *)
  wire \axi_bready$155 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:121" *)
  input [1:0] axi_bresp;
  wire [1:0] axi_bresp;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:121" *)
  wire [1:0] \axi_bresp$156 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:123" *)
  input axi_bvalid;
  wire axi_bvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:123" *)
  wire \axi_bvalid$157 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:118" *)
  input [31:0] axi_rdata;
  wire [31:0] axi_rdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:118" *)
  wire [31:0] \axi_rdata$158 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:120" *)
  output axi_rready;
  wire axi_rready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:120" *)
  wire \axi_rready$159 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:119" *)
  input axi_rvalid;
  wire axi_rvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:119" *)
  wire \axi_rvalid$160 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:112" *)
  output [31:0] axi_wdata;
  wire [31:0] axi_wdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:112" *)
  wire [31:0] \axi_wdata$161 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:114" *)
  input axi_wready;
  wire axi_wready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:114" *)
  wire \axi_wready$162 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:113" *)
  output axi_wvalid;
  wire axi_wvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:113" *)
  wire \axi_wvalid$163 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire b_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire \b_ack$121 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] b_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] \b_addr$124 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire b_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire \b_cyc$126 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] b_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] \b_r_data$127 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire b_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire \b_stb$130 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] b_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] \b_w_data$132 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire b_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire \b_w_en$134 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire bus_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire \bus_ack$80 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] bus_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] \bus_addr$81 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire bus_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire \bus_cyc$83 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] bus_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] \bus_r_data$86 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire bus_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire \bus_stb$87 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] bus_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] \bus_w_data$89 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire bus_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire \bus_w_en$91 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire c_00_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] c_00_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire c_00_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] c_00_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire c_00_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] c_00_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire c_00_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire c_01_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] c_01_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire c_01_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] c_01_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire c_01_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] c_01_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire c_01_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire c_02_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] c_02_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire c_02_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] c_02_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire c_02_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] c_02_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire c_02_w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:87" *)
  wire [7:0] command_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire command_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire command_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire consume_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire \consume_ack$66 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] consume_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] \consume_addr$67 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire consume_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire \consume_cyc$69 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:87" *)
  wire [7:0] consume_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] consume_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] \consume_r_data$72 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire consume_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire consume_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire \consume_stb$73 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire consume_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] consume_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] \consume_w_data$75 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire consume_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire \consume_w_en$77 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:64" *)
  wire core_reset;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire debug_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] debug_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire debug_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] debug_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire debug_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] debug_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire debug_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:47" *)
  wire debug_reset;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:87" *)
  wire [7:0] error_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:87" *)
  wire [7:0] \error_data$165 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire error_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire \error_ready$167 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire error_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire \error_valid$169 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire p_00_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] p_00_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire p_00_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] p_00_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire p_00_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] p_00_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire p_00_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:31" *)
  output periph_resetn;
  wire periph_resetn;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire produce_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] produce_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire produce_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:87" *)
  wire [7:0] produce_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] produce_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire produce_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire produce_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire produce_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] produce_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire produce_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire prog_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] prog_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire prog_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] prog_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire prog_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] prog_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire prog_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:87" *)
  wire [7:0] reply_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire reply_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire reply_valid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:105" *)
  input rx;
  wire rx;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:105" *)
  wire \rx$21 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:31" *)
  wire soft_reset;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:18" *)
  output tx;
  wire tx;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:18" *)
  wire \tx$20 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire wish_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] wish_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire wish_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] wish_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire wish_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] wish_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire wish_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:48" *)
  \risc_project.bridge  bridge (
    .bus_ack(\a_ack$79 ),
    .bus_cyc(\bus_cyc$83 ),
    .bus_stb(\bus_stb$87 ),
    .bus_w_data(\consume_w_data$75 ),
    .bus_w_en(\consume_w_en$77 ),
    .clk(clk),
    .command_data(command_data),
    .command_ready(produce_ready),
    .command_valid(command_valid),
    .error_data(error_data),
    .error_ready(error_ready),
    .error_valid(error_valid),
    .produce_ack(produce_ack),
    .produce_addr(consume_addr),
    .produce_cyc(consume_cyc),
    .produce_r_data(produce_r_data),
    .produce_stb(consume_stb),
    .produce_w_data(consume_w_data),
    .produce_w_en(consume_w_en),
    .reply_data(consume_data),
    .reply_ready(reply_ready),
    .reply_valid(consume_valid),
    .rst(rst),
    .soft_reset(periph_resetn)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:55" *)
  \risc_project.bridge_sw  bridge_sw (
    .\0_address (c_02_addr),
    .a_ack(a_ack),
    .a_cyc(debug_cyc),
    .a_r_data(a_r_data),
    .a_stb(debug_stb),
    .a_w_data(consume_w_data),
    .a_w_en(consume_w_en),
    .b_ack(\b_ack$121 ),
    .b_cyc(c_02_cyc),
    .b_r_data(\b_r_data$127 ),
    .b_stb(c_02_stb),
    .consume_ack(produce_ack),
    .consume_addr(consume_addr),
    .consume_cyc(consume_cyc),
    .consume_r_data(produce_r_data),
    .consume_stb(consume_stb)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:77" *)
  \risc_project.bus_switch  bus_switch (
    .\0_address (c_01_addr),
    .a_ack(\a_ack$79 ),
    .a_cyc(\bus_cyc$83 ),
    .a_stb(\bus_stb$87 ),
    .a_w_data(\consume_w_data$75 ),
    .a_w_en(\consume_w_en$77 ),
    .b_ack(b_ack),
    .b_cyc(c_01_cyc),
    .b_r_data(b_r_data),
    .b_stb(c_01_stb),
    .consume_ack(bus_ack),
    .consume_addr(\consume_addr$67 ),
    .consume_cyc(\consume_cyc$69 ),
    .consume_r_data(bus_r_data),
    .consume_stb(\consume_stb$73 )
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:69" *)
  \risc_project.core  core (
    .bus_ack(bus_ack),
    .bus_addr(\consume_addr$67 ),
    .bus_cyc(\consume_cyc$69 ),
    .bus_r_data(bus_r_data),
    .bus_stb(\consume_stb$73 ),
    .bus_w_data(\consume_w_data$75 ),
    .bus_w_en(\consume_w_en$77 ),
    .clk(clk),
    .debug_ack(a_ack),
    .debug_addr(consume_addr),
    .\debug_cyc$5 (debug_cyc),
    .debug_r_data(a_r_data),
    .\debug_stb$7 (debug_stb),
    .\debug_w_data$11 (consume_w_data),
    .\debug_w_en$9 (consume_w_en),
    .debug_reset(core_reset),
    .prog_ack(prog_ack),
    .prog_addr(c_00_addr),
    .prog_cyc(c_00_cyc),
    .prog_r_data(prog_r_data),
    .prog_stb(c_00_stb),
    .rst(rst)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:87" *)
  \risc_project.switch  switch (
    .c_00_ack(prog_ack),
    .c_00_addr(c_00_addr),
    .c_00_cyc(c_00_cyc),
    .c_00_r_data(prog_r_data),
    .c_00_stb(c_00_stb),
    .c_01_ack(b_ack),
    .c_01_addr(c_01_addr),
    .c_01_cyc(c_01_cyc),
    .c_01_r_data(b_r_data),
    .c_01_stb(c_01_stb),
    .c_01_w_data(\consume_w_data$75 ),
    .c_01_w_en(\consume_w_en$77 ),
    .c_02_ack(\b_ack$121 ),
    .c_02_addr(c_02_addr),
    .c_02_cyc(c_02_cyc),
    .c_02_r_data(\b_r_data$127 ),
    .c_02_stb(c_02_stb),
    .c_02_w_data(consume_w_data),
    .c_02_w_en(consume_w_en),
    .clk(clk),
    .p_00_ack(p_00_ack),
    .p_00_addr(axi_awaddr),
    .p_00_cyc(wish_cyc),
    .p_00_r_data(axi_rdata),
    .p_00_stb(wish_stb),
    .p_00_w_data(axi_wdata),
    .p_00_w_en(wish_w_en),
    .rst(rst)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:88" *)
  \risc_project.to_axi  to_axi (
    .axi_arready(axi_arready),
    .axi_arvalid(axi_arvalid),
    .axi_awaddr(axi_awaddr),
    .axi_awready(axi_awready),
    .axi_awvalid(axi_awvalid),
    .axi_bready(axi_bready),
    .axi_bresp(axi_bresp),
    .axi_bvalid(axi_bvalid),
    .axi_rready(axi_rready),
    .axi_rvalid(axi_rvalid),
    .axi_wdata(axi_wdata),
    .axi_wready(axi_wready),
    .axi_wvalid(axi_wvalid),
    .clk(clk),
    .error_data(error_data),
    .error_valid(error_valid),
    .r_en(error_ready),
    .rst(rst),
    .wish_ack(p_00_ack),
    .wish_cyc(wish_cyc),
    .wish_r_data(axi_rdata),
    .wish_stb(wish_stb),
    .wish_w_en(wish_w_en)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:40" *)
  \risc_project.uart_rx  uart_rx (
    .clk(clk),
    .produce_data(command_data),
    .produce_valid(command_valid),
    .r_en(produce_ready),
    .rst(rst),
    .rx(rx)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:39" *)
  \risc_project.uart_tx  uart_tx (
    .clk(clk),
    .consume_ready(reply_ready),
    .rst(rst),
    .tx(tx),
    .w_data(consume_data),
    .w_en(consume_valid)
  );
  assign \tx$20  = tx;
  assign \rx$21  = rx;
  assign reply_data = consume_data;
  assign consume_ready = reply_ready;
  assign reply_valid = consume_valid;
  assign produce_data = command_data;
  assign command_ready = produce_ready;
  assign produce_valid = command_valid;
  assign consume_ack = produce_ack;
  assign produce_addr = consume_addr;
  assign produce_cyc = consume_cyc;
  assign consume_r_data = produce_r_data;
  assign produce_stb = consume_stb;
  assign produce_w_data = consume_w_data;
  assign produce_w_en = consume_w_en;
  assign soft_reset = periph_resetn;
  assign debug_reset = core_reset;
  assign debug_ack = a_ack;
  assign debug_addr = consume_addr;
  assign a_addr = consume_addr;
  assign a_cyc = debug_cyc;
  assign debug_r_data = a_r_data;
  assign a_stb = debug_stb;
  assign debug_w_data = consume_w_data;
  assign a_w_data = consume_w_data;
  assign debug_w_en = consume_w_en;
  assign a_w_en = consume_w_en;
  assign \consume_ack$66  = bus_ack;
  assign bus_addr = \consume_addr$67 ;
  assign bus_cyc = \consume_cyc$69 ;
  assign \consume_r_data$72  = bus_r_data;
  assign bus_stb = \consume_stb$73 ;
  assign bus_w_data = \consume_w_data$75 ;
  assign bus_w_en = \consume_w_en$77 ;
  assign \bus_ack$80  = \a_ack$79 ;
  assign \bus_addr$81  = \consume_addr$67 ;
  assign \a_addr$82  = \consume_addr$67 ;
  assign \a_cyc$84  = \bus_cyc$83 ;
  assign \a_r_data$85  = 32'd0;
  assign \bus_r_data$86  = 32'd0;
  assign \a_stb$88  = \bus_stb$87 ;
  assign \bus_w_data$89  = \consume_w_data$75 ;
  assign \a_w_data$90  = \consume_w_data$75 ;
  assign \bus_w_en$91  = \consume_w_en$77 ;
  assign \a_w_en$92  = \consume_w_en$77 ;
  assign c_00_ack = prog_ack;
  assign prog_addr = c_00_addr;
  assign prog_cyc = c_00_cyc;
  assign c_00_r_data = prog_r_data;
  assign prog_stb = c_00_stb;
  assign c_00_w_data = 32'd0;
  assign prog_w_data = 32'd0;
  assign c_00_w_en = 1'h0;
  assign prog_w_en = 1'h0;
  assign c_01_ack = b_ack;
  assign b_addr = c_01_addr;
  assign b_cyc = c_01_cyc;
  assign c_01_r_data = b_r_data;
  assign b_stb = c_01_stb;
  assign c_01_w_data = \consume_w_data$75 ;
  assign b_w_data = \consume_w_data$75 ;
  assign c_01_w_en = \consume_w_en$77 ;
  assign b_w_en = \consume_w_en$77 ;
  assign c_02_ack = \b_ack$121 ;
  assign \b_addr$124  = c_02_addr;
  assign \b_cyc$126  = c_02_cyc;
  assign c_02_r_data = \b_r_data$127 ;
  assign \b_stb$130  = c_02_stb;
  assign c_02_w_data = consume_w_data;
  assign \b_w_data$132  = consume_w_data;
  assign c_02_w_en = consume_w_en;
  assign \b_w_en$134  = consume_w_en;
  assign wish_ack = p_00_ack;
  assign wish_addr = axi_awaddr;
  assign p_00_addr = axi_awaddr;
  assign p_00_cyc = wish_cyc;
  assign p_00_r_data = axi_rdata;
  assign wish_r_data = axi_rdata;
  assign p_00_stb = wish_stb;
  assign wish_w_data = axi_wdata;
  assign p_00_w_data = axi_wdata;
  assign p_00_w_en = wish_w_en;
  assign \axi_araddr$149  = axi_awaddr;
  assign \axi_arready$150  = axi_arready;
  assign \axi_arvalid$151  = axi_arvalid;
  assign \axi_awaddr$152  = axi_awaddr;
  assign \axi_awready$153  = axi_awready;
  assign \axi_awvalid$154  = axi_awvalid;
  assign \axi_bready$155  = axi_bready;
  assign \axi_bresp$156  = axi_bresp;
  assign \axi_bvalid$157  = axi_bvalid;
  assign \axi_rdata$158  = axi_rdata;
  assign \axi_rready$159  = axi_rready;
  assign \axi_rvalid$160  = axi_rvalid;
  assign \axi_wdata$161  = axi_wdata;
  assign \axi_wready$162  = axi_wready;
  assign \axi_wvalid$163  = axi_wvalid;
  assign \error_data$165  = error_data;
  assign \error_ready$167  = error_ready;
  assign \error_valid$169  = error_valid;
  assign axi_araddr = axi_awaddr;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:36" *)
(* generator = "Amaranth" *)
module \risc_project.bridge (rst, reply_ready, command_valid, command_data, error_valid, error_data, command_ready, produce_stb, produce_cyc, reply_valid, reply_data, error_ready, bus_ack, produce_addr, produce_w_data, produce_w_en, soft_reset, produce_ack, produce_r_data, bus_w_data, bus_w_en
, bus_stb, bus_cyc, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$1  = 0;
  wire [7:0] \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire [3:0] \$15 ;
  wire \$16 ;
  wire [3:0] \$17 ;
  wire \$18 ;
  wire [32:0] \$19 ;
  wire \$2 ;
  wire \$20 ;
  wire [3:0] \$21 ;
  wire \$22 ;
  reg [31:0] \$23 ;
  reg [31:0] \$24 ;
  reg \$25 ;
  reg [31:0] \$26 ;
  reg [1:0] \$27 ;
  reg [2:0] \$28 ;
  reg [2:0] \$29 ;
  wire \$3 ;
  reg [7:0] \$30 ;
  reg [63:0] \$31 ;
  reg \$32 ;
  reg \$33 ;
  wire [6:0] \$34 ;
  wire \$4 ;
  wire [8:0] \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:42" *)
  reg [63:0] arg = 64'h0000000000000000;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  output bus_ack;
  reg bus_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  input bus_cyc;
  wire bus_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  input bus_stb;
  wire bus_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  input [31:0] bus_w_data;
  wire [31:0] bus_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  input bus_w_en;
  wire bus_w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:87" *)
  input [7:0] command_data;
  wire [7:0] command_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  output command_ready;
  reg command_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  input command_valid;
  wire command_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:39" *)
  reg [2:0] counter = 3'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:87" *)
  input [7:0] error_data;
  wire [7:0] error_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  output error_ready;
  reg error_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  input error_valid;
  wire error_valid;
  (* init = 1'h1 *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:44" *)
  wire ext_reset;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:41" *)
  reg [7:0] prefix = 8'h00;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  input produce_ack;
  wire produce_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  output [31:0] produce_addr;
  reg [31:0] produce_addr = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  output produce_cyc;
  reg produce_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  input [31:0] produce_r_data;
  wire [31:0] produce_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  output produce_stb;
  reg produce_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  output [31:0] produce_w_data;
  reg [31:0] produce_w_data = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  output produce_w_en;
  reg produce_w_en = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:87" *)
  output [7:0] reply_data;
  reg [7:0] reply_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  input reply_ready;
  wire reply_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  output reply_valid;
  reg reply_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:52" *)
  reg reply_flag = 1'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:38" *)
  reg [1:0] size = 2'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:44" *)
  output soft_reset;
  reg soft_reset = 1'h1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:48" *)
  reg [31:0] timer = 32'd0;
  assign \$34  = counter * (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:168" *) 4'h8;
  assign \$1  = arg >> \$34 ;
  assign \$2  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:193" *) command_valid;
  assign \$3  = \$6  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:193" *) \$2 ;
  assign \$4  = bus_stb & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:199" *) bus_cyc;
  assign \$5  = 6'h23 + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:196" *) error_data;
  assign \$6  = ! (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) fsm_state;
  assign \$7  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 1'h1;
  assign \$8  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h2;
  assign \$9  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h3;
  assign \$10  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h4;
  assign \$11  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h5;
  assign \$12  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h6;
  assign \$13  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h7;
  assign \$14  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:109" *) counter;
  assign \$15  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:116" *) 1'h1;
  assign \$16  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:121" *) counter;
  assign \$17  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:124" *) 1'h1;
  assign \$18  = timer == (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:127" *) 27'h5f5e100;
  assign \$19  = timer + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:133" *) 1'h1;
  assign \$20  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:171" *) counter;
  assign \$21  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:174" *) 1'h1;
  assign \$22  = reply_valid & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:190" *) reply_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  always @(posedge clk)
    produce_addr <= \$23 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  always @(posedge clk)
    produce_w_data <= \$24 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  always @(posedge clk)
    produce_w_en <= \$25 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:48" *)
  always @(posedge clk)
    timer <= \$26 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:38" *)
  always @(posedge clk)
    size <= \$27 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:39" *)
  always @(posedge clk)
    counter <= \$28 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  always @(posedge clk)
    fsm_state <= \$29 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:41" *)
  always @(posedge clk)
    prefix <= \$30 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:42" *)
  always @(posedge clk)
    arg <= \$31 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:44" *)
  always @(posedge clk)
    soft_reset <= \$32 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:52" *)
  always @(posedge clk)
    reply_flag <= \$33 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    command_ready = 1'h0;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          command_ready = 1'h1;
      3'h1:
          command_ready = 1'h1;
      3'h5:
          command_ready = 1'h1;
      3'h6:
          /* empty */;
      3'h2:
          /* empty */;
      3'h7:
          /* empty */;
      3'h4:
          /* empty */;
      3'h3:
          command_ready = reply_ready;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    produce_stb = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          produce_stb = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    produce_cyc = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          produce_cyc = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    reply_valid = 1'h0;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          /* empty */;
      3'h2:
          reply_valid = 1'h1;
      3'h7:
          reply_valid = 1'h1;
      3'h4:
          reply_valid = 1'h1;
      3'h3:
          reply_valid = command_valid;
    endcase
    if (\$3 ) begin
      if (error_valid) begin
        reply_valid = 1'h1;
      end else if (\$4 ) begin
        if (bus_w_en) begin
          reply_valid = 1'h1;
        end
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    reply_data = 8'h00;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          /* empty */;
      3'h2:
          reply_data = prefix;
      3'h7:
          reply_data = \$1 ;
      3'h4:
          reply_data = 8'h0a;
      3'h3:
          reply_data = command_data;
    endcase
    if (\$3 ) begin
      if (error_valid) begin
        reply_data = \$5 [7:0];
      end else if (\$4 ) begin
        if (bus_w_en) begin
          reply_data = bus_w_data[7:0];
        end
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    error_ready = 1'h0;
    if (\$3 ) begin
      if (error_valid) begin
        error_ready = 1'h1;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    bus_ack = 1'h0;
    if (\$3 ) begin
      if (error_valid) begin
      end else if (\$4 ) begin
        (* full_case = 32'd1 *)
        if (bus_w_en) begin
          bus_ack = reply_ready;
        end else begin
          bus_ack = 1'h1;
        end
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$23  = produce_addr;
    casez (fsm_state)
      3'h0:
          \$23  = 32'd0;
      3'h1:
          if (command_valid) begin
            casez (counter)
              3'h0:
                  \$23 [7:0] = command_data;
              3'h1:
                  \$23 [15:8] = command_data;
              3'h2:
                  \$23 [23:16] = command_data;
              3'h3:
                  \$23 [31:24] = command_data;
            endcase
          end
    endcase
    if (rst) begin
      \$23  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$24  = produce_w_data;
    casez (fsm_state)
      3'h0:
          \$24  = 32'd0;
      3'h1:
          /* empty */;
      3'h5:
          if (command_valid) begin
            casez (counter)
              3'h0:
                  \$24 [7:0] = command_data;
              3'h1:
                  \$24 [15:8] = command_data;
              3'h2:
                  \$24 [23:16] = command_data;
              3'h3:
                  \$24 [31:24] = command_data;
            endcase
          end
    endcase
    if (rst) begin
      \$24  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$25  = produce_w_en;
    casez (fsm_state)
      3'h0:
        begin
          \$25  = 1'h0;
          if (command_valid) begin
            casez (command_data)
              8'h77:
                  \$25  = 1'h1;
              8'h57:
                  \$25  = 1'h1;
            endcase
          end
        end
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          if (produce_ack) begin
            if (produce_w_en) begin
              if (reply_flag) begin
                \$25  = 1'h0;
              end
            end
          end
    endcase
    if (rst) begin
      \$25  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$26  = timer;
    casez (fsm_state)
      3'h0:
          \$26  = 32'd0;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          (* full_case = 32'd1 *)
          if (\$18 ) begin
          end else begin
            \$26  = \$19 [31:0];
          end
    endcase
    if (rst) begin
      \$26  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$27  = size;
    casez (fsm_state)
      3'h0:
          if (command_valid) begin
            casez (command_data)
              8'h77:
                  \$27  = 2'h0;
              8'h57:
                  \$27  = 2'h3;
              8'h72:
                  \$27  = 2'h0;
              8'h52:
                  \$27  = 2'h3;
            endcase
          end
    endcase
    if (rst) begin
      \$27  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$28  = counter;
    casez (fsm_state)
      3'h0:
          if (command_valid) begin
            (* full_case = 32'd1 *)
            casez (command_data)
              8'h77:
                  \$28  = 3'h0;
              8'h57:
                  \$28  = 3'h3;
              8'h72:
                  \$28  = 3'h0;
              8'h52:
                  \$28  = 3'h3;
              8'h49:
                  \$28  = 3'h0;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  /* empty */;
              8'h56:
                  /* empty */;
              8'h76:
                  /* empty */;
              default:
                  \$28  = 3'h0;
            endcase
          end
      3'h1:
          if (command_valid) begin
            (* full_case = 32'd1 *)
            if (\$14 ) begin
              \$28  = { 1'h0, size };
            end else begin
              \$28  = \$15 [2:0];
            end
          end
      3'h5:
          if (command_valid) begin
            (* full_case = 32'd1 *)
            if (\$16 ) begin
            end else begin
              \$28  = \$17 [2:0];
            end
          end
      3'h6:
        begin
          if (\$18 ) begin
            \$28  = 3'h3;
          end
          if (produce_ack) begin
            (* full_case = 32'd1 *)
            if (produce_w_en) begin
              if (reply_flag) begin
                \$28  = 3'h7;
              end
            end else begin
              \$28  = 3'h7;
            end
          end
        end
      3'h2:
          /* empty */;
      3'h7:
          if (reply_ready) begin
            (* full_case = 32'd1 *)
            if (\$20 ) begin
            end else begin
              \$28  = \$21 [2:0];
            end
          end
    endcase
    if (rst) begin
      \$28  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$29  = fsm_state;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          if (command_valid) begin
            (* full_case = 32'd1 *)
            casez (command_data)
              8'h77:
                  \$29  = 3'h1;
              8'h57:
                  \$29  = 3'h1;
              8'h72:
                  \$29  = 3'h1;
              8'h52:
                  \$29  = 3'h1;
              8'h49:
                  \$29  = 3'h2;
              8'h65:
                  \$29  = 3'h3;
              8'h0a:
                  \$29  = 3'h4;
              8'h78:
                  /* empty */;
              8'h56:
                  /* empty */;
              8'h76:
                  /* empty */;
              default:
                  \$29  = 3'h2;
            endcase
          end
      3'h1:
          if (command_valid) begin
            if (\$14 ) begin
              (* full_case = 32'd1 *)
              if (produce_w_en) begin
                \$29  = 3'h5;
              end else begin
                \$29  = 3'h6;
              end
            end
          end
      3'h5:
          if (command_valid) begin
            if (\$16 ) begin
              \$29  = 3'h6;
            end
          end
      3'h6:
        begin
          if (\$18 ) begin
            \$29  = 3'h2;
          end
          if (produce_ack) begin
            (* full_case = 32'd1 *)
            if (produce_w_en) begin
              (* full_case = 32'd1 *)
              if (reply_flag) begin
                \$29  = 3'h2;
              end else begin
                \$29  = 3'h0;
              end
            end else begin
              \$29  = 3'h2;
            end
          end
        end
      3'h2:
          if (reply_ready) begin
            \$29  = 3'h7;
          end
      3'h7:
          if (reply_ready) begin
            if (\$20 ) begin
              \$29  = 3'h0;
            end
          end
      3'h4:
          if (reply_ready) begin
            \$29  = 3'h0;
          end
      3'h3:
          if (\$22 ) begin
            \$29  = 3'h0;
          end
    endcase
    if (rst) begin
      \$29  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$30  = prefix;
    casez (fsm_state)
      3'h0:
          if (command_valid) begin
            (* full_case = 32'd1 *)
            casez (command_data)
              8'h77:
                  /* empty */;
              8'h57:
                  /* empty */;
              8'h72:
                  /* empty */;
              8'h52:
                  /* empty */;
              8'h49:
                  \$30  = 8'h49;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  /* empty */;
              8'h56:
                  /* empty */;
              8'h76:
                  /* empty */;
              default:
                  \$30  = 8'h25;
            endcase
          end
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
        begin
          if (\$18 ) begin
            \$30  = 8'h54;
          end
          if (produce_ack) begin
            (* full_case = 32'd1 *)
            if (produce_w_en) begin
              if (reply_flag) begin
                \$30  = 8'h57;
              end
            end else begin
              \$30  = 8'h52;
            end
          end
        end
    endcase
    if (rst) begin
      \$30  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$31  = arg;
    casez (fsm_state)
      3'h0:
          if (command_valid) begin
            (* full_case = 32'd1 *)
            casez (command_data)
              8'h77:
                  /* empty */;
              8'h57:
                  /* empty */;
              8'h72:
                  /* empty */;
              8'h52:
                  /* empty */;
              8'h49:
                  \$31  = 64'h0000000000000044;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  /* empty */;
              8'h56:
                  /* empty */;
              8'h76:
                  /* empty */;
              default:
                  \$31  = { 56'h00000000000000, command_data };
            endcase
          end
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
        begin
          if (\$18 ) begin
            \$31  = { 32'h00000000, produce_addr };
          end
          if (produce_ack) begin
            (* full_case = 32'd1 *)
            if (produce_w_en) begin
              if (reply_flag) begin
                \$31 [31:0] = produce_w_data;
                \$31 [63:32] = produce_addr;
              end
            end else begin
              \$31 [31:0] = produce_r_data;
              \$31 [63:32] = produce_addr;
            end
          end
        end
    endcase
    if (rst) begin
      \$31  = 64'h0000000000000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$32  = soft_reset;
    casez (fsm_state)
      3'h0:
          if (command_valid) begin
            casez (command_data)
              8'h77:
                  /* empty */;
              8'h57:
                  /* empty */;
              8'h72:
                  /* empty */;
              8'h52:
                  /* empty */;
              8'h49:
                  /* empty */;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  \$32  = 1'h0;
            endcase
          end
    endcase
    if (rst) begin
      \$32  = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$33  = reply_flag;
    casez (fsm_state)
      3'h0:
          if (command_valid) begin
            casez (command_data)
              8'h77:
                  /* empty */;
              8'h57:
                  /* empty */;
              8'h72:
                  /* empty */;
              8'h52:
                  /* empty */;
              8'h49:
                  /* empty */;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  /* empty */;
              8'h56:
                  \$33  = 1'h1;
              8'h76:
                  \$33  = 1'h0;
            endcase
          end
    endcase
    if (rst) begin
      \$33  = 1'h0;
    end
  end
  assign ext_reset = soft_reset;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:168" *)
(* generator = "Amaranth" *)
module \risc_project.bridge_sw (consume_stb, consume_cyc, consume_addr, a_w_data, a_w_en, a_stb, a_cyc, consume_ack, consume_r_data, b_stb, b_cyc, a_ack, a_r_data, b_ack, b_r_data, \0_address );
  reg \$auto$verilog_backend.cc:2352:dump_module$2  = 0;
  wire \$1 ;
  wire [32:0] \$2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  output [31:0] \0_address ;
  wire [31:0] \0_address ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  input a_ack;
  wire a_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] a_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  output a_cyc;
  reg a_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  input [31:0] a_r_data;
  wire [31:0] a_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  output a_stb;
  reg a_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  input [31:0] a_w_data;
  wire [31:0] a_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  input a_w_en;
  wire a_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  input b_ack;
  wire b_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] b_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  output b_cyc;
  reg b_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  input [31:0] b_r_data;
  wire [31:0] b_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  output b_stb;
  reg b_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] b_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire b_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  output consume_ack;
  reg consume_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  input [31:0] consume_addr;
  wire [31:0] consume_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  input consume_cyc;
  wire consume_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  output [31:0] consume_r_data;
  reg [31:0] consume_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  input consume_stb;
  wire consume_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] consume_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire consume_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:171" *)
  reg select;
  assign \$1  = consume_addr < (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:173" *) 9'h100;
  assign \$2  = consume_addr - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:185" *) 9'h100;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    b_stb = 1'h0;
    (* full_case = 32'd1 *)
    casez (select)
      1'h0:
          /* empty */;
      1'h1:
          b_stb = consume_stb;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    b_cyc = 1'h0;
    (* full_case = 32'd1 *)
    casez (select)
      1'h0:
          /* empty */;
      1'h1:
          b_cyc = consume_cyc;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      select = 1'h0;
    end else begin
      select = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    a_stb = 1'h0;
    casez (select)
      1'h0:
          a_stb = consume_stb;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    a_cyc = 1'h0;
    casez (select)
      1'h0:
          a_cyc = consume_cyc;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    (* full_case = 32'd1 *)
    casez (select)
      1'h0:
          consume_ack = a_ack;
      1'h1:
          consume_ack = b_ack;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    (* full_case = 32'd1 *)
    casez (select)
      1'h0:
          consume_r_data = a_r_data;
      1'h1:
          consume_r_data = b_r_data;
    endcase
  end
  assign a_addr = consume_addr;
  assign consume_w_en = a_w_en;
  assign consume_w_data = a_w_data;
  assign b_addr = \$2 [31:0];
  assign b_w_en = a_w_en;
  assign b_w_data = a_w_data;
  assign \0_address  = \$2 [31:0];
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:168" *)
(* generator = "Amaranth" *)
module \risc_project.bus_switch (a_ack, consume_addr, a_w_data, a_w_en, consume_stb, consume_cyc, a_stb, a_cyc, consume_ack, consume_r_data, b_stb, b_cyc, b_ack, b_r_data, \0_address );
  reg \$auto$verilog_backend.cc:2352:dump_module$3  = 0;
  wire \$1 ;
  wire [32:0] \$2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  output [31:0] \0_address ;
  wire [31:0] \0_address ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  input a_ack;
  wire a_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] a_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  output a_cyc;
  reg a_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] a_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  output a_stb;
  reg a_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  input [31:0] a_w_data;
  wire [31:0] a_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  input a_w_en;
  wire a_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  input b_ack;
  wire b_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] b_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  output b_cyc;
  reg b_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  input [31:0] b_r_data;
  wire [31:0] b_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  output b_stb;
  reg b_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] b_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire b_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  output consume_ack;
  reg consume_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  input [31:0] consume_addr;
  wire [31:0] consume_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  input consume_cyc;
  wire consume_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  output [31:0] consume_r_data;
  reg [31:0] consume_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  input consume_stb;
  wire consume_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] consume_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire consume_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:171" *)
  reg select;
  assign \$1  = consume_addr < (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:173" *) 9'h100;
  assign \$2  = consume_addr - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:185" *) 9'h100;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    b_stb = 1'h0;
    (* full_case = 32'd1 *)
    casez (select)
      1'h0:
          /* empty */;
      1'h1:
          b_stb = consume_stb;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    b_cyc = 1'h0;
    (* full_case = 32'd1 *)
    casez (select)
      1'h0:
          /* empty */;
      1'h1:
          b_cyc = consume_cyc;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      select = 1'h0;
    end else begin
      select = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    a_stb = 1'h0;
    casez (select)
      1'h0:
          a_stb = consume_stb;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    a_cyc = 1'h0;
    casez (select)
      1'h0:
          a_cyc = consume_cyc;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    (* full_case = 32'd1 *)
    casez (select)
      1'h0:
          consume_ack = a_ack;
      1'h1:
          consume_ack = b_ack;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    (* full_case = 32'd1 *)
    casez (select)
      1'h0:
          consume_r_data = 32'd0;
      1'h1:
          consume_r_data = b_r_data;
    endcase
  end
  assign a_addr = consume_addr;
  assign consume_w_en = a_w_en;
  assign consume_w_data = a_w_data;
  assign b_addr = \$2 [31:0];
  assign b_w_en = a_w_en;
  assign b_w_data = a_w_data;
  assign a_r_data = 32'd0;
  assign \0_address  = \$2 [31:0];
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:51" *)
(* generator = "Amaranth" *)
module \risc_project.core (rst, prog_addr, prog_cyc, prog_stb, debug_addr, \debug_w_data$11 , \debug_w_en$9 , \debug_stb$7 , \debug_cyc$5 , debug_ack, debug_r_data, bus_addr, bus_w_data, bus_w_en, bus_stb, bus_cyc, debug_reset, bus_ack, bus_r_data, prog_ack, prog_r_data
, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$4  = 0;
  wire \$1 ;
  wire [32:0] \$10 ;
  wire [32:0] \$11 ;
  wire [33:0] \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire \$18 ;
  wire [32:0] \$19 ;
  wire \$2 ;
  wire \$20 ;
  wire \$21 ;
  wire \$22 ;
  reg \$23 ;
  reg [31:0] \$24 ;
  reg \$25 ;
  reg \$26 ;
  reg \$27 ;
  reg \$28 ;
  wire [32:0] \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:22" *)
  wire branch;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  input bus_ack;
  wire bus_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  output [31:0] bus_addr;
  reg [31:0] bus_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  output bus_cyc;
  reg bus_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  input [31:0] bus_r_data;
  wire [31:0] bus_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  output bus_stb;
  reg bus_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  output [31:0] bus_w_data;
  reg [31:0] bus_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  output bus_w_en;
  reg bus_w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:19" *)
  wire [66:0] consume;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:19" *)
  wire [31:0] \consume.a ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:19" *)
  wire [31:0] \consume.b ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:19" *)
  wire [2:0] \consume.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:24" *)
  reg [4:0] consume_d;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [118:0] consume_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [63:0] \consume_data$31 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data$31.mode ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data$31.mode.b ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \consume_data$31.mode.b.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.b.offset_lower ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \consume_data$31.mode.b.offset_upper ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.b.rs1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.b.rs2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data$31.mode.i ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \consume_data$31.mode.i.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [11:0] \consume_data$31.mode.i.imm ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.i.rd ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.i.rs ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data$31.mode.j ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [19:0] \consume_data$31.mode.j.offset ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.j.rd ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data$31.mode.m ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \consume_data$31.mode.m.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \consume_data$31.mode.m.muldiv ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.m.rd ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.m.rs1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.m.rs2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data$31.mode.r ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \consume_data$31.mode.r.f_lower ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \consume_data$31.mode.r.f_upper ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.r.rd ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.r.rs1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.r.rs2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data$31.mode.s ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \consume_data$31.mode.s.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.s.imm_lower ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \consume_data$31.mode.s.imm_upper ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.s.rs1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.s.rs2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data$31.mode.u ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [19:0] \consume_data$31.mode.u.imm ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data$31.mode.u.rd ;
  (* enum_base_type = "Instruction" *)
  (* enum_value_0000011 = "MEMORYLOAD" *)
  (* enum_value_0001111 = "FENCE" *)
  (* enum_value_0010011 = "ARITHIMM" *)
  (* enum_value_0010111 = "AUIPC" *)
  (* enum_value_0100011 = "MEMORYSTORE" *)
  (* enum_value_0110011 = "ARITH" *)
  (* enum_value_0110111 = "LUI" *)
  (* enum_value_1100011 = "BRANCH" *)
  (* enum_value_1100111 = "JALR" *)
  (* enum_value_1101111 = "JAL" *)
  (* enum_value_1110011 = "E" *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \consume_data$31.op ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \consume_data$31.pc ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:87" *)
  reg [31:0] \consume_data$65 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  reg [36:0] \consume_data$67 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \consume_data$67.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data$67.value ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [79:0] \consume_data.mode ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [78:0] \consume_data.mode.arith ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \consume_data.mode.arith.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \consume_data.mode.arith.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [6:0] \consume_data.mode.arith.m ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.arith.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.arith.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [79:0] \consume_data.mode.branch ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \consume_data.mode.branch.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [12:0] \consume_data.mode.branch.offset ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.branch.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.branch.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [58:0] \consume_data.mode.imm ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \consume_data.mode.imm.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \consume_data.mode.imm.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [11:0] \consume_data.mode.imm.i ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [6:0] \consume_data.mode.imm.m ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.imm.s ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [36:0] \consume_data.mode.jump ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \consume_data.mode.jump.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.jump.t ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [78:0] \consume_data.mode.store ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \consume_data.mode.store.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [11:0] \consume_data.mode.store.offset ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.store.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.store.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [36:0] \consume_data.mode.upper ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \consume_data.mode.upper.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.upper.i ;
  (* enum_base_type = "Instruction" *)
  (* enum_value_0000011 = "MEMORYLOAD" *)
  (* enum_value_0001111 = "FENCE" *)
  (* enum_value_0010011 = "ARITHIMM" *)
  (* enum_value_0010111 = "AUIPC" *)
  (* enum_value_0100011 = "MEMORYSTORE" *)
  (* enum_value_0110011 = "ARITH" *)
  (* enum_value_0110111 = "LUI" *)
  (* enum_value_1100011 = "BRANCH" *)
  (* enum_value_1100111 = "JALR" *)
  (* enum_value_1101111 = "JAL" *)
  (* enum_value_1110011 = "E" *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [6:0] \consume_data.op ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.pc ;
  (* enum_base_type = "AluFunction" *)
  (* enum_value_000 = "ADDSUB" *)
  (* enum_value_001 = "SHIFTLEFT" *)
  (* enum_value_010 = "LESSTHAN" *)
  (* enum_value_011 = "LESSTHANU" *)
  (* enum_value_100 = "XOR" *)
  (* enum_value_101 = "SHIFTRIGHT" *)
  (* enum_value_110 = "OR" *)
  (* enum_value_111 = "AND" *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:41" *)
  reg [2:0] consume_function;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:26" *)
  reg [6:0] consume_mode;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire consume_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire \consume_ready$24 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire \consume_ready$72 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:22" *)
  reg [31:0] consume_s1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:23" *)
  reg [31:0] consume_s2;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire consume_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire \consume_valid$33 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:27" *)
  reg \consume_valid$40 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire \consume_valid$63 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  reg \consume_valid$70 ;
  (* init = 1'h0 *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:64" *)
  wire core_reset;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  output debug_ack;
  reg debug_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire \debug_ack$13 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  input [31:0] debug_addr;
  wire [31:0] debug_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  reg [4:0] \debug_addr$3 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  reg debug_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  input \debug_cyc$5 ;
  wire \debug_cyc$5 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  output [31:0] debug_r_data;
  reg [31:0] debug_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] \debug_r_data$15 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  reg debug_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  input \debug_stb$7 ;
  wire \debug_stb$7 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  reg [31:0] debug_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  input [31:0] \debug_w_data$11 ;
  wire [31:0] \debug_w_data$11 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  reg debug_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  input \debug_w_en$9 ;
  wire \debug_w_en$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:64" *)
  output debug_reset;
  reg debug_reset = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:20" *)
  wire en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:61" *)
  reg latch = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:203" *)
  reg latch_decode = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:114" *)
  reg latch_fetch;
  (* init = 1'h0 *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:204" *)
  wire latch_write;
  (* init = 1'h0 *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:56" *)
  wire mreset;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:53" *)
  reg [31:0] pc = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:34" *)
  wire [4:0] produce_d;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [118:0] produce_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [118:0] \produce_data$34 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [79:0] \produce_data$34.mode ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [78:0] \produce_data$34.mode.arith ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \produce_data$34.mode.arith.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \produce_data$34.mode.arith.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [6:0] \produce_data$34.mode.arith.m ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data$34.mode.arith.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data$34.mode.arith.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [79:0] \produce_data$34.mode.branch ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \produce_data$34.mode.branch.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [12:0] \produce_data$34.mode.branch.offset ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data$34.mode.branch.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data$34.mode.branch.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [58:0] \produce_data$34.mode.imm ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \produce_data$34.mode.imm.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \produce_data$34.mode.imm.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [11:0] \produce_data$34.mode.imm.i ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [6:0] \produce_data$34.mode.imm.m ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data$34.mode.imm.s ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [36:0] \produce_data$34.mode.jump ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \produce_data$34.mode.jump.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data$34.mode.jump.t ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [78:0] \produce_data$34.mode.store ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \produce_data$34.mode.store.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [11:0] \produce_data$34.mode.store.offset ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data$34.mode.store.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data$34.mode.store.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [36:0] \produce_data$34.mode.upper ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \produce_data$34.mode.upper.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data$34.mode.upper.i ;
  (* enum_base_type = "Instruction" *)
  (* enum_value_0000011 = "MEMORYLOAD" *)
  (* enum_value_0001111 = "FENCE" *)
  (* enum_value_0010011 = "ARITHIMM" *)
  (* enum_value_0010111 = "AUIPC" *)
  (* enum_value_0100011 = "MEMORYSTORE" *)
  (* enum_value_0110011 = "ARITH" *)
  (* enum_value_0110111 = "LUI" *)
  (* enum_value_1100011 = "BRANCH" *)
  (* enum_value_1100111 = "JALR" *)
  (* enum_value_1101111 = "JAL" *)
  (* enum_value_1110011 = "E" *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [6:0] \produce_data$34.op ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data$34.pc ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [36:0] \produce_data$53 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \produce_data$53.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data$53.value ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:87" *)
  wire [31:0] \produce_data$78 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [79:0] \produce_data.mode ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [78:0] \produce_data.mode.arith ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \produce_data.mode.arith.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \produce_data.mode.arith.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \produce_data.mode.arith.m ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.arith.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.arith.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [79:0] \produce_data.mode.branch ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \produce_data.mode.branch.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [12:0] \produce_data.mode.branch.offset ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.branch.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.branch.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [58:0] \produce_data.mode.imm ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \produce_data.mode.imm.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \produce_data.mode.imm.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [11:0] \produce_data.mode.imm.i ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \produce_data.mode.imm.m ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.imm.s ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [36:0] \produce_data.mode.jump ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \produce_data.mode.jump.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.jump.t ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [78:0] \produce_data.mode.store ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \produce_data.mode.store.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [11:0] \produce_data.mode.store.offset ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.store.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.store.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [36:0] \produce_data.mode.upper ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \produce_data.mode.upper.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.upper.i ;
  (* enum_base_type = "Instruction" *)
  (* enum_value_0000011 = "MEMORYLOAD" *)
  (* enum_value_0001111 = "FENCE" *)
  (* enum_value_0010011 = "ARITHIMM" *)
  (* enum_value_0010111 = "AUIPC" *)
  (* enum_value_0100011 = "MEMORYSTORE" *)
  (* enum_value_0110011 = "ARITH" *)
  (* enum_value_0110111 = "LUI" *)
  (* enum_value_1100011 = "BRANCH" *)
  (* enum_value_1100111 = "JALR" *)
  (* enum_value_1101111 = "JAL" *)
  (* enum_value_1110011 = "E" *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \produce_data.op ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.pc ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire produce_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  reg \produce_ready$42 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire \produce_ready$59 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  reg \produce_ready$61  = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire produce_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire \produce_valid$41 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire \produce_valid$57 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:36" *)
  wire \produce_valid$71 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire \produce_valid$77 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:33" *)
  wire [31:0] produce_value;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  input prog_ack;
  wire prog_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  output [31:0] prog_addr;
  wire [31:0] prog_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  output prog_cyc;
  wire prog_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  input [31:0] prog_r_data;
  wire [31:0] prog_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  output prog_stb;
  wire prog_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:54" *)
  reg prog_enable = 1'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:43" *)
  reg [1:0] size;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire write_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [4:0] write_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  wire write_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire write_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] write_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire write_w_en;
  (* enum_base_type = "WriteRoute" *)
  (* enum_value_000 = "NONE" *)
  (* enum_value_001 = "ALU" *)
  (* enum_value_010 = "IMM" *)
  (* enum_value_011 = "PC" *)
  (* enum_value_100 = "MEM" *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:212" *)
  reg [2:0] write_route;
  assign \$1  = debug_addr < (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:66" *) 6'h20;
  assign \$2  = \debug_cyc$5  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:78" *) \debug_stb$7 ;
  assign \$3  = pc + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:110" *) 1'h0;
  assign \$4  = consume_ready & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:111" *) prog_enable;
  assign \$5  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:111" *) latch;
  assign prog_cyc = \$4  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:111" *) \$5 ;
  assign \$6  = consume_ready & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:112" *) prog_enable;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:112" *) latch;
  assign prog_stb = \$6  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:112" *) \$7 ;
  assign \$8  = prog_cyc & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:117" *) prog_stb;
  assign \$9  = \$8  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:117" *) prog_ack;
  assign \$10  = $signed(\produce_data$34 [53:42]) + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:174" *) $signed(\produce_data$34 [85:54]);
  assign \$11  = $signed(\produce_data$34 [92:81]) + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:185" *) $signed(\produce_data$34 [80:49]);
  assign en = \produce_data$34 [38:32] == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\enum.py:303" *) 7'h63;
  assign \$12  = $signed({ 1'h0, \produce_data$34 [31:0] }) + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:237" *) $signed(\produce_data$34 [54:42]);
  assign \$13  = \produce_valid$41  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:266" *) \consume_ready$72 ;
  assign \$14  = \produce_valid$41  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:267" *) \consume_ready$72 ;
  assign \$15  = debug_addr < (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:66" *) 6'h20;
  assign \$16  = \debug_cyc$5  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:78" *) \debug_stb$7 ;
  assign \$17  = prog_cyc & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:117" *) prog_stb;
  assign \$18  = \$17  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:117" *) prog_ack;
  assign \$19  = pc + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:130" *) 3'h4;
  assign \$20  = consume_valid & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:206" *) produce_ready;
  assign \$21  = \consume_valid$70  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:209" *) \consume_ready$72 ;
  assign \$22  = \produce_valid$77  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:227" *) \produce_ready$61 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:54" *)
  always @(posedge clk)
    prog_enable <= \$23 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:53" *)
  always @(posedge clk)
    pc <= \$24 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:56" *)
  always @(posedge clk)
    debug_reset <= \$25 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:61" *)
  always @(posedge clk)
    latch <= \$26 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:203" *)
  always @(posedge clk)
    latch_decode <= \$27 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:204" *)
  always @(posedge clk)
    \produce_ready$61  <= \$28 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:141" *)
  \risc_project.core.alu  alu (
    .consume_function(consume_function),
    .consume_mode(consume_mode),
    .consume_s1(consume_s1),
    .consume_s2(consume_s2),
    .produce_d(consume_d),
    .produce_valid(\consume_valid$40 ),
    .produce_value(produce_value)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:192" *)
  \risc_project.core.branch$83  \branch$83  (
    .branch(branch),
    .consume(consume),
    .en(en)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:64" *)
  \risc_project.core.decode  decode (
    .clk(clk),
    .consume_data(\consume_data$31 ),
    .consume_ready(consume_ready),
    .consume_valid(prog_ack),
    .core_reset(debug_reset),
    .debug_ack(\debug_ack$13 ),
    .debug_addr(\debug_addr$3 ),
    .debug_cyc(debug_cyc),
    .debug_r_data(\debug_r_data$15 ),
    .debug_stb(debug_stb),
    .debug_w_data(debug_w_data),
    .debug_w_en(debug_w_en),
    .\port$646$0 (\produce_data$53 ),
    .produce_data(consume_data),
    .produce_ready(produce_ready),
    .produce_valid(consume_valid),
    .rst(rst),
    .write_ack(\produce_ready$59 ),
    .write_cyc(write_stb)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:105" *)
  \risc_project.core.decode_buffer  decode_buffer (
    .clk(clk),
    .consume_ready(produce_ready),
    .core_reset(debug_reset),
    .produce_data(\produce_data$34 ),
    .produce_valid(\produce_valid$41 ),
    .r_en(\produce_ready$42 ),
    .rst(rst),
    .w_data(consume_data),
    .w_en(consume_valid)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:201" *)
  \risc_project.core.pc_buffer  pc_buffer (
    .clk(clk),
    .core_reset(debug_reset),
    .produce_data(\produce_data$78 ),
    .produce_valid(\produce_valid$77 ),
    .r_en(\produce_ready$61 ),
    .rst(rst),
    .w_data(\consume_data$65 ),
    .w_en(\produce_valid$41 )
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\cpu.py:200" *)
  \risc_project.core.write_buffer  write_buffer (
    .clk(clk),
    .consume_ready(\consume_ready$72 ),
    .core_reset(debug_reset),
    .produce_data(\produce_data$53 ),
    .produce_valid(write_stb),
    .r_en(\produce_ready$59 ),
    .rst(rst),
    .w_data(\consume_data$67 ),
    .w_en(\consume_valid$70 )
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \debug_addr$3  = 5'h00;
    if (\$1 ) begin
      \debug_addr$3  = debug_addr[4:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    debug_cyc = 1'h0;
    if (\$1 ) begin
      debug_cyc = \debug_cyc$5 ;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    debug_stb = 1'h0;
    if (\$1 ) begin
      debug_stb = \debug_stb$7 ;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    debug_w_en = 1'h0;
    if (\$1 ) begin
      debug_w_en = \debug_w_en$9 ;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    debug_w_data = 32'd0;
    if (\$1 ) begin
      debug_w_data = \debug_w_data$11 ;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    debug_ack = 1'h0;
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      debug_ack = \debug_ack$13 ;
    end else begin
      if (\$2 ) begin
        debug_ack = 1'h1;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    debug_r_data = 32'd0;
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      debug_r_data = \debug_r_data$15 ;
    end else begin
      if (\$2 ) begin
        (* full_case = 32'd1 *)
        casez (debug_addr)
          32'd32:
              debug_r_data = { 31'h00000000, prog_enable };
          32'd33:
              debug_r_data = pc;
          32'd34:
              debug_r_data = { 31'h00000000, consume_ready };
          32'd35:
              debug_r_data = { 31'h00000000, latch };
          32'd36:
              debug_r_data = prog_r_data;
          default:
              debug_r_data = 32'd3401445290;
        endcase
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    latch_fetch = 1'h0;
    if (\$9 ) begin
      casez (\consume_data$31 [38:32])
        7'h63:
            latch_fetch = 1'h1;
        7'h6f:
            latch_fetch = 1'h1;
        7'h67:
            latch_fetch = 1'h1;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    consume_s1 = 32'd0;
    casez (\produce_data$34 [38:32])
      7'h13:
          consume_s1 = \produce_data$34 [80:49];
      7'h33:
          consume_s1 = \produce_data$34 [80:49];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    consume_s2 = 32'd0;
    casez (\produce_data$34 [38:32])
      7'h13:
          consume_s2 = { \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92], \produce_data$34 [92:81] };
      7'h33:
          consume_s2 = \produce_data$34 [112:81];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    consume_function = 3'h0;
    casez (\produce_data$34 [38:32])
      7'h13:
          consume_function = \produce_data$34 [41:39];
      7'h33:
          consume_function = \produce_data$34 [41:39];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    consume_mode = 7'h00;
    casez (\produce_data$34 [38:32])
      7'h13:
          consume_mode = \produce_data$34 [48:42];
      7'h33:
          consume_mode = \produce_data$34 [48:42];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    consume_d = 5'h00;
    casez (\produce_data$34 [38:32])
      7'h13:
          consume_d = \produce_data$34 [97:93];
      7'h33:
          consume_d = \produce_data$34 [117:113];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \consume_valid$40  = 1'h0;
    casez (\produce_data$34 [38:32])
      7'h13:
          \consume_valid$40  = \produce_valid$41 ;
      7'h33:
          \consume_valid$40  = \produce_valid$41 ;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \produce_ready$42  = 1'h0;
    casez (\produce_data$34 [38:32])
      7'h13:
          \produce_ready$42  = 1'h1;
      7'h33:
          \produce_ready$42  = 1'h1;
      7'h23:
          \produce_ready$42  = bus_ack;
    endcase
    casez (write_route)
      3'h1:
          /* empty */;
      3'h2:
          \produce_ready$42  = \consume_ready$72 ;
      3'h3:
          \produce_ready$42  = \consume_ready$72 ;
      3'h4:
          \produce_ready$42  = bus_ack;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    bus_addr = 32'd0;
    casez (\produce_data$34 [38:32])
      7'h13:
          /* empty */;
      7'h33:
          /* empty */;
      7'h23:
          bus_addr = \$10 [31:0];
      7'h03:
          bus_addr = \$11 [31:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    bus_w_data = 32'd0;
    casez (\produce_data$34 [38:32])
      7'h13:
          /* empty */;
      7'h33:
          /* empty */;
      7'h23:
          bus_w_data = \produce_data$34 [117:86];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    bus_w_en = 1'h0;
    casez (\produce_data$34 [38:32])
      7'h13:
          /* empty */;
      7'h33:
          /* empty */;
      7'h23:
          bus_w_en = 1'h1;
      7'h03:
          bus_w_en = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    bus_stb = 1'h0;
    casez (\produce_data$34 [38:32])
      7'h13:
          /* empty */;
      7'h33:
          /* empty */;
      7'h23:
          bus_stb = \produce_valid$41 ;
    endcase
    casez (write_route)
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          bus_stb = \$13 ;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    bus_cyc = 1'h0;
    casez (\produce_data$34 [38:32])
      7'h13:
          /* empty */;
      7'h33:
          /* empty */;
      7'h23:
          bus_cyc = \produce_valid$41 ;
    endcase
    casez (write_route)
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          bus_cyc = \$14 ;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    size = 2'h0;
    casez (\produce_data$34 [38:32])
      7'h13:
          /* empty */;
      7'h33:
          /* empty */;
      7'h23:
          size = \produce_data$34 [43:42];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    (* full_case = 32'd1 *)
    if (branch) begin
      \consume_data$65  = \$12 [31:0];
    end else begin
      \consume_data$65  = \produce_data$34 [31:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \consume_data$67  = 37'h0000000000;
    casez (write_route)
      3'h1:
        begin
          \consume_data$67 [36:5] = produce_value;
          \consume_data$67 [4:0] = consume_d;
        end
      3'h2:
        begin
          \consume_data$67 [36:5] = \produce_data$34 [75:44];
          \consume_data$67 [4:0] = \produce_data$34 [43:39];
        end
      3'h3:
        begin
          \consume_data$67 [36:5] = \produce_data$34 [75:44];
          \consume_data$67 [4:0] = \produce_data$34 [43:39];
        end
      3'h4:
        begin
          \consume_data$67 [36:5] = bus_r_data;
          \consume_data$67 [4:0] = \produce_data$34 [97:93];
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \consume_valid$70  = 1'h0;
    casez (write_route)
      3'h1:
          \consume_valid$70  = \consume_valid$40 ;
      3'h2:
          \consume_valid$70  = \produce_valid$41 ;
      3'h3:
          \consume_valid$70  = \produce_valid$41 ;
      3'h4:
          \consume_valid$70  = bus_ack;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    (* full_case = 32'd1 *)
    casez (\produce_data$34 [38:32])
      7'h13:
          write_route = 3'h1;
      7'h33:
          write_route = 3'h1;
      7'h17:
          write_route = 3'h2;
      7'h37:
          write_route = 3'h2;
      7'h6f:
          write_route = 3'h3;
      7'h67:
          write_route = 3'h3;
      7'h03:
          write_route = 3'h4;
      default:
          write_route = 3'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$23  = prog_enable;
    (* full_case = 32'd1 *)
    if (\$15 ) begin
    end else begin
      if (\$16 ) begin
        if (\debug_w_en$9 ) begin
          casez (debug_addr)
            32'd32:
                \$23  = \debug_w_data$11 [0];
          endcase
        end
      end
    end
    if (debug_reset) begin
      \$23  = 1'h0;
    end
    if (rst) begin
      \$23  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$24  = pc;
    (* full_case = 32'd1 *)
    if (\$15 ) begin
    end else begin
      if (\$16 ) begin
        if (\debug_w_en$9 ) begin
          casez (debug_addr)
            32'd32:
                /* empty */;
            32'd33:
                \$24  = \debug_w_data$11 ;
          endcase
        end
      end
    end
    if (\$18 ) begin
      (* full_case = 32'd1 *)
      casez (\consume_data$31 [38:32])
        7'h63:
            /* empty */;
        7'h6f:
            /* empty */;
        7'h67:
            /* empty */;
        default:
            \$24  = \$19 [31:0];
      endcase
    end
    if (\$22 ) begin
      \$24  = \produce_data$78 ;
    end
    if (debug_reset) begin
      \$24  = 32'd0;
    end
    if (rst) begin
      \$24  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$25  = debug_reset;
    (* full_case = 32'd1 *)
    if (\$15 ) begin
    end else begin
      if (\$16 ) begin
        if (\debug_w_en$9 ) begin
          casez (debug_addr)
            32'd32:
                /* empty */;
            32'd33:
                /* empty */;
            32'd34:
                \$25  = 1'h1;
          endcase
        end
      end
    end
    if (debug_reset) begin
      \$25  = 1'h0;
    end
    if (rst) begin
      \$25  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$26  = latch;
    if (\$18 ) begin
      casez (\consume_data$31 [38:32])
        7'h63:
            \$26  = 1'h1;
        7'h6f:
            \$26  = 1'h1;
        7'h67:
            \$26  = 1'h1;
      endcase
    end
    if (\$22 ) begin
      \$26  = 1'h0;
    end
    if (debug_reset) begin
      \$26  = 1'h0;
    end
    if (rst) begin
      \$26  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$27  = latch_decode;
    if (\$20 ) begin
      \$27  = latch_fetch;
    end
    if (debug_reset) begin
      \$27  = 1'h0;
    end
    if (rst) begin
      \$27  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$28  = \produce_ready$61 ;
    if (\$21 ) begin
      \$28  = latch_decode;
    end
    if (debug_reset) begin
      \$28  = 1'h0;
    end
    if (rst) begin
      \$28  = 1'h0;
    end
  end
  assign mreset = debug_reset;
  assign produce_data = consume_data;
  assign \consume_ready$24  = produce_ready;
  assign produce_valid = consume_valid;
  assign \consume_valid$33  = prog_ack;
  assign write_addr = \produce_data$53 [4:0];
  assign write_w_data = \produce_data$53 [36:5];
  assign write_w_en = 1'h1;
  assign \produce_valid$57  = write_stb;
  assign write_cyc = write_stb;
  assign write_ack = \produce_ready$59 ;
  assign latch_write = \produce_ready$61 ;
  assign \consume_valid$63  = \produce_valid$41 ;
  assign produce_d = consume_d;
  assign \produce_valid$71  = \consume_valid$40 ;
  assign core_reset = debug_reset;
  assign prog_addr = \$3 [31:0];
  assign \consume_data.pc  = consume_data[31:0];
  assign \consume_data.op  = consume_data[38:32];
  assign \consume_data.mode  = consume_data[118:39];
  assign \consume_data.mode.arith  = consume_data[117:39];
  assign \consume_data.mode.arith.f  = consume_data[41:39];
  assign \consume_data.mode.arith.m  = consume_data[48:42];
  assign \consume_data.mode.arith.s1  = consume_data[80:49];
  assign \consume_data.mode.arith.s2  = consume_data[112:81];
  assign \consume_data.mode.arith.d  = consume_data[117:113];
  assign \consume_data.mode.imm  = consume_data[97:39];
  assign \consume_data.mode.imm.f  = consume_data[41:39];
  assign \consume_data.mode.imm.m  = consume_data[48:42];
  assign \consume_data.mode.imm.s  = consume_data[80:49];
  assign \consume_data.mode.imm.i  = consume_data[92:81];
  assign \consume_data.mode.imm.d  = consume_data[97:93];
  assign \consume_data.mode.store  = consume_data[117:39];
  assign \consume_data.mode.store.f  = consume_data[41:39];
  assign \consume_data.mode.store.offset  = consume_data[53:42];
  assign \consume_data.mode.store.s1  = consume_data[85:54];
  assign \consume_data.mode.store.s2  = consume_data[117:86];
  assign \consume_data.mode.upper  = consume_data[75:39];
  assign \consume_data.mode.upper.d  = consume_data[43:39];
  assign \consume_data.mode.upper.i  = consume_data[75:44];
  assign \consume_data.mode.jump  = consume_data[75:39];
  assign \consume_data.mode.jump.d  = consume_data[43:39];
  assign \consume_data.mode.jump.t  = consume_data[75:44];
  assign \consume_data.mode.branch  = consume_data[118:39];
  assign \consume_data.mode.branch.f  = consume_data[41:39];
  assign \consume_data.mode.branch.offset  = consume_data[54:42];
  assign \consume_data.mode.branch.s1  = consume_data[86:55];
  assign \consume_data.mode.branch.s2  = consume_data[118:87];
  assign \produce_data.pc  = consume_data[31:0];
  assign \produce_data.op  = consume_data[38:32];
  assign \produce_data.mode  = consume_data[118:39];
  assign \produce_data.mode.arith  = consume_data[117:39];
  assign \produce_data.mode.arith.f  = consume_data[41:39];
  assign \produce_data.mode.arith.m  = consume_data[48:42];
  assign \produce_data.mode.arith.s1  = consume_data[80:49];
  assign \produce_data.mode.arith.s2  = consume_data[112:81];
  assign \produce_data.mode.arith.d  = consume_data[117:113];
  assign \produce_data.mode.imm  = consume_data[97:39];
  assign \produce_data.mode.imm.f  = consume_data[41:39];
  assign \produce_data.mode.imm.m  = consume_data[48:42];
  assign \produce_data.mode.imm.s  = consume_data[80:49];
  assign \produce_data.mode.imm.i  = consume_data[92:81];
  assign \produce_data.mode.imm.d  = consume_data[97:93];
  assign \produce_data.mode.store  = consume_data[117:39];
  assign \produce_data.mode.store.f  = consume_data[41:39];
  assign \produce_data.mode.store.offset  = consume_data[53:42];
  assign \produce_data.mode.store.s1  = consume_data[85:54];
  assign \produce_data.mode.store.s2  = consume_data[117:86];
  assign \produce_data.mode.upper  = consume_data[75:39];
  assign \produce_data.mode.upper.d  = consume_data[43:39];
  assign \produce_data.mode.upper.i  = consume_data[75:44];
  assign \produce_data.mode.jump  = consume_data[75:39];
  assign \produce_data.mode.jump.d  = consume_data[43:39];
  assign \produce_data.mode.jump.t  = consume_data[75:44];
  assign \produce_data.mode.branch  = consume_data[118:39];
  assign \produce_data.mode.branch.f  = consume_data[41:39];
  assign \produce_data.mode.branch.offset  = consume_data[54:42];
  assign \produce_data.mode.branch.s1  = consume_data[86:55];
  assign \produce_data.mode.branch.s2  = consume_data[118:87];
  assign \consume_data$31.pc  = \consume_data$31 [31:0];
  assign \consume_data$31.op  = \consume_data$31 [38:32];
  assign \consume_data$31.mode  = \consume_data$31 [63:39];
  assign \consume_data$31.mode.r  = \consume_data$31 [63:39];
  assign \consume_data$31.mode.r.rd  = \consume_data$31 [43:39];
  assign \consume_data$31.mode.r.f_lower  = \consume_data$31 [46:44];
  assign \consume_data$31.mode.r.rs1  = \consume_data$31 [51:47];
  assign \consume_data$31.mode.r.rs2  = \consume_data$31 [56:52];
  assign \consume_data$31.mode.r.f_upper  = \consume_data$31 [63:57];
  assign \consume_data$31.mode.i  = \consume_data$31 [63:39];
  assign \consume_data$31.mode.i.rd  = \consume_data$31 [43:39];
  assign \consume_data$31.mode.i.f  = \consume_data$31 [46:44];
  assign \consume_data$31.mode.i.rs  = \consume_data$31 [51:47];
  assign \consume_data$31.mode.i.imm  = \consume_data$31 [63:52];
  assign \consume_data$31.mode.u  = \consume_data$31 [63:39];
  assign \consume_data$31.mode.u.rd  = \consume_data$31 [43:39];
  assign \consume_data$31.mode.u.imm  = \consume_data$31 [63:44];
  assign \consume_data$31.mode.s  = \consume_data$31 [63:39];
  assign \consume_data$31.mode.s.imm_lower  = \consume_data$31 [43:39];
  assign \consume_data$31.mode.s.f  = \consume_data$31 [46:44];
  assign \consume_data$31.mode.s.rs1  = \consume_data$31 [51:47];
  assign \consume_data$31.mode.s.rs2  = \consume_data$31 [56:52];
  assign \consume_data$31.mode.s.imm_upper  = \consume_data$31 [63:57];
  assign \consume_data$31.mode.j  = \consume_data$31 [63:39];
  assign \consume_data$31.mode.j.rd  = \consume_data$31 [43:39];
  assign \consume_data$31.mode.j.offset  = \consume_data$31 [63:44];
  assign \consume_data$31.mode.b  = \consume_data$31 [63:39];
  assign \consume_data$31.mode.b.offset_lower  = \consume_data$31 [43:39];
  assign \consume_data$31.mode.b.f  = \consume_data$31 [46:44];
  assign \consume_data$31.mode.b.rs1  = \consume_data$31 [51:47];
  assign \consume_data$31.mode.b.rs2  = \consume_data$31 [56:52];
  assign \consume_data$31.mode.b.offset_upper  = \consume_data$31 [63:57];
  assign \consume_data$31.mode.m  = \consume_data$31 [63:39];
  assign \consume_data$31.mode.m.rd  = \consume_data$31 [43:39];
  assign \consume_data$31.mode.m.f  = \consume_data$31 [46:44];
  assign \consume_data$31.mode.m.rs1  = \consume_data$31 [51:47];
  assign \consume_data$31.mode.m.rs2  = \consume_data$31 [56:52];
  assign \consume_data$31.mode.m.muldiv  = \consume_data$31 [63:57];
  assign \produce_data$34.pc  = \produce_data$34 [31:0];
  assign \produce_data$34.op  = \produce_data$34 [38:32];
  assign \produce_data$34.mode  = \produce_data$34 [118:39];
  assign \produce_data$34.mode.arith  = \produce_data$34 [117:39];
  assign \produce_data$34.mode.arith.f  = \produce_data$34 [41:39];
  assign \produce_data$34.mode.arith.m  = \produce_data$34 [48:42];
  assign \produce_data$34.mode.arith.s1  = \produce_data$34 [80:49];
  assign \produce_data$34.mode.arith.s2  = \produce_data$34 [112:81];
  assign \produce_data$34.mode.arith.d  = \produce_data$34 [117:113];
  assign \produce_data$34.mode.imm  = \produce_data$34 [97:39];
  assign \produce_data$34.mode.imm.f  = \produce_data$34 [41:39];
  assign \produce_data$34.mode.imm.m  = \produce_data$34 [48:42];
  assign \produce_data$34.mode.imm.s  = \produce_data$34 [80:49];
  assign \produce_data$34.mode.imm.i  = \produce_data$34 [92:81];
  assign \produce_data$34.mode.imm.d  = \produce_data$34 [97:93];
  assign \produce_data$34.mode.store  = \produce_data$34 [117:39];
  assign \produce_data$34.mode.store.f  = \produce_data$34 [41:39];
  assign \produce_data$34.mode.store.offset  = \produce_data$34 [53:42];
  assign \produce_data$34.mode.store.s1  = \produce_data$34 [85:54];
  assign \produce_data$34.mode.store.s2  = \produce_data$34 [117:86];
  assign \produce_data$34.mode.upper  = \produce_data$34 [75:39];
  assign \produce_data$34.mode.upper.d  = \produce_data$34 [43:39];
  assign \produce_data$34.mode.upper.i  = \produce_data$34 [75:44];
  assign \produce_data$34.mode.jump  = \produce_data$34 [75:39];
  assign \produce_data$34.mode.jump.d  = \produce_data$34 [43:39];
  assign \produce_data$34.mode.jump.t  = \produce_data$34 [75:44];
  assign \produce_data$34.mode.branch  = \produce_data$34 [118:39];
  assign \produce_data$34.mode.branch.f  = \produce_data$34 [41:39];
  assign \produce_data$34.mode.branch.offset  = \produce_data$34 [54:42];
  assign \produce_data$34.mode.branch.s1  = \produce_data$34 [86:55];
  assign \produce_data$34.mode.branch.s2  = \produce_data$34 [118:87];
  assign \consume.f  = consume[2:0];
  assign \consume.a  = consume[34:3];
  assign \consume.b  = consume[66:35];
  assign \produce_data$53.d  = \produce_data$53 [4:0];
  assign \produce_data$53.value  = \produce_data$53 [36:5];
  assign \consume_data$67.d  = \consume_data$67 [4:0];
  assign \consume_data$67.value  = \consume_data$67 [36:5];
  assign consume[66:35] = \produce_data$34 [118:87];
  assign consume[34:3] = \produce_data$34 [86:55];
  assign consume[2:0] = \produce_data$34 [41:39];
  assign \consume_data$31 [63:32] = prog_r_data;
  assign \consume_data$31 [31:0] = pc;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:47" *)
(* generator = "Amaranth" *)
module \risc_project.core.alu (consume_s2, consume_function, consume_mode, produce_d, produce_valid, produce_value, consume_s1);
  reg \$auto$verilog_backend.cc:2352:dump_module$5  = 0;
  wire [32:0] \$1 ;
  wire [31:0] \$10 ;
  wire [31:0] \$11 ;
  wire [32:0] \$2 ;
  wire \$3 ;
  wire [38:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire [31:0] \$7 ;
  wire [31:0] \$8 ;
  wire [31:0] \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:24" *)
  wire [4:0] consume_d;
  (* enum_base_type = "AluFunction" *)
  (* enum_value_000 = "ADDSUB" *)
  (* enum_value_001 = "SHIFTLEFT" *)
  (* enum_value_010 = "LESSTHAN" *)
  (* enum_value_011 = "LESSTHANU" *)
  (* enum_value_100 = "XOR" *)
  (* enum_value_101 = "SHIFTRIGHT" *)
  (* enum_value_110 = "OR" *)
  (* enum_value_111 = "AND" *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:41" *)
  input [2:0] consume_function;
  wire [2:0] consume_function;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:26" *)
  input [6:0] consume_mode;
  wire [6:0] consume_mode;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:22" *)
  input [31:0] consume_s1;
  wire [31:0] consume_s1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:23" *)
  input [31:0] consume_s2;
  wire [31:0] consume_s2;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:27" *)
  wire consume_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:24" *)
  input [4:0] produce_d;
  wire [4:0] produce_d;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:35" *)
  reg produce_error;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:27" *)
  input produce_valid;
  wire produce_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:33" *)
  output [31:0] produce_value;
  reg [31:0] produce_value;
  assign \$1  = consume_s1 + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:60" *) consume_s2;
  assign \$2  = consume_s1 - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:65" *) consume_s2;
  assign \$3  = consume_s2 > (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:73" *) 3'h5;
  assign \$4  = consume_s1 << (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:79" *) consume_s2[2:0];
  assign \$5  = consume_s1 < (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:89" *) consume_s2;
  assign \$6  = consume_s1 < (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:99" *) consume_s2;
  assign \$7  = consume_s1 ^ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:109" *) consume_s2;
  assign \$8  = consume_s1 >> (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:119" *) consume_s2;
  assign \$9  = consume_s1 >> (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:124" *) consume_s2;
  assign \$10  = consume_s1 | (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:136" *) consume_s2;
  assign \$11  = consume_s1 & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\alu.py:145" *) consume_s2;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    produce_value = 32'd0;
    (* full_case = 32'd1 *)
    casez (consume_function)
      3'h0:
          casez (consume_mode)
            7'h00:
                produce_value = \$1 [31:0];
            7'h20:
                produce_value = \$2 [31:0];
          endcase
      3'h1:
          casez (consume_mode)
            7'h00:
                (* full_case = 32'd1 *)
                if (\$3 ) begin
                  produce_value = 32'd0;
                end else begin
                  produce_value = \$4 [31:0];
                end
          endcase
      3'h2:
          casez (consume_mode)
            7'h00:
                produce_value = { 31'h00000000, \$5  };
          endcase
      3'h3:
          casez (consume_mode)
            7'h00:
                produce_value = { 31'h00000000, \$6  };
          endcase
      3'h4:
          casez (consume_mode)
            7'h00:
                produce_value = \$7 ;
          endcase
      3'h5:
          casez (consume_mode)
            7'h00:
                produce_value = \$8 ;
            7'h20:
              begin
                produce_value[30:0] = \$9 [30:0];
                produce_value[31] = consume_s1[31];
              end
          endcase
      3'h6:
          casez (consume_mode)
            7'h00:
                produce_value = \$10 ;
          endcase
      3'h7:
          casez (consume_mode)
            7'h00:
                produce_value = \$11 ;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    produce_error = 1'h0;
    (* full_case = 32'd1 *)
    casez (consume_function)
      3'h0:
          (* full_case = 32'd1 *)
          casez (consume_mode)
            7'h00:
                /* empty */;
            7'h20:
                /* empty */;
            default:
                produce_error = 1'h1;
          endcase
      3'h1:
          (* full_case = 32'd1 *)
          casez (consume_mode)
            7'h00:
                /* empty */;
            default:
                produce_error = 1'h1;
          endcase
      3'h2:
          (* full_case = 32'd1 *)
          casez (consume_mode)
            7'h00:
                /* empty */;
            default:
                produce_error = 1'h1;
          endcase
      3'h3:
          (* full_case = 32'd1 *)
          casez (consume_mode)
            7'h00:
                /* empty */;
            default:
                produce_error = 1'h1;
          endcase
      3'h4:
          (* full_case = 32'd1 *)
          casez (consume_mode)
            7'h00:
                /* empty */;
            default:
                produce_error = 1'h1;
          endcase
      3'h5:
          (* full_case = 32'd1 *)
          casez (consume_mode)
            7'h00:
                /* empty */;
            7'h20:
                /* empty */;
            default:
                produce_error = 1'h1;
          endcase
      3'h6:
          (* full_case = 32'd1 *)
          casez (consume_mode)
            7'h00:
                /* empty */;
            default:
                produce_error = 1'h1;
          endcase
      3'h7:
          (* full_case = 32'd1 *)
          casez (consume_mode)
            7'h00:
                /* empty */;
            default:
                produce_error = 1'h1;
          endcase
    endcase
  end
  assign consume_valid = produce_valid;
  assign consume_d = produce_d;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:26" *)
(* generator = "Amaranth" *)
module \risc_project.core.branch$83 (consume, branch, en);
  reg \$auto$verilog_backend.cc:2352:dump_module$6  = 0;
  wire \$1 ;
  wire \$2 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:22" *)
  output branch;
  reg branch;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:19" *)
  input [66:0] consume;
  wire [66:0] consume;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:19" *)
  wire [31:0] \consume.a ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:19" *)
  wire [31:0] \consume.b ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:19" *)
  wire [2:0] \consume.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:20" *)
  input en;
  wire en;
  assign \$4  = $signed(consume[34:3]) >= (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:52" *) $signed(consume[66:35]);
  assign \$5  = consume[34:3] < (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:57" *) consume[66:35];
  assign \$6  = consume[34:3] >= (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:62" *) consume[66:35];
  assign \$1  = consume[34:3] == (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:37" *) consume[66:35];
  assign \$2  = consume[34:3] != (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:42" *) consume[66:35];
  assign \$3  = $signed(consume[34:3]) < (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\branch.py:47" *) $signed(consume[66:35]);
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    branch = 1'h0;
    if (en) begin
      casez (consume[2:0])
        3'h0:
            branch = \$1 ;
        3'h1:
            branch = \$2 ;
        3'h4:
            branch = \$3 ;
        3'h5:
            branch = \$4 ;
        3'h6:
            branch = \$5 ;
        3'h7:
            branch = \$6 ;
      endcase
    end
  end
  assign \consume.f  = consume[2:0];
  assign \consume.a  = consume[34:3];
  assign \consume.b  = consume[66:35];
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:128" *)
(* generator = "Amaranth" *)
module \risc_project.core.decode (rst, consume_ready, produce_valid, produce_ready, write_cyc, \port$646$0 , debug_addr, debug_cyc, debug_stb, debug_w_en, debug_w_data, consume_data, core_reset, produce_data, debug_r_data, write_ack, debug_ack, consume_valid, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$7  = 0;
  wire \$1 ;
  wire [34:0] \$10 ;
  wire [32:0] \$11 ;
  wire [32:0] \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$2 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire [33:0] \$6 ;
  wire [33:0] \$7 ;
  wire [34:0] \$8 ;
  wire [35:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  input [63:0] consume_data;
  wire [63:0] consume_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data.mode ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data.mode.b ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \consume_data.mode.b.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.b.offset_lower ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \consume_data.mode.b.offset_upper ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.b.rs1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.b.rs2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data.mode.i ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \consume_data.mode.i.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [11:0] \consume_data.mode.i.imm ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.i.rd ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.i.rs ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data.mode.j ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [19:0] \consume_data.mode.j.offset ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.j.rd ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data.mode.m ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \consume_data.mode.m.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \consume_data.mode.m.muldiv ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.m.rd ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.m.rs1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.m.rs2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data.mode.r ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \consume_data.mode.r.f_lower ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \consume_data.mode.r.f_upper ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.r.rd ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.r.rs1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.r.rs2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data.mode.s ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \consume_data.mode.s.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.s.imm_lower ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \consume_data.mode.s.imm_upper ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.s.rs1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.s.rs2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [24:0] \consume_data.mode.u ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [19:0] \consume_data.mode.u.imm ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \consume_data.mode.u.rd ;
  (* enum_base_type = "Instruction" *)
  (* enum_value_0000011 = "MEMORYLOAD" *)
  (* enum_value_0001111 = "FENCE" *)
  (* enum_value_0010011 = "ARITHIMM" *)
  (* enum_value_0010111 = "AUIPC" *)
  (* enum_value_0100011 = "MEMORYSTORE" *)
  (* enum_value_0110011 = "ARITH" *)
  (* enum_value_0110111 = "LUI" *)
  (* enum_value_1100011 = "BRANCH" *)
  (* enum_value_1100111 = "JALR" *)
  (* enum_value_1101111 = "JAL" *)
  (* enum_value_1110011 = "E" *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \consume_data.op ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \consume_data.pc ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  output consume_ready;
  wire consume_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  input consume_valid;
  wire consume_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:64" *)
  input core_reset;
  wire core_reset;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  output debug_ack;
  reg debug_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  input [4:0] debug_addr;
  wire [4:0] debug_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  input debug_cyc;
  wire debug_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  output [31:0] debug_r_data;
  reg [31:0] debug_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  input debug_stb;
  wire debug_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  input [31:0] debug_w_data;
  wire [31:0] debug_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  input debug_w_en;
  wire debug_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  reg error_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  reg error_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  reg [31:0] error_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  reg error_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:134" *)
  wire error_flag;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:151" *)
  wire [20:0] jal_offset;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:162" *)
  wire [11:0] jalr_offset;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:137" *)
  reg [1:0] num_regs;
  input [36:0] \port$646$0 ;
  wire [36:0] \port$646$0 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  output [118:0] produce_data;
  reg [118:0] produce_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [79:0] \produce_data.mode ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [78:0] \produce_data.mode.arith ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \produce_data.mode.arith.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \produce_data.mode.arith.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \produce_data.mode.arith.m ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.arith.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.arith.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [79:0] \produce_data.mode.branch ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \produce_data.mode.branch.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [12:0] \produce_data.mode.branch.offset ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.branch.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.branch.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [58:0] \produce_data.mode.imm ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \produce_data.mode.imm.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \produce_data.mode.imm.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [11:0] \produce_data.mode.imm.i ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \produce_data.mode.imm.m ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.imm.s ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [36:0] \produce_data.mode.jump ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \produce_data.mode.jump.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.jump.t ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [78:0] \produce_data.mode.store ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [2:0] \produce_data.mode.store.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [11:0] \produce_data.mode.store.offset ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.store.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.store.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [36:0] \produce_data.mode.upper ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [4:0] \produce_data.mode.upper.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.mode.upper.i ;
  (* enum_base_type = "Instruction" *)
  (* enum_value_0000011 = "MEMORYLOAD" *)
  (* enum_value_0001111 = "FENCE" *)
  (* enum_value_0010011 = "ARITHIMM" *)
  (* enum_value_0010111 = "AUIPC" *)
  (* enum_value_0100011 = "MEMORYSTORE" *)
  (* enum_value_0110011 = "ARITH" *)
  (* enum_value_0110111 = "LUI" *)
  (* enum_value_1100011 = "BRANCH" *)
  (* enum_value_1100111 = "JALR" *)
  (* enum_value_1101111 = "JAL" *)
  (* enum_value_1110011 = "E" *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [6:0] \produce_data.op ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:119" *)
  wire [31:0] \produce_data.pc ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  input produce_ready;
  wire produce_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  output produce_valid;
  wire produce_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:67" *)
  wire [4:0] r_rd;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:68" *)
  wire r_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire rd_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  reg [4:0] rd_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  reg rd_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] rd_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  reg rd_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  reg [31:0] rd_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  reg rd_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:139" *)
  reg reg_write;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:133" *)
  reg register_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire rs1_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [4:0] rs1_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  reg rs1_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] rs1_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  reg rs1_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  wire rs2_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [4:0] rs2_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  reg rs2_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  wire [31:0] rs2_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  reg rs2_stb;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  output write_ack;
  reg write_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [4:0] write_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  input write_cyc;
  wire write_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  wire write_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] write_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire write_w_en;
  assign \$1  = reg_write & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:143" *) consume_ready;
  assign r_valid = \$1  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:143" *) consume_valid;
  assign \$2  = register_ready & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:145" *) produce_ready;
  assign \$4  = consume_valid & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:146" *) register_ready;
  assign \$6  = $signed({ 1'h0, consume_data[31:0] }) + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:170" *) $signed(jal_offset);
  assign \$7  = $signed({ 1'h0, rs1_r_data }) + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:173" *) $signed(consume_data[63:52]);
  assign \$9  = $signed({ 1'h0, consume_data[31:0] }) + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:220" *) $signed(\$8 );
  assign \$11  = consume_data[31:0] + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:234" *) 3'h4;
  assign \$12  = consume_data[31:0] + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:239" *) 3'h4;
  assign \$13  = rs1_ack & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:282" *) rs2_ack;
  assign \$14  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:314" *) debug_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:131" *)
  \risc_project.core.decode.reg  \reg  (
    .clk(clk),
    .core_reset(core_reset),
    .\port$877$47 (consume_data[56:47]),
    .r_rd(consume_data[43:39]),
    .r_valid(r_valid),
    .rd_ack(rd_ack),
    .rd_cyc(rd_cyc),
    .rd_r_data(rd_r_data),
    .rd_stb(rd_stb),
    .rd_w_data(rd_w_data),
    .rd_w_en(rd_w_en),
    .rs1_ack(rs1_ack),
    .rs1_r_data(rs1_r_data),
    .rs2_ack(rs2_ack),
    .rs2_r_data(rs2_r_data),
    .rst(rst),
    .w_rd(rd_addr)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    produce_data[118:39] = 80'h00000000000000000000;
    (* full_case = 32'd1 *)
    casez (consume_data[38:32])
      7'h6f:
          produce_data[31:0] = \$6 [31:0];
      7'h67:
          produce_data[31:0] = \$7 [31:0];
      default:
          produce_data[31:0] = consume_data[31:0];
    endcase
    casez (consume_data[38:32])
      7'h33:
        begin
          produce_data[41:39] = consume_data[46:44];
          produce_data[80:49] = rs1_r_data;
          produce_data[112:81] = rs2_r_data;
          produce_data[48:42] = consume_data[63:57];
          produce_data[117:113] = consume_data[43:39];
        end
      7'h13:
        begin
          produce_data[41:39] = consume_data[46:44];
          produce_data[80:49] = rs1_r_data;
          produce_data[92:81] = consume_data[63:52];
          produce_data[97:93] = consume_data[43:39];
        end
      7'h03:
        begin
          produce_data[41:39] = consume_data[46:44];
          produce_data[80:49] = rs1_r_data;
          produce_data[92:81] = consume_data[63:52];
          produce_data[97:93] = consume_data[43:39];
        end
      7'h23:
        begin
          produce_data[41:39] = consume_data[46:44];
          produce_data[53:42] = { consume_data[63:57], consume_data[43:39] };
          produce_data[85:54] = rs1_r_data;
          produce_data[117:86] = rs2_r_data;
        end
      7'h17:
        begin
          produce_data[43:39] = consume_data[43:39];
          produce_data[75:44] = \$9 [31:0];
        end
      7'h37:
        begin
          produce_data[43:39] = consume_data[43:39];
          produce_data[75:44] = \$10 [31:0];
        end
      7'h6f:
        begin
          produce_data[43:39] = consume_data[43:39];
          produce_data[75:44] = \$11 [31:0];
        end
      7'h67:
        begin
          produce_data[43:39] = consume_data[43:39];
          produce_data[75:44] = \$12 [31:0];
        end
      7'h63:
        begin
          produce_data[41:39] = consume_data[46:44];
          produce_data[86:55] = rs1_r_data;
          produce_data[118:87] = rs2_r_data;
          produce_data[42] = 1'h0;
          produce_data[46:43] = consume_data[43:40];
          produce_data[52:47] = consume_data[62:57];
          produce_data[53] = consume_data[39];
          produce_data[54] = consume_data[63];
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    error_cyc = 1'h0;
    (* full_case = 32'd1 *)
    casez (consume_data[38:32])
      7'h33:
          /* empty */;
      7'h13:
          /* empty */;
      7'h03:
          /* empty */;
      7'h23:
          /* empty */;
      7'h17:
          /* empty */;
      7'h37:
          /* empty */;
      7'h6f:
          /* empty */;
      7'h67:
          /* empty */;
      7'h63:
          /* empty */;
      7'h0f:
          /* empty */;
      default:
          error_cyc = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    error_stb = 1'h0;
    (* full_case = 32'd1 *)
    casez (consume_data[38:32])
      7'h33:
          /* empty */;
      7'h13:
          /* empty */;
      7'h03:
          /* empty */;
      7'h23:
          /* empty */;
      7'h17:
          /* empty */;
      7'h37:
          /* empty */;
      7'h6f:
          /* empty */;
      7'h67:
          /* empty */;
      7'h63:
          /* empty */;
      7'h0f:
          /* empty */;
      default:
          error_stb = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    error_w_en = 1'h0;
    (* full_case = 32'd1 *)
    casez (consume_data[38:32])
      7'h33:
          /* empty */;
      7'h13:
          /* empty */;
      7'h03:
          /* empty */;
      7'h23:
          /* empty */;
      7'h17:
          /* empty */;
      7'h37:
          /* empty */;
      7'h6f:
          /* empty */;
      7'h67:
          /* empty */;
      7'h63:
          /* empty */;
      7'h0f:
          /* empty */;
      default:
          error_w_en = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    error_w_data = 32'd0;
    (* full_case = 32'd1 *)
    casez (consume_data[38:32])
      7'h33:
          /* empty */;
      7'h13:
          /* empty */;
      7'h03:
          /* empty */;
      7'h23:
          /* empty */;
      7'h17:
          /* empty */;
      7'h37:
          /* empty */;
      7'h6f:
          /* empty */;
      7'h67:
          /* empty */;
      7'h63:
          /* empty */;
      7'h0f:
          /* empty */;
      default:
          error_w_data = { 25'h0000000, consume_data[38:32] };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    rs1_cyc = 1'h0;
    casez (num_regs)
      2'h1:
          rs1_cyc = consume_valid;
      2'h2:
          rs1_cyc = consume_valid;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    rs1_stb = 1'h0;
    casez (num_regs)
      2'h1:
          rs1_stb = consume_valid;
      2'h2:
          rs1_stb = consume_valid;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    casez (num_regs)
      2'h1:
          register_ready = rs1_ack;
      2'h2:
          register_ready = \$13 ;
      default:
          register_ready = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    rs2_cyc = 1'h0;
    casez (num_regs)
      2'h1:
          /* empty */;
      2'h2:
          rs2_cyc = consume_valid;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    rs2_stb = 1'h0;
    casez (num_regs)
      2'h1:
          /* empty */;
      2'h2:
          rs2_stb = consume_valid;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    num_regs = 2'h0;
    casez (consume_data[38:32])
      7'h33:
          num_regs = 2'h2;
      7'h13:
          num_regs = 2'h1;
      7'h03:
          num_regs = 2'h1;
      7'h23:
          num_regs = 2'h2;
      7'h6f:
          num_regs = 2'h0;
      7'h67:
          num_regs = 2'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    reg_write = 1'h0;
    casez (consume_data[38:32])
      7'h33:
          reg_write = 1'h1;
      7'h13:
          reg_write = 1'h1;
      7'h03:
          reg_write = 1'h1;
      7'h23:
          reg_write = 1'h0;
      7'h6f:
          reg_write = 1'h1;
      7'h67:
          reg_write = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    if (\$14 ) begin
      rd_addr = \port$646$0 [4:0];
    end else begin
      rd_addr = debug_addr;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    if (\$14 ) begin
      rd_cyc = write_cyc;
    end else begin
      rd_cyc = debug_cyc;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    if (\$14 ) begin
      rd_stb = write_cyc;
    end else begin
      rd_stb = debug_stb;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    if (\$14 ) begin
      rd_w_data = \port$646$0 [36:5];
    end else begin
      rd_w_data = debug_w_data;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    if (\$14 ) begin
      rd_w_en = 1'h1;
    end else begin
      rd_w_en = debug_w_en;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    if (\$14 ) begin
      debug_r_data = rd_r_data;
    end else begin
      debug_r_data = rd_r_data;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    write_ack = 1'h0;
    if (\$14 ) begin
      write_ack = rd_ack;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    debug_ack = 1'h0;
    (* full_case = 32'd1 *)
    if (\$14 ) begin
    end else begin
      debug_ack = rd_ack;
    end
  end
  assign r_rd = consume_data[43:39];
  assign error_flag = 1'h0;
  assign jalr_offset = consume_data[63:52];
  assign rs1_addr = consume_data[51:47];
  assign rs2_addr = consume_data[56:52];
  assign write_addr = \port$646$0 [4:0];
  assign write_stb = write_cyc;
  assign write_w_data = \port$646$0 [36:5];
  assign write_w_en = 1'h1;
  assign \consume_data.pc  = consume_data[31:0];
  assign \consume_data.op  = consume_data[38:32];
  assign \consume_data.mode  = consume_data[63:39];
  assign \consume_data.mode.r  = consume_data[63:39];
  assign \consume_data.mode.r.rd  = consume_data[43:39];
  assign \consume_data.mode.r.f_lower  = consume_data[46:44];
  assign \consume_data.mode.r.rs1  = consume_data[51:47];
  assign \consume_data.mode.r.rs2  = consume_data[56:52];
  assign \consume_data.mode.r.f_upper  = consume_data[63:57];
  assign \consume_data.mode.i  = consume_data[63:39];
  assign \consume_data.mode.i.rd  = consume_data[43:39];
  assign \consume_data.mode.i.f  = consume_data[46:44];
  assign \consume_data.mode.i.rs  = consume_data[51:47];
  assign \consume_data.mode.i.imm  = consume_data[63:52];
  assign \consume_data.mode.u  = consume_data[63:39];
  assign \consume_data.mode.u.rd  = consume_data[43:39];
  assign \consume_data.mode.u.imm  = consume_data[63:44];
  assign \consume_data.mode.s  = consume_data[63:39];
  assign \consume_data.mode.s.imm_lower  = consume_data[43:39];
  assign \consume_data.mode.s.f  = consume_data[46:44];
  assign \consume_data.mode.s.rs1  = consume_data[51:47];
  assign \consume_data.mode.s.rs2  = consume_data[56:52];
  assign \consume_data.mode.s.imm_upper  = consume_data[63:57];
  assign \consume_data.mode.j  = consume_data[63:39];
  assign \consume_data.mode.j.rd  = consume_data[43:39];
  assign \consume_data.mode.j.offset  = consume_data[63:44];
  assign \consume_data.mode.b  = consume_data[63:39];
  assign \consume_data.mode.b.offset_lower  = consume_data[43:39];
  assign \consume_data.mode.b.f  = consume_data[46:44];
  assign \consume_data.mode.b.rs1  = consume_data[51:47];
  assign \consume_data.mode.b.rs2  = consume_data[56:52];
  assign \consume_data.mode.b.offset_upper  = consume_data[63:57];
  assign \consume_data.mode.m  = consume_data[63:39];
  assign \consume_data.mode.m.rd  = consume_data[43:39];
  assign \consume_data.mode.m.f  = consume_data[46:44];
  assign \consume_data.mode.m.rs1  = consume_data[51:47];
  assign \consume_data.mode.m.rs2  = consume_data[56:52];
  assign \consume_data.mode.m.muldiv  = consume_data[63:57];
  assign \produce_data.pc  = produce_data[31:0];
  assign \produce_data.op  = produce_data[38:32];
  assign \produce_data.mode  = produce_data[118:39];
  assign \produce_data.mode.arith  = produce_data[117:39];
  assign \produce_data.mode.arith.f  = produce_data[41:39];
  assign \produce_data.mode.arith.m  = produce_data[48:42];
  assign \produce_data.mode.arith.s1  = produce_data[80:49];
  assign \produce_data.mode.arith.s2  = produce_data[112:81];
  assign \produce_data.mode.arith.d  = produce_data[117:113];
  assign \produce_data.mode.imm  = produce_data[97:39];
  assign \produce_data.mode.imm.f  = produce_data[41:39];
  assign \produce_data.mode.imm.m  = produce_data[48:42];
  assign \produce_data.mode.imm.s  = produce_data[80:49];
  assign \produce_data.mode.imm.i  = produce_data[92:81];
  assign \produce_data.mode.imm.d  = produce_data[97:93];
  assign \produce_data.mode.store  = produce_data[117:39];
  assign \produce_data.mode.store.f  = produce_data[41:39];
  assign \produce_data.mode.store.offset  = produce_data[53:42];
  assign \produce_data.mode.store.s1  = produce_data[85:54];
  assign \produce_data.mode.store.s2  = produce_data[117:86];
  assign \produce_data.mode.upper  = produce_data[75:39];
  assign \produce_data.mode.upper.d  = produce_data[43:39];
  assign \produce_data.mode.upper.i  = produce_data[75:44];
  assign \produce_data.mode.jump  = produce_data[75:39];
  assign \produce_data.mode.jump.d  = produce_data[43:39];
  assign \produce_data.mode.jump.t  = produce_data[75:44];
  assign \produce_data.mode.branch  = produce_data[118:39];
  assign \produce_data.mode.branch.f  = produce_data[41:39];
  assign \produce_data.mode.branch.offset  = produce_data[54:42];
  assign \produce_data.mode.branch.s1  = produce_data[86:55];
  assign \produce_data.mode.branch.s2  = produce_data[118:87];
  always @*
    produce_data[38:32] = consume_data[38:32];
  assign jal_offset[20] = consume_data[63];
  assign jal_offset[19:12] = consume_data[51:44];
  assign jal_offset[11] = consume_data[52];
  assign jal_offset[10:1] = consume_data[62:53];
  assign jal_offset[0] = 1'h0;
  assign \$3  = 1'h1;
  assign consume_ready = \$2 ;
  assign \$5  = 1'h1;
  assign produce_valid = \$4 ;
  assign \$8  = { consume_data[63], consume_data[63], consume_data[63], consume_data[63:44], 12'h000 };
  assign \$10  = { consume_data[63], consume_data[63], consume_data[63], consume_data[63:44], 12'h000 };
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:73" *)
(* generator = "Amaranth" *)
module \risc_project.core.decode.reg (rst, r_valid, rs1_r_data, rs2_r_data, rd_ack, rs1_ack, rs2_ack, r_rd, \port$877$47 , core_reset, w_rd, rd_cyc, rd_stb, rd_w_data, rd_w_en, rd_r_data, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$8  = 0;
  wire \$1 ;
  reg [31:0] \$10 ;
  reg [31:0] \$11 ;
  reg [31:0] \$12 ;
  reg [31:0] \$13 ;
  reg [31:0] \$14 ;
  reg [31:0] \$15 ;
  reg [31:0] \$16 ;
  reg [31:0] \$17 ;
  reg [31:0] \$18 ;
  reg [31:0] \$19 ;
  reg [31:0] \$2 ;
  reg [31:0] \$20 ;
  reg [31:0] \$21 ;
  reg [31:0] \$22 ;
  reg [31:0] \$23 ;
  reg [31:0] \$24 ;
  reg [31:0] \$25 ;
  reg [31:0] \$26 ;
  reg [31:0] \$27 ;
  reg [31:0] \$28 ;
  reg [31:0] \$29 ;
  wire \$3 ;
  reg [31:0] \$30 ;
  reg [31:0] \$31 ;
  reg [31:0] \$32 ;
  reg [31:0] \$33 ;
  reg [31:0] \$34 ;
  reg [31:0] \$35 ;
  reg [31:0] \$4 ;
  reg [31:0] \$5 ;
  reg [31:0] \$6 ;
  reg [31:0] \$7 ;
  reg [31:0] \$8 ;
  reg [31:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:64" *)
  input core_reset;
  wire core_reset;
  input [9:0] \port$877$47 ;
  wire [9:0] \port$877$47 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r00 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r01 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r02 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r03 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r04 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r05 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r06 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r07 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r08 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r09 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r0A = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r0B = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r0C = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r0D = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r0E = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r0F = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r10 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r11 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r12 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r13 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r14 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r15 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r16 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r17 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r18 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r19 = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r1A = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r1B = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r1C = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r1D = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r1E = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  reg [31:0] r1F = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:21" *)
  wire r_ok1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:22" *)
  wire r_ok2;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:67" *)
  input [4:0] r_rd;
  wire [4:0] r_rd;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:67" *)
  wire [4:0] \r_rd$3 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:18" *)
  wire [4:0] r_rs1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:19" *)
  wire [4:0] r_rs2;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:68" *)
  input r_valid;
  wire r_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:68" *)
  wire \r_valid$1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  output rd_ack;
  wire rd_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [4:0] rd_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  input rd_cyc;
  wire rd_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  output [31:0] rd_r_data;
  reg [31:0] rd_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  input rd_stb;
  wire rd_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  input [31:0] rd_w_data;
  wire [31:0] rd_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  input rd_w_en;
  wire rd_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:21" *)
  output rs1_ack;
  wire rs1_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [4:0] rs1_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  output [31:0] rs1_r_data;
  reg [31:0] rs1_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:22" *)
  output rs2_ack;
  wire rs2_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [4:0] rs2_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  output [31:0] rs2_r_data;
  reg [31:0] rs2_r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  input [4:0] w_rd;
  wire [4:0] w_rd;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:24" *)
  wire w_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r1C <= \$32 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r1D <= \$33 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r1E <= \$34 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r1F <= \$35 ;
  assign w_valid = rd_cyc & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:95" *) rd_stb;
  assign rd_ack = rd_cyc & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:98" *) rd_stb;
  assign \$1  = rd_cyc & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:100" *) rd_stb;
  assign \$3  = rd_cyc & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:100" *) rd_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r00 <= \$4 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r01 <= \$5 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r02 <= \$6 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r03 <= \$7 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r04 <= \$8 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r05 <= \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r06 <= \$10 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r07 <= \$11 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r08 <= \$12 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r09 <= \$13 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r0A <= \$14 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r0B <= \$15 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r0C <= \$16 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r0D <= \$17 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r0E <= \$18 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r0F <= \$19 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r10 <= \$20 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r11 <= \$21 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r12 <= \$22 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r13 <= \$23 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r14 <= \$24 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r15 <= \$25 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r16 <= \$26 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r17 <= \$27 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r18 <= \$28 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r19 <= \$29 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r1A <= \$30 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:75" *)
  always @(posedge clk)
    r1B <= \$31 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:77" *)
  \risc_project.core.decode.reg.mask  mask (
    .clk(clk),
    .core_reset(core_reset),
    .\port$877$47 (\port$877$47 ),
    .r1_ok(rs1_ack),
    .r2_ok(rs2_ack),
    .r_rd(r_rd),
    .r_valid(r_valid),
    .rst(rst),
    .w_rd(w_rd),
    .w_valid(w_valid)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$32  = r1C;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              /* empty */;
          5'h11:
              /* empty */;
          5'h12:
              /* empty */;
          5'h13:
              /* empty */;
          5'h14:
              /* empty */;
          5'h15:
              /* empty */;
          5'h16:
              /* empty */;
          5'h17:
              /* empty */;
          5'h18:
              /* empty */;
          5'h19:
              /* empty */;
          5'h1a:
              /* empty */;
          5'h1b:
              /* empty */;
          5'h1c:
              \$32  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$32  = 32'd0;
    end
    if (rst) begin
      \$32  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$33  = r1D;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              /* empty */;
          5'h11:
              /* empty */;
          5'h12:
              /* empty */;
          5'h13:
              /* empty */;
          5'h14:
              /* empty */;
          5'h15:
              /* empty */;
          5'h16:
              /* empty */;
          5'h17:
              /* empty */;
          5'h18:
              /* empty */;
          5'h19:
              /* empty */;
          5'h1a:
              /* empty */;
          5'h1b:
              /* empty */;
          5'h1c:
              /* empty */;
          5'h1d:
              \$33  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$33  = 32'd0;
    end
    if (rst) begin
      \$33  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$34  = r1E;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              /* empty */;
          5'h11:
              /* empty */;
          5'h12:
              /* empty */;
          5'h13:
              /* empty */;
          5'h14:
              /* empty */;
          5'h15:
              /* empty */;
          5'h16:
              /* empty */;
          5'h17:
              /* empty */;
          5'h18:
              /* empty */;
          5'h19:
              /* empty */;
          5'h1a:
              /* empty */;
          5'h1b:
              /* empty */;
          5'h1c:
              /* empty */;
          5'h1d:
              /* empty */;
          5'h1e:
              \$34  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$34  = 32'd0;
    end
    if (rst) begin
      \$34  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$35  = r1F;
    if (\$3 ) begin
      if (rd_w_en) begin
        (* full_case = 32'd1 *)
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              /* empty */;
          5'h11:
              /* empty */;
          5'h12:
              /* empty */;
          5'h13:
              /* empty */;
          5'h14:
              /* empty */;
          5'h15:
              /* empty */;
          5'h16:
              /* empty */;
          5'h17:
              /* empty */;
          5'h18:
              /* empty */;
          5'h19:
              /* empty */;
          5'h1a:
              /* empty */;
          5'h1b:
              /* empty */;
          5'h1c:
              /* empty */;
          5'h1d:
              /* empty */;
          5'h1e:
              /* empty */;
          5'h1f:
              \$35  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$35  = 32'd0;
    end
    if (rst) begin
      \$35  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    (* full_case = 32'd1 *)
    casez (\port$877$47 [4:0])
      5'h00:
          rs1_r_data = r00;
      5'h01:
          rs1_r_data = r01;
      5'h02:
          rs1_r_data = r02;
      5'h03:
          rs1_r_data = r03;
      5'h04:
          rs1_r_data = r04;
      5'h05:
          rs1_r_data = r05;
      5'h06:
          rs1_r_data = r06;
      5'h07:
          rs1_r_data = r07;
      5'h08:
          rs1_r_data = r08;
      5'h09:
          rs1_r_data = r09;
      5'h0a:
          rs1_r_data = r0A;
      5'h0b:
          rs1_r_data = r0B;
      5'h0c:
          rs1_r_data = r0C;
      5'h0d:
          rs1_r_data = r0D;
      5'h0e:
          rs1_r_data = r0E;
      5'h0f:
          rs1_r_data = r0F;
      5'h10:
          rs1_r_data = r10;
      5'h11:
          rs1_r_data = r11;
      5'h12:
          rs1_r_data = r12;
      5'h13:
          rs1_r_data = r13;
      5'h14:
          rs1_r_data = r14;
      5'h15:
          rs1_r_data = r15;
      5'h16:
          rs1_r_data = r16;
      5'h17:
          rs1_r_data = r17;
      5'h18:
          rs1_r_data = r18;
      5'h19:
          rs1_r_data = r19;
      5'h1a:
          rs1_r_data = r1A;
      5'h1b:
          rs1_r_data = r1B;
      5'h1c:
          rs1_r_data = r1C;
      5'h1d:
          rs1_r_data = r1D;
      5'h1e:
          rs1_r_data = r1E;
      5'h1f:
          rs1_r_data = r1F;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    (* full_case = 32'd1 *)
    casez (\port$877$47 [9:5])
      5'h00:
          rs2_r_data = r00;
      5'h01:
          rs2_r_data = r01;
      5'h02:
          rs2_r_data = r02;
      5'h03:
          rs2_r_data = r03;
      5'h04:
          rs2_r_data = r04;
      5'h05:
          rs2_r_data = r05;
      5'h06:
          rs2_r_data = r06;
      5'h07:
          rs2_r_data = r07;
      5'h08:
          rs2_r_data = r08;
      5'h09:
          rs2_r_data = r09;
      5'h0a:
          rs2_r_data = r0A;
      5'h0b:
          rs2_r_data = r0B;
      5'h0c:
          rs2_r_data = r0C;
      5'h0d:
          rs2_r_data = r0D;
      5'h0e:
          rs2_r_data = r0E;
      5'h0f:
          rs2_r_data = r0F;
      5'h10:
          rs2_r_data = r10;
      5'h11:
          rs2_r_data = r11;
      5'h12:
          rs2_r_data = r12;
      5'h13:
          rs2_r_data = r13;
      5'h14:
          rs2_r_data = r14;
      5'h15:
          rs2_r_data = r15;
      5'h16:
          rs2_r_data = r16;
      5'h17:
          rs2_r_data = r17;
      5'h18:
          rs2_r_data = r18;
      5'h19:
          rs2_r_data = r19;
      5'h1a:
          rs2_r_data = r1A;
      5'h1b:
          rs2_r_data = r1B;
      5'h1c:
          rs2_r_data = r1C;
      5'h1d:
          rs2_r_data = r1D;
      5'h1e:
          rs2_r_data = r1E;
      5'h1f:
          rs2_r_data = r1F;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    (* full_case = 32'd1 *)
    casez (w_rd)
      5'h00:
          \$2  = r00;
      5'h01:
          \$2  = r01;
      5'h02:
          \$2  = r02;
      5'h03:
          \$2  = r03;
      5'h04:
          \$2  = r04;
      5'h05:
          \$2  = r05;
      5'h06:
          \$2  = r06;
      5'h07:
          \$2  = r07;
      5'h08:
          \$2  = r08;
      5'h09:
          \$2  = r09;
      5'h0a:
          \$2  = r0A;
      5'h0b:
          \$2  = r0B;
      5'h0c:
          \$2  = r0C;
      5'h0d:
          \$2  = r0D;
      5'h0e:
          \$2  = r0E;
      5'h0f:
          \$2  = r0F;
      5'h10:
          \$2  = r10;
      5'h11:
          \$2  = r11;
      5'h12:
          \$2  = r12;
      5'h13:
          \$2  = r13;
      5'h14:
          \$2  = r14;
      5'h15:
          \$2  = r15;
      5'h16:
          \$2  = r16;
      5'h17:
          \$2  = r17;
      5'h18:
          \$2  = r18;
      5'h19:
          \$2  = r19;
      5'h1a:
          \$2  = r1A;
      5'h1b:
          \$2  = r1B;
      5'h1c:
          \$2  = r1C;
      5'h1d:
          \$2  = r1D;
      5'h1e:
          \$2  = r1E;
      5'h1f:
          \$2  = r1F;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    rd_r_data = 32'd0;
    if (\$1 ) begin
      (* full_case = 32'd1 *)
      if (rd_w_en) begin
      end else begin
        rd_r_data = \$2 ;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$4  = r00;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              \$4  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$4  = 32'd0;
    end
    if (rst) begin
      \$4  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$5  = r01;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              \$5  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$5  = 32'd0;
    end
    if (rst) begin
      \$5  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$6  = r02;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              \$6  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$6  = 32'd0;
    end
    if (rst) begin
      \$6  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$7  = r03;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              \$7  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$7  = 32'd0;
    end
    if (rst) begin
      \$7  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$8  = r04;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              \$8  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$8  = 32'd0;
    end
    if (rst) begin
      \$8  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$9  = r05;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              \$9  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$9  = 32'd0;
    end
    if (rst) begin
      \$9  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$10  = r06;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              \$10  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$10  = 32'd0;
    end
    if (rst) begin
      \$10  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$11  = r07;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              \$11  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$11  = 32'd0;
    end
    if (rst) begin
      \$11  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$12  = r08;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              \$12  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$12  = 32'd0;
    end
    if (rst) begin
      \$12  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$13  = r09;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              \$13  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$13  = 32'd0;
    end
    if (rst) begin
      \$13  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$14  = r0A;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              \$14  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$14  = 32'd0;
    end
    if (rst) begin
      \$14  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$15  = r0B;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              \$15  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$15  = 32'd0;
    end
    if (rst) begin
      \$15  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$16  = r0C;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              \$16  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$16  = 32'd0;
    end
    if (rst) begin
      \$16  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$17  = r0D;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              \$17  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$17  = 32'd0;
    end
    if (rst) begin
      \$17  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$18  = r0E;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              \$18  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$18  = 32'd0;
    end
    if (rst) begin
      \$18  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$19  = r0F;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              \$19  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$19  = 32'd0;
    end
    if (rst) begin
      \$19  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$20  = r10;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              \$20  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$20  = 32'd0;
    end
    if (rst) begin
      \$20  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$21  = r11;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              /* empty */;
          5'h11:
              \$21  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$21  = 32'd0;
    end
    if (rst) begin
      \$21  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$22  = r12;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              /* empty */;
          5'h11:
              /* empty */;
          5'h12:
              \$22  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$22  = 32'd0;
    end
    if (rst) begin
      \$22  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$23  = r13;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              /* empty */;
          5'h11:
              /* empty */;
          5'h12:
              /* empty */;
          5'h13:
              \$23  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$23  = 32'd0;
    end
    if (rst) begin
      \$23  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$24  = r14;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              /* empty */;
          5'h11:
              /* empty */;
          5'h12:
              /* empty */;
          5'h13:
              /* empty */;
          5'h14:
              \$24  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$24  = 32'd0;
    end
    if (rst) begin
      \$24  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$25  = r15;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              /* empty */;
          5'h11:
              /* empty */;
          5'h12:
              /* empty */;
          5'h13:
              /* empty */;
          5'h14:
              /* empty */;
          5'h15:
              \$25  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$25  = 32'd0;
    end
    if (rst) begin
      \$25  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$26  = r16;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              /* empty */;
          5'h11:
              /* empty */;
          5'h12:
              /* empty */;
          5'h13:
              /* empty */;
          5'h14:
              /* empty */;
          5'h15:
              /* empty */;
          5'h16:
              \$26  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$26  = 32'd0;
    end
    if (rst) begin
      \$26  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$27  = r17;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              /* empty */;
          5'h11:
              /* empty */;
          5'h12:
              /* empty */;
          5'h13:
              /* empty */;
          5'h14:
              /* empty */;
          5'h15:
              /* empty */;
          5'h16:
              /* empty */;
          5'h17:
              \$27  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$27  = 32'd0;
    end
    if (rst) begin
      \$27  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$28  = r18;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              /* empty */;
          5'h11:
              /* empty */;
          5'h12:
              /* empty */;
          5'h13:
              /* empty */;
          5'h14:
              /* empty */;
          5'h15:
              /* empty */;
          5'h16:
              /* empty */;
          5'h17:
              /* empty */;
          5'h18:
              \$28  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$28  = 32'd0;
    end
    if (rst) begin
      \$28  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$29  = r19;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              /* empty */;
          5'h11:
              /* empty */;
          5'h12:
              /* empty */;
          5'h13:
              /* empty */;
          5'h14:
              /* empty */;
          5'h15:
              /* empty */;
          5'h16:
              /* empty */;
          5'h17:
              /* empty */;
          5'h18:
              /* empty */;
          5'h19:
              \$29  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$29  = 32'd0;
    end
    if (rst) begin
      \$29  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$30  = r1A;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              /* empty */;
          5'h11:
              /* empty */;
          5'h12:
              /* empty */;
          5'h13:
              /* empty */;
          5'h14:
              /* empty */;
          5'h15:
              /* empty */;
          5'h16:
              /* empty */;
          5'h17:
              /* empty */;
          5'h18:
              /* empty */;
          5'h19:
              /* empty */;
          5'h1a:
              \$30  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$30  = 32'd0;
    end
    if (rst) begin
      \$30  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$31  = r1B;
    if (\$3 ) begin
      if (rd_w_en) begin
        casez (w_rd)
          5'h00:
              /* empty */;
          5'h01:
              /* empty */;
          5'h02:
              /* empty */;
          5'h03:
              /* empty */;
          5'h04:
              /* empty */;
          5'h05:
              /* empty */;
          5'h06:
              /* empty */;
          5'h07:
              /* empty */;
          5'h08:
              /* empty */;
          5'h09:
              /* empty */;
          5'h0a:
              /* empty */;
          5'h0b:
              /* empty */;
          5'h0c:
              /* empty */;
          5'h0d:
              /* empty */;
          5'h0e:
              /* empty */;
          5'h0f:
              /* empty */;
          5'h10:
              /* empty */;
          5'h11:
              /* empty */;
          5'h12:
              /* empty */;
          5'h13:
              /* empty */;
          5'h14:
              /* empty */;
          5'h15:
              /* empty */;
          5'h16:
              /* empty */;
          5'h17:
              /* empty */;
          5'h18:
              /* empty */;
          5'h19:
              /* empty */;
          5'h1a:
              /* empty */;
          5'h1b:
              \$31  = rd_w_data;
        endcase
      end
    end
    if (core_reset) begin
      \$31  = 32'd0;
    end
    if (rst) begin
      \$31  = 32'd0;
    end
  end
  assign \r_valid$1  = r_valid;
  assign \r_rd$3  = r_rd;
  assign r_rs1 = \port$877$47 [4:0];
  assign rs1_addr = \port$877$47 [4:0];
  assign r_rs2 = \port$877$47 [9:5];
  assign rs2_addr = \port$877$47 [9:5];
  assign r_ok1 = rs1_ack;
  assign r_ok2 = rs2_ack;
  assign rd_addr = w_rd;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:28" *)
(* generator = "Amaranth" *)
module \risc_project.core.decode.reg.mask (rst, r_valid, w_valid, r1_ok, r2_ok, r_rd, \port$877$47 , core_reset, w_rd, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$9  = 0;
  wire [31:0] \$1 ;
  reg [31:0] \$10 ;
  wire [31:0] \$2 ;
  wire [31:0] \$3 ;
  wire [31:0] \$4 ;
  wire [31:0] \$5 ;
  wire [31:0] \$6 ;
  wire [31:0] \$7 ;
  wire [31:0] \$8 ;
  wire [31:0] \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:43" *)
  reg [31:0] clear_mask;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:64" *)
  input core_reset;
  wire core_reset;
  input [9:0] \port$877$47 ;
  wire [9:0] \port$877$47 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:21" *)
  output r1_ok;
  wire r1_ok;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:22" *)
  output r2_ok;
  wire r2_ok;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:21" *)
  wire r_ok1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:22" *)
  wire r_ok2;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:17" *)
  input [4:0] r_rd;
  wire [4:0] r_rd;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:18" *)
  wire [4:0] r_rs1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:19" *)
  wire [4:0] r_rs2;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:20" *)
  input r_valid;
  wire r_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:30" *)
  reg [31:0] reg_mask = 32'd0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:42" *)
  reg [31:0] set_mask;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:23" *)
  input [4:0] w_rd;
  wire [4:0] w_rd;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:24" *)
  input w_valid;
  wire w_valid;
  assign \$1  = 1'h1 << (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:36" *) \port$877$47 [4:0];
  assign \$2  = \$1  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:36" *) reg_mask;
  assign r1_ok = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:36" *) \$2 ;
  assign \$3  = 1'h1 << (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:37" *) \port$877$47 [9:5];
  assign \$4  = \$3  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:37" *) reg_mask;
  assign r2_ok = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:37" *) \$4 ;
  assign \$5  = 1'h1 << (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:47" *) r_rd;
  assign \$6  = 1'h1 << (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:51" *) w_rd;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:51" *) \$6 ;
  assign \$8  = reg_mask | (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:55" *) set_mask;
  assign \$9  = \$8  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:55" *) clear_mask;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\core\\decode.py:30" *)
  always @(posedge clk)
    reg_mask <= \$10 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$9 ) begin end
    set_mask = 32'd0;
    if (r_valid) begin
      set_mask = \$5 ;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$9 ) begin end
    (* full_case = 32'd1 *)
    if (w_valid) begin
      clear_mask = \$7 ;
    end else begin
      clear_mask = 32'd4294967295;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$9 ) begin end
    \$10  = \$9 ;
    if (core_reset) begin
      \$10  = 32'd0;
    end
    if (rst) begin
      \$10  = 32'd0;
    end
  end
  assign r_rs1 = \port$877$47 [4:0];
  assign r_rs2 = \port$877$47 [9:5];
  assign r_ok1 = r1_ok;
  assign r_ok2 = r2_ok;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:34" *)
(* generator = "Amaranth" *)
module \risc_project.core.decode_buffer (rst, w_en, consume_ready, produce_valid, produce_data, r_en, core_reset, w_data, clk);
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [118:0] consume_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [79:0] \consume_data.mode ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [78:0] \consume_data.mode.arith ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \consume_data.mode.arith.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \consume_data.mode.arith.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [6:0] \consume_data.mode.arith.m ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.arith.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.arith.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [79:0] \consume_data.mode.branch ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \consume_data.mode.branch.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [12:0] \consume_data.mode.branch.offset ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.branch.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.branch.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [58:0] \consume_data.mode.imm ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \consume_data.mode.imm.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \consume_data.mode.imm.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [11:0] \consume_data.mode.imm.i ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [6:0] \consume_data.mode.imm.m ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.imm.s ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [36:0] \consume_data.mode.jump ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \consume_data.mode.jump.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.jump.t ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [78:0] \consume_data.mode.store ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \consume_data.mode.store.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [11:0] \consume_data.mode.store.offset ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.store.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.store.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [36:0] \consume_data.mode.upper ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \consume_data.mode.upper.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.mode.upper.i ;
  (* enum_base_type = "Instruction" *)
  (* enum_value_0000011 = "MEMORYLOAD" *)
  (* enum_value_0001111 = "FENCE" *)
  (* enum_value_0010011 = "ARITHIMM" *)
  (* enum_value_0010111 = "AUIPC" *)
  (* enum_value_0100011 = "MEMORYSTORE" *)
  (* enum_value_0110011 = "ARITH" *)
  (* enum_value_0110111 = "LUI" *)
  (* enum_value_1100011 = "BRANCH" *)
  (* enum_value_1100111 = "JALR" *)
  (* enum_value_1101111 = "JAL" *)
  (* enum_value_1110011 = "E" *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [6:0] \consume_data.op ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.pc ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  output consume_ready;
  wire consume_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire consume_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:64" *)
  input core_reset;
  wire core_reset;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  output [118:0] produce_data;
  wire [118:0] produce_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [79:0] \produce_data.mode ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [78:0] \produce_data.mode.arith ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \produce_data.mode.arith.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \produce_data.mode.arith.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [6:0] \produce_data.mode.arith.m ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data.mode.arith.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data.mode.arith.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [79:0] \produce_data.mode.branch ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \produce_data.mode.branch.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [12:0] \produce_data.mode.branch.offset ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data.mode.branch.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data.mode.branch.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [58:0] \produce_data.mode.imm ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \produce_data.mode.imm.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \produce_data.mode.imm.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [11:0] \produce_data.mode.imm.i ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [6:0] \produce_data.mode.imm.m ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data.mode.imm.s ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [36:0] \produce_data.mode.jump ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \produce_data.mode.jump.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data.mode.jump.t ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [78:0] \produce_data.mode.store ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [2:0] \produce_data.mode.store.f ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [11:0] \produce_data.mode.store.offset ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data.mode.store.s1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data.mode.store.s2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [36:0] \produce_data.mode.upper ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \produce_data.mode.upper.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data.mode.upper.i ;
  (* enum_base_type = "Instruction" *)
  (* enum_value_0000011 = "MEMORYLOAD" *)
  (* enum_value_0001111 = "FENCE" *)
  (* enum_value_0010011 = "ARITHIMM" *)
  (* enum_value_0010111 = "AUIPC" *)
  (* enum_value_0100011 = "MEMORYSTORE" *)
  (* enum_value_0110011 = "ARITH" *)
  (* enum_value_0110111 = "LUI" *)
  (* enum_value_1100011 = "BRANCH" *)
  (* enum_value_1100111 = "JALR" *)
  (* enum_value_1101111 = "JAL" *)
  (* enum_value_1110011 = "E" *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [6:0] \produce_data.op ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data.pc ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire produce_ready;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output produce_valid;
  wire produce_valid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  wire [118:0] r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  input r_en;
  wire r_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  input [118:0] w_data;
  wire [118:0] w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  input w_en;
  wire w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  wire w_rdy;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:44" *)
  \risc_project.core.decode_buffer.mfifo  mfifo (
    .clk(clk),
    .core_reset(core_reset),
    .r_data(produce_data),
    .r_en(r_en),
    .r_rdy(produce_valid),
    .rst(rst),
    .w_en(w_en),
    .w_port_data(w_data),
    .w_rdy(consume_ready)
  );
  assign consume_data = w_data;
  assign consume_valid = w_en;
  assign w_rdy = consume_ready;
  assign r_data = produce_data;
  assign r_rdy = produce_valid;
  assign produce_ready = r_en;
  assign \consume_data.pc  = w_data[31:0];
  assign \consume_data.op  = w_data[38:32];
  assign \consume_data.mode  = w_data[118:39];
  assign \consume_data.mode.arith  = w_data[117:39];
  assign \consume_data.mode.arith.f  = w_data[41:39];
  assign \consume_data.mode.arith.m  = w_data[48:42];
  assign \consume_data.mode.arith.s1  = w_data[80:49];
  assign \consume_data.mode.arith.s2  = w_data[112:81];
  assign \consume_data.mode.arith.d  = w_data[117:113];
  assign \consume_data.mode.imm  = w_data[97:39];
  assign \consume_data.mode.imm.f  = w_data[41:39];
  assign \consume_data.mode.imm.m  = w_data[48:42];
  assign \consume_data.mode.imm.s  = w_data[80:49];
  assign \consume_data.mode.imm.i  = w_data[92:81];
  assign \consume_data.mode.imm.d  = w_data[97:93];
  assign \consume_data.mode.store  = w_data[117:39];
  assign \consume_data.mode.store.f  = w_data[41:39];
  assign \consume_data.mode.store.offset  = w_data[53:42];
  assign \consume_data.mode.store.s1  = w_data[85:54];
  assign \consume_data.mode.store.s2  = w_data[117:86];
  assign \consume_data.mode.upper  = w_data[75:39];
  assign \consume_data.mode.upper.d  = w_data[43:39];
  assign \consume_data.mode.upper.i  = w_data[75:44];
  assign \consume_data.mode.jump  = w_data[75:39];
  assign \consume_data.mode.jump.d  = w_data[43:39];
  assign \consume_data.mode.jump.t  = w_data[75:44];
  assign \consume_data.mode.branch  = w_data[118:39];
  assign \consume_data.mode.branch.f  = w_data[41:39];
  assign \consume_data.mode.branch.offset  = w_data[54:42];
  assign \consume_data.mode.branch.s1  = w_data[86:55];
  assign \consume_data.mode.branch.s2  = w_data[118:87];
  assign \produce_data.pc  = produce_data[31:0];
  assign \produce_data.op  = produce_data[38:32];
  assign \produce_data.mode  = produce_data[118:39];
  assign \produce_data.mode.arith  = produce_data[117:39];
  assign \produce_data.mode.arith.f  = produce_data[41:39];
  assign \produce_data.mode.arith.m  = produce_data[48:42];
  assign \produce_data.mode.arith.s1  = produce_data[80:49];
  assign \produce_data.mode.arith.s2  = produce_data[112:81];
  assign \produce_data.mode.arith.d  = produce_data[117:113];
  assign \produce_data.mode.imm  = produce_data[97:39];
  assign \produce_data.mode.imm.f  = produce_data[41:39];
  assign \produce_data.mode.imm.m  = produce_data[48:42];
  assign \produce_data.mode.imm.s  = produce_data[80:49];
  assign \produce_data.mode.imm.i  = produce_data[92:81];
  assign \produce_data.mode.imm.d  = produce_data[97:93];
  assign \produce_data.mode.store  = produce_data[117:39];
  assign \produce_data.mode.store.f  = produce_data[41:39];
  assign \produce_data.mode.store.offset  = produce_data[53:42];
  assign \produce_data.mode.store.s1  = produce_data[85:54];
  assign \produce_data.mode.store.s2  = produce_data[117:86];
  assign \produce_data.mode.upper  = produce_data[75:39];
  assign \produce_data.mode.upper.d  = produce_data[43:39];
  assign \produce_data.mode.upper.i  = produce_data[75:44];
  assign \produce_data.mode.jump  = produce_data[75:39];
  assign \produce_data.mode.jump.d  = produce_data[43:39];
  assign \produce_data.mode.jump.t  = produce_data[75:44];
  assign \produce_data.mode.branch  = produce_data[118:39];
  assign \produce_data.mode.branch.f  = produce_data[41:39];
  assign \produce_data.mode.branch.offset  = produce_data[54:42];
  assign \produce_data.mode.branch.s1  = produce_data[86:55];
  assign \produce_data.mode.branch.s2  = produce_data[118:87];
endmodule

(* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:144" *)
(* generator = "Amaranth" *)
module \risc_project.core.decode_buffer.mfifo (rst, w_en, w_rdy, r_rdy, r_data, r_en, core_reset, w_port_data, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$10  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [2:0] \$14 ;
  reg \$15 ;
  reg \$16 ;
  reg [1:0] \$17 ;
  wire [1:0] \$2 ;
  wire \$3 ;
  wire [1:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [2:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* init = 1'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  wire consume;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:64" *)
  input core_reset;
  wire core_reset;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  reg [1:0] level = 2'h0;
  (* init = 1'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  wire produce;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  output [118:0] r_data;
  wire [118:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  input r_en;
  wire r_en;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  wire [1:0] r_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg r_port_addr = 1'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [118:0] r_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output r_rdy;
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [118:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  input w_en;
  wire w_en;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:90" *)
  wire [1:0] w_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg w_port_addr = 1'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  input [118:0] w_port_data;
  wire [118:0] w_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:400" *)
  wire w_port_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  output w_rdy;
  wire w_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:162" *)
  reg [118:0] storage [1:0];
  initial begin
    storage[0] = 119'h000000000000000000000000000000;
    storage[1] = 119'h000000000000000000000000000000;
  end
  always @(posedge clk) begin
    if (w_port_en)
      storage[w_port_addr] <= w_port_data;
  end
  assign r_data = storage[r_port_addr];
  assign w_rdy = level != (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:153" *) 2'h2;
  assign r_rdy = | (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:154" *) level;
  assign w_port_en = w_en & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:171" *) w_rdy;
  assign \$1  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$2  = w_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$3  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$4  = r_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$5  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$6  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$6 ;
  assign \$8  = \$5  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$7 ;
  assign \$9  = level + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:184" *) 1'h1;
  assign \$10  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$11  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$12  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$11 ;
  assign \$13  = \$10  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$12 ;
  assign \$14  = level - (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:186" *) 1'h1;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  always @(posedge clk)
    w_port_addr <= \$15 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  always @(posedge clk)
    r_port_addr <= \$16 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  always @(posedge clk)
    level <= \$17 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$10 ) begin end
    \$15  = w_port_addr;
    if (\$1 ) begin
      \$15  = \$2 [0];
    end
    if (core_reset) begin
      \$15  = 1'h0;
    end
    if (rst) begin
      \$15  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$10 ) begin end
    \$16  = r_port_addr;
    if (\$3 ) begin
      \$16  = \$4 [0];
    end
    if (core_reset) begin
      \$16  = 1'h0;
    end
    if (rst) begin
      \$16  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$10 ) begin end
    \$17  = level;
    if (\$8 ) begin
      \$17  = \$9 [1:0];
    end
    if (\$13 ) begin
      \$17  = \$14 [1:0];
    end
    if (core_reset) begin
      \$17  = 2'h0;
    end
    if (rst) begin
      \$17  = 2'h0;
    end
  end
  assign w_level = level;
  assign r_level = level;
  assign produce = w_port_addr;
  assign w_data = w_port_data;
  assign consume = r_port_addr;
  assign r_port_data = r_data;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:34" *)
(* generator = "Amaranth" *)
module \risc_project.core.pc_buffer (rst, w_en, produce_valid, produce_data, w_data, core_reset, r_en, clk);
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:87" *)
  wire [31:0] consume_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire consume_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire consume_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:64" *)
  input core_reset;
  wire core_reset;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  output [31:0] produce_data;
  wire [31:0] produce_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire produce_ready;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output produce_valid;
  wire produce_valid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  wire [31:0] r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  input r_en;
  wire r_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:87" *)
  input [31:0] w_data;
  wire [31:0] w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  input w_en;
  wire w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  wire w_rdy;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:44" *)
  \risc_project.core.pc_buffer.mfifo  mfifo (
    .clk(clk),
    .core_reset(core_reset),
    .r_data(produce_data),
    .r_en(r_en),
    .r_rdy(produce_valid),
    .rst(rst),
    .w_en(w_en),
    .w_port_data(w_data),
    .w_rdy(consume_ready)
  );
  assign consume_data = w_data;
  assign consume_valid = w_en;
  assign w_rdy = consume_ready;
  assign r_data = produce_data;
  assign r_rdy = produce_valid;
  assign produce_ready = r_en;
endmodule

(* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:144" *)
(* generator = "Amaranth" *)
module \risc_project.core.pc_buffer.mfifo (rst, w_en, w_rdy, r_rdy, r_data, w_port_data, core_reset, r_en, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$11  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [2:0] \$14 ;
  reg \$15 ;
  reg \$16 ;
  reg [1:0] \$17 ;
  wire [1:0] \$2 ;
  wire \$3 ;
  wire [1:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [2:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* init = 1'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  wire consume;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:64" *)
  input core_reset;
  wire core_reset;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  reg [1:0] level = 2'h0;
  (* init = 1'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  wire produce;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  output [31:0] r_data;
  wire [31:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  input r_en;
  wire r_en;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  wire [1:0] r_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg r_port_addr = 1'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [31:0] r_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output r_rdy;
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [31:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  input w_en;
  wire w_en;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:90" *)
  wire [1:0] w_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg w_port_addr = 1'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  input [31:0] w_port_data;
  wire [31:0] w_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:400" *)
  wire w_port_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  output w_rdy;
  wire w_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:162" *)
  reg [31:0] storage [1:0];
  initial begin
    storage[0] = 32'd0;
    storage[1] = 32'd0;
  end
  always @(posedge clk) begin
    if (w_port_en)
      storage[w_port_addr] <= w_port_data;
  end
  assign r_data = storage[r_port_addr];
  assign w_rdy = level != (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:153" *) 2'h2;
  assign r_rdy = | (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:154" *) level;
  assign w_port_en = w_en & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:171" *) w_rdy;
  assign \$1  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$2  = w_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$3  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$4  = r_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$5  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$6  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$6 ;
  assign \$8  = \$5  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$7 ;
  assign \$9  = level + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:184" *) 1'h1;
  assign \$10  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$11  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$12  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$11 ;
  assign \$13  = \$10  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$12 ;
  assign \$14  = level - (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:186" *) 1'h1;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  always @(posedge clk)
    w_port_addr <= \$15 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  always @(posedge clk)
    r_port_addr <= \$16 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  always @(posedge clk)
    level <= \$17 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$11 ) begin end
    \$15  = w_port_addr;
    if (\$1 ) begin
      \$15  = \$2 [0];
    end
    if (core_reset) begin
      \$15  = 1'h0;
    end
    if (rst) begin
      \$15  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$11 ) begin end
    \$16  = r_port_addr;
    if (\$3 ) begin
      \$16  = \$4 [0];
    end
    if (core_reset) begin
      \$16  = 1'h0;
    end
    if (rst) begin
      \$16  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$11 ) begin end
    \$17  = level;
    if (\$8 ) begin
      \$17  = \$9 [1:0];
    end
    if (\$13 ) begin
      \$17  = \$14 [1:0];
    end
    if (core_reset) begin
      \$17  = 2'h0;
    end
    if (rst) begin
      \$17  = 2'h0;
    end
  end
  assign w_level = level;
  assign r_level = level;
  assign produce = w_port_addr;
  assign w_data = w_port_data;
  assign consume = r_port_addr;
  assign r_port_data = r_data;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:34" *)
(* generator = "Amaranth" *)
module \risc_project.core.write_buffer (rst, consume_ready, produce_valid, produce_data, w_data, w_en, core_reset, r_en, clk);
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [36:0] consume_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \consume_data.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \consume_data.value ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  output consume_ready;
  wire consume_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire consume_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:64" *)
  input core_reset;
  wire core_reset;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  output [36:0] produce_data;
  wire [36:0] produce_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [4:0] \produce_data.d ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  wire [31:0] \produce_data.value ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire produce_ready;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output produce_valid;
  wire produce_valid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  wire [36:0] r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  input r_en;
  wire r_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:12" *)
  input [36:0] w_data;
  wire [36:0] w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  input w_en;
  wire w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  wire w_rdy;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\buffer.py:44" *)
  \risc_project.core.write_buffer.mfifo  mfifo (
    .clk(clk),
    .core_reset(core_reset),
    .r_data(produce_data),
    .r_en(r_en),
    .r_rdy(produce_valid),
    .rst(rst),
    .w_en(w_en),
    .w_port_data(w_data),
    .w_rdy(consume_ready)
  );
  assign consume_data = w_data;
  assign consume_valid = w_en;
  assign w_rdy = consume_ready;
  assign r_data = produce_data;
  assign r_rdy = produce_valid;
  assign produce_ready = r_en;
  assign \consume_data.d  = w_data[4:0];
  assign \consume_data.value  = w_data[36:5];
  assign \produce_data.d  = produce_data[4:0];
  assign \produce_data.value  = produce_data[36:5];
endmodule

(* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:144" *)
(* generator = "Amaranth" *)
module \risc_project.core.write_buffer.mfifo (rst, w_rdy, r_rdy, r_data, w_port_data, w_en, core_reset, r_en, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$12  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [2:0] \$14 ;
  reg \$15 ;
  reg \$16 ;
  reg [1:0] \$17 ;
  wire [1:0] \$2 ;
  wire \$3 ;
  wire [1:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [2:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* init = 1'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  wire consume;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\risc_build.py:64" *)
  input core_reset;
  wire core_reset;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  reg [1:0] level = 2'h0;
  (* init = 1'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  wire produce;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  output [36:0] r_data;
  wire [36:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  input r_en;
  wire r_en;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  wire [1:0] r_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg r_port_addr = 1'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [36:0] r_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output r_rdy;
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [36:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  input w_en;
  wire w_en;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:90" *)
  wire [1:0] w_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg w_port_addr = 1'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  input [36:0] w_port_data;
  wire [36:0] w_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:400" *)
  wire w_port_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  output w_rdy;
  wire w_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:162" *)
  reg [36:0] storage [1:0];
  initial begin
    storage[0] = 37'h0000000000;
    storage[1] = 37'h0000000000;
  end
  always @(posedge clk) begin
    if (w_port_en)
      storage[w_port_addr] <= w_port_data;
  end
  assign r_data = storage[r_port_addr];
  assign w_rdy = level != (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:153" *) 2'h2;
  assign r_rdy = | (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:154" *) level;
  assign w_port_en = w_en & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:171" *) w_rdy;
  assign \$1  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$2  = w_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$3  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$4  = r_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$5  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$6  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$6 ;
  assign \$8  = \$5  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$7 ;
  assign \$9  = level + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:184" *) 1'h1;
  assign \$10  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$11  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$12  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$11 ;
  assign \$13  = \$10  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$12 ;
  assign \$14  = level - (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:186" *) 1'h1;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  always @(posedge clk)
    w_port_addr <= \$15 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  always @(posedge clk)
    r_port_addr <= \$16 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  always @(posedge clk)
    level <= \$17 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$15  = w_port_addr;
    if (\$1 ) begin
      \$15  = \$2 [0];
    end
    if (core_reset) begin
      \$15  = 1'h0;
    end
    if (rst) begin
      \$15  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$16  = r_port_addr;
    if (\$3 ) begin
      \$16  = \$4 [0];
    end
    if (core_reset) begin
      \$16  = 1'h0;
    end
    if (rst) begin
      \$16  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$17  = level;
    if (\$8 ) begin
      \$17  = \$9 [1:0];
    end
    if (\$13 ) begin
      \$17  = \$14 [1:0];
    end
    if (core_reset) begin
      \$17  = 2'h0;
    end
    if (rst) begin
      \$17  = 2'h0;
    end
  end
  assign w_level = level;
  assign r_level = level;
  assign produce = w_port_addr;
  assign w_data = w_port_data;
  assign consume = r_port_addr;
  assign r_port_data = r_data;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:104" *)
(* generator = "Amaranth" *)
module \risc_project.switch (clk, rst, c_02_addr, c_00_addr, c_00_cyc, c_00_stb, c_01_addr, c_02_w_data, c_02_w_en, c_02_stb, c_02_cyc, c_01_w_data, c_01_w_en, c_01_stb, c_01_cyc, p_00_stb, p_00_cyc, c_00_ack, p_00_addr, p_00_w_en, p_00_w_data
, c_00_r_data, c_01_ack, c_01_r_data, c_02_ack, c_02_r_data, p_00_ack, p_00_r_data);
  reg \$auto$verilog_backend.cc:2352:dump_module$13  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire [2:0] \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  reg [1:0] \$16 ;
  wire \$2 ;
  wire \$3 ;
  wire [2:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire [2:0] \$8 ;
  wire \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  output c_00_ack;
  reg c_00_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  input [31:0] c_00_addr;
  wire [31:0] c_00_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  input c_00_cyc;
  wire c_00_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  output [31:0] c_00_r_data;
  reg [31:0] c_00_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  input c_00_stb;
  wire c_00_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] c_00_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  wire c_00_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  output c_01_ack;
  reg c_01_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  input [31:0] c_01_addr;
  wire [31:0] c_01_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  input c_01_cyc;
  wire c_01_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  output [31:0] c_01_r_data;
  reg [31:0] c_01_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  input c_01_stb;
  wire c_01_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  input [31:0] c_01_w_data;
  wire [31:0] c_01_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  input c_01_w_en;
  wire c_01_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  output c_02_ack;
  reg c_02_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  input [31:0] c_02_addr;
  wire [31:0] c_02_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  input c_02_cyc;
  wire c_02_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  output [31:0] c_02_r_data;
  reg [31:0] c_02_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  input c_02_stb;
  wire c_02_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  input [31:0] c_02_w_data;
  wire [31:0] c_02_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  input c_02_w_en;
  wire c_02_w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  input p_00_ack;
  wire p_00_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  output [31:0] p_00_addr;
  reg [31:0] p_00_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  output p_00_cyc;
  reg p_00_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:13" *)
  input [31:0] p_00_r_data;
  wire [31:0] p_00_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  output p_00_stb;
  reg p_00_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  output [31:0] p_00_w_data;
  reg [31:0] p_00_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  output p_00_w_en;
  reg p_00_w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:106" *)
  reg [1:0] select = 2'h0;
  assign \$1  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:122" *) select;
  assign \$2  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:123" *) c_00_cyc;
  assign \$3  = select == (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:125" *) 2'h2;
  assign \$4  = select + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:128" *) 1'h1;
  assign \$5  = select == (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:122" *) 1'h1;
  assign \$6  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:123" *) c_01_cyc;
  assign \$7  = select == (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:125" *) 2'h2;
  assign \$8  = select + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:128" *) 1'h1;
  assign \$9  = select == (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:122" *) 2'h2;
  assign \$10  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:123" *) c_02_cyc;
  assign \$11  = select == (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:125" *) 2'h2;
  assign \$12  = select + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:128" *) 1'h1;
  assign \$13  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:122" *) select;
  assign \$14  = select == (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:122" *) 1'h1;
  assign \$15  = select == (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:122" *) 2'h2;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\switch.py:106" *)
  always @(posedge clk)
    select <= \$16 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    \$16  = select;
    if (\$1 ) begin
      if (\$2 ) begin
        (* full_case = 32'd1 *)
        if (\$3 ) begin
          \$16  = 2'h0;
        end else begin
          \$16  = \$4 [1:0];
        end
      end
    end
    if (\$5 ) begin
      if (\$6 ) begin
        (* full_case = 32'd1 *)
        if (\$7 ) begin
          \$16  = 2'h0;
        end else begin
          \$16  = \$8 [1:0];
        end
      end
    end
    if (\$9 ) begin
      if (\$10 ) begin
        (* full_case = 32'd1 *)
        if (\$11 ) begin
          \$16  = 2'h0;
        end else begin
          \$16  = \$12 [1:0];
        end
      end
    end
    if (rst) begin
      \$16  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    p_00_stb = 1'h0;
    if (\$13 ) begin
      p_00_stb = c_00_stb;
    end
    if (\$14 ) begin
      p_00_stb = c_01_stb;
    end
    if (\$15 ) begin
      p_00_stb = c_02_stb;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    p_00_cyc = 1'h0;
    if (\$13 ) begin
      p_00_cyc = c_00_cyc;
    end
    if (\$14 ) begin
      p_00_cyc = c_01_cyc;
    end
    if (\$15 ) begin
      p_00_cyc = c_02_cyc;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    c_00_ack = 1'h0;
    if (\$13 ) begin
      c_00_ack = p_00_ack;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    p_00_addr = 32'd0;
    if (\$13 ) begin
      p_00_addr = c_00_addr;
    end
    if (\$14 ) begin
      p_00_addr = c_01_addr;
    end
    if (\$15 ) begin
      p_00_addr = c_02_addr;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    p_00_w_en = 1'h0;
    if (\$13 ) begin
      p_00_w_en = 1'h0;
    end
    if (\$14 ) begin
      p_00_w_en = c_01_w_en;
    end
    if (\$15 ) begin
      p_00_w_en = c_02_w_en;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    p_00_w_data = 32'd0;
    if (\$13 ) begin
      p_00_w_data = 32'd0;
    end
    if (\$14 ) begin
      p_00_w_data = c_01_w_data;
    end
    if (\$15 ) begin
      p_00_w_data = c_02_w_data;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    c_00_r_data = 32'd0;
    if (\$13 ) begin
      c_00_r_data = p_00_r_data;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    c_01_ack = 1'h0;
    if (\$14 ) begin
      c_01_ack = p_00_ack;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    c_01_r_data = 32'd0;
    if (\$14 ) begin
      c_01_r_data = p_00_r_data;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    c_02_ack = 1'h0;
    if (\$15 ) begin
      c_02_ack = p_00_ack;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    c_02_r_data = 32'd0;
    if (\$15 ) begin
      c_02_r_data = p_00_r_data;
    end
  end
  assign c_00_w_en = 1'h0;
  assign c_00_w_data = 32'd0;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:21" *)
(* generator = "Amaranth" *)
module \risc_project.to_axi (axi_wready, axi_arready, wish_r_data, axi_rvalid, axi_bresp, axi_bvalid, clk, rst, axi_awvalid, axi_wvalid, axi_arvalid, axi_rready, error_valid, error_data, r_en, wish_stb, wish_cyc, axi_awaddr, wish_w_en, axi_wdata, wish_ack
, axi_bready, axi_awready);
  reg \$auto$verilog_backend.cc:2352:dump_module$14  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire \$18 ;
  wire \$19 ;
  wire \$2 ;
  wire \$20 ;
  wire \$21 ;
  reg \$22 ;
  reg \$23 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:23" *)
  reg address_written = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:117" *)
  wire [31:0] axi_araddr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:116" *)
  input axi_arready;
  wire axi_arready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:115" *)
  output axi_arvalid;
  wire axi_arvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:117" *)
  input [31:0] axi_awaddr;
  wire [31:0] axi_awaddr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:110" *)
  input axi_awready;
  wire axi_awready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:109" *)
  output axi_awvalid;
  wire axi_awvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:122" *)
  output axi_bready;
  reg axi_bready = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:121" *)
  input [1:0] axi_bresp;
  wire [1:0] axi_bresp;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:123" *)
  input axi_bvalid;
  wire axi_bvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:118" *)
  wire [31:0] axi_rdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:120" *)
  output axi_rready;
  wire axi_rready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:119" *)
  input axi_rvalid;
  wire axi_rvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  input [31:0] axi_wdata;
  wire [31:0] axi_wdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:114" *)
  input axi_wready;
  wire axi_wready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:113" *)
  output axi_wvalid;
  wire axi_wvalid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  output [7:0] error_data;
  wire [7:0] error_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire error_ready;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output error_valid;
  wire error_valid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  input r_en;
  wire r_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [7:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  wire w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:10" *)
  output wish_ack;
  reg wish_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:9" *)
  wire [31:0] wish_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:7" *)
  input wish_cyc;
  wire wish_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:118" *)
  input [31:0] wish_r_data;
  wire [31:0] wish_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:8" *)
  input wish_stb;
  wire wish_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:12" *)
  wire [31:0] wish_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:11" *)
  input wish_w_en;
  wire wish_w_en;
  assign \$1  = wish_w_en & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:33" *) wish_stb;
  assign \$2  = \$1  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:33" *) wish_cyc;
  assign \$3  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:33" *) address_written;
  assign axi_awvalid = \$2  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:33" *) \$3 ;
  assign \$4  = wish_w_en & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:34" *) wish_stb;
  assign \$5  = \$4  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:34" *) wish_cyc;
  assign axi_wvalid = \$5  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:34" *) address_written;
  assign \$6  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:37" *) wish_w_en;
  assign \$7  = \$6  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:37" *) wish_stb;
  assign \$8  = \$7  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:37" *) wish_cyc;
  assign \$9  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:37" *) address_written;
  assign axi_arvalid = \$8  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:37" *) \$9 ;
  assign \$10  = ~ (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:38" *) wish_w_en;
  assign \$11  = \$10  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:38" *) wish_stb;
  assign \$12  = \$11  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:38" *) wish_cyc;
  assign axi_rready = \$12  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:38" *) address_written;
  assign \$13  = axi_wready & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:44" *) axi_wvalid;
  assign \$14  = axi_rready & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:46" *) axi_rvalid;
  assign \$15  = axi_bvalid > (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:65" *) 1'h0;
  assign \$16  = axi_bresp > (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:65" *) 1'h0;
  assign w_en = \$15  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:65" *) \$16 ;
  assign \$17  = axi_awvalid & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:50" *) axi_awready;
  assign \$18  = axi_arvalid & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:52" *) axi_arready;
  assign \$19  = axi_rvalid & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:56" *) axi_rready;
  assign \$20  = axi_wvalid & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:60" *) axi_wready;
  assign \$21  = axi_bready & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:74" *) axi_bvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:23" *)
  always @(posedge clk)
    address_written <= \$22 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:122" *)
  always @(posedge clk)
    axi_bready <= \$23 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\axi\\wish_to_axi.py:63" *)
  \risc_project.to_axi.error_fifo  error_fifo (
    .clk(clk),
    .\port$0$38 (axi_bresp),
    .r_data(error_data),
    .r_en(r_en),
    .r_rdy(error_valid),
    .rst(rst),
    .w_en(w_en)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    (* full_case = 32'd1 *)
    if (wish_w_en) begin
      wish_ack = \$13 ;
    end else begin
      wish_ack = \$14 ;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    \$22  = address_written;
    if (\$17 ) begin
      \$22  = 1'h1;
    end
    if (\$18 ) begin
      \$22  = 1'h1;
    end
    if (\$19 ) begin
      \$22  = 1'h0;
    end
    if (\$21 ) begin
      \$22  = 1'h0;
    end
    if (rst) begin
      \$22  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    \$23  = axi_bready;
    if (\$20 ) begin
      \$23  = 1'h1;
    end
    if (\$21 ) begin
      \$23  = 1'h0;
    end
    if (rst) begin
      \$23  = 1'h0;
    end
  end
  assign wish_addr = axi_awaddr;
  assign axi_araddr = axi_awaddr;
  assign wish_w_data = axi_wdata;
  assign axi_rdata = wish_r_data;
  assign w_data = { 6'h00, axi_bresp };
  assign r_data = error_data;
  assign r_rdy = error_valid;
  assign error_ready = r_en;
endmodule

(* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:144" *)
(* generator = "Amaranth" *)
module \risc_project.to_axi.error_fifo (clk, rst, w_en, r_rdy, r_data, r_en, \port$0$38 );
  reg \$auto$verilog_backend.cc:2352:dump_module$15  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [3:0] \$14 ;
  reg [1:0] \$15 ;
  reg [1:0] \$16 ;
  reg [2:0] \$17 ;
  wire [2:0] \$2 ;
  wire \$3 ;
  wire [2:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [3:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  wire [1:0] consume;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  reg [2:0] level = 3'h0;
  input [1:0] \port$0$38 ;
  wire [1:0] \port$0$38 ;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  wire [1:0] produce;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  output [7:0] r_data;
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  input r_en;
  wire r_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  wire [2:0] r_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg [1:0] r_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [7:0] r_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output r_rdy;
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [7:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  input w_en;
  wire w_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:90" *)
  wire [2:0] w_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg [1:0] w_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:402" *)
  wire [7:0] w_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:400" *)
  wire w_port_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  wire w_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:162" *)
  reg [7:0] storage [3:0];
  initial begin
    storage[0] = 8'h00;
    storage[1] = 8'h00;
    storage[2] = 8'h00;
    storage[3] = 8'h00;
  end
  always @(posedge clk) begin
    if (w_port_en)
      storage[w_port_addr] <= { 6'h00, \port$0$38  };
  end
  assign r_data = storage[r_port_addr];
  assign w_rdy = level != (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:153" *) 3'h4;
  assign r_rdy = | (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:154" *) level;
  assign w_port_en = w_en & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:171" *) w_rdy;
  assign \$1  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$2  = w_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$3  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$4  = r_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$5  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$6  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$6 ;
  assign \$8  = \$5  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$7 ;
  assign \$9  = level + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:184" *) 1'h1;
  assign \$10  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$11  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$12  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$11 ;
  assign \$13  = \$10  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$12 ;
  assign \$14  = level - (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:186" *) 1'h1;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  always @(posedge clk)
    w_port_addr <= \$15 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  always @(posedge clk)
    r_port_addr <= \$16 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  always @(posedge clk)
    level <= \$17 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$15  = w_port_addr;
    if (\$1 ) begin
      \$15  = \$2 [1:0];
    end
    if (rst) begin
      \$15  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$16  = r_port_addr;
    if (\$3 ) begin
      \$16  = \$4 [1:0];
    end
    if (rst) begin
      \$16  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$17  = level;
    if (\$8 ) begin
      \$17  = \$9 [2:0];
    end
    if (\$13 ) begin
      \$17  = \$14 [2:0];
    end
    if (rst) begin
      \$17  = 3'h0;
    end
  end
  assign w_level = level;
  assign r_level = level;
  assign produce = w_port_addr;
  assign w_port_data = { 6'h00, \port$0$38  };
  assign w_data = { 6'h00, \port$0$38  };
  assign consume = r_port_addr;
  assign r_port_data = r_data;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:109" *)
(* generator = "Amaranth" *)
module \risc_project.uart_rx (clk, rst, produce_valid, produce_data, r_en, rx);
  reg \$auto$verilog_backend.cc:2352:dump_module$16  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [7:0] \$14 ;
  wire [7:0] \$15 ;
  wire [8:0] \$16 ;
  wire \$17 ;
  wire [3:0] \$18 ;
  wire \$19 ;
  wire \$2 ;
  wire \$20 ;
  wire \$21 ;
  wire [3:0] \$22 ;
  reg [9:0] \$23 ;
  reg [2:0] \$24 ;
  reg [2:0] \$25 ;
  reg [7:0] \$26 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [10:0] \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:124" *)
  reg [2:0] bit_counter = 3'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:119" *)
  reg [9:0] counter = 10'h000;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:125" *)
  reg [7:0] data_register = 8'h00;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  output [7:0] produce_data;
  wire [7:0] produce_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  wire produce_ready;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output produce_valid;
  wire produce_valid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:89" *)
  input r_en;
  wire r_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:105" *)
  input rx;
  wire rx;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  reg [7:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  reg w_en;
  assign \$1  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:160" *) counter;
  assign \$2  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:161" *) bit_counter;
  assign \$3  = ! (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) fsm_state;
  assign \$4  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 1'h1;
  assign \$5  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h2;
  assign \$6  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h3;
  assign \$7  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h4;
  assign \$8  = counter > (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:121" *) 1'h0;
  assign \$9  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:122" *) 1'h1;
  assign \$10  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:129" *) rx;
  assign \$11  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:134" *) counter;
  assign \$13  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:143" *) counter;
  assign \$16  = \$14  + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:144" *) \$15 ;
  assign \$17  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:146" *) bit_counter;
  assign \$18  = bit_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:153" *) 1'h1;
  assign \$19  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:155" *) counter;
  assign \$20  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:160" *) counter;
  assign \$21  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:161" *) bit_counter;
  assign \$22  = bit_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:167" *) 1'h1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:119" *)
  always @(posedge clk)
    counter <= \$23 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  always @(posedge clk)
    fsm_state <= \$24 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:124" *)
  always @(posedge clk)
    bit_counter <= \$25 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:125" *)
  always @(posedge clk)
    data_register <= \$26 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:111" *)
  \risc_project.uart_rx.buffer  buffer (
    .clk(clk),
    .r_data(produce_data),
    .r_en(r_en),
    .r_rdy(produce_valid),
    .rst(rst),
    .w_en(w_en),
    .w_port_data(w_data)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$16 ) begin end
    w_data = 8'h00;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h4:
          /* empty */;
      3'h3:
          if (\$1 ) begin
            if (\$2 ) begin
              w_data = data_register;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$16 ) begin end
    w_en = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h4:
          /* empty */;
      3'h3:
          if (\$1 ) begin
            if (\$2 ) begin
              w_en = 1'h1;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$16 ) begin end
    \$23  = counter;
    if (\$8 ) begin
      \$23  = \$9 [9:0];
    end
    casez (fsm_state)
      3'h0:
          if (\$10 ) begin
            \$23  = 10'h1b2;
          end
      3'h1:
          if (\$11 ) begin
            (* full_case = 32'd1 *)
            if (\$12 ) begin
            end else begin
              \$23  = 10'h363;
            end
          end
      3'h2:
          if (\$13 ) begin
            \$23  = 10'h363;
          end
      3'h4:
          if (\$19 ) begin
            \$23  = 10'h363;
          end
      3'h3:
          if (\$20 ) begin
            (* full_case = 32'd1 *)
            if (\$21 ) begin
            end else begin
              \$23  = 10'h363;
            end
          end
    endcase
    if (rst) begin
      \$23  = 10'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$16 ) begin end
    \$24  = fsm_state;
    casez (fsm_state)
      3'h0:
          if (\$10 ) begin
            \$24  = 3'h1;
          end
      3'h1:
          if (\$11 ) begin
            (* full_case = 32'd1 *)
            if (\$12 ) begin
              \$24  = 3'h0;
            end else begin
              \$24  = 3'h2;
            end
          end
      3'h2:
          if (\$13 ) begin
            if (\$17 ) begin
              \$24  = 3'h3;
            end
          end
      3'h4:
          if (\$19 ) begin
            \$24  = 3'h3;
          end
      3'h3:
          if (\$20 ) begin
            if (\$21 ) begin
              \$24  = 3'h0;
            end
          end
    endcase
    if (rst) begin
      \$24  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$16 ) begin end
    \$25  = bit_counter;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          if (\$11 ) begin
            (* full_case = 32'd1 *)
            if (\$12 ) begin
            end else begin
              \$25  = 3'h7;
            end
          end
      3'h2:
          if (\$13 ) begin
            (* full_case = 32'd1 *)
            if (\$17 ) begin
              \$25  = 3'h0;
            end else begin
              \$25  = \$18 [2:0];
            end
          end
      3'h4:
          if (\$19 ) begin
            \$25  = 3'h0;
          end
      3'h3:
          if (\$20 ) begin
            (* full_case = 32'd1 *)
            if (\$21 ) begin
            end else begin
              \$25  = \$22 [2:0];
            end
          end
    endcase
    if (rst) begin
      \$25  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$16 ) begin end
    \$26  = data_register;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          if (\$13 ) begin
            \$26  = \$16 [7:0];
          end
    endcase
    if (rst) begin
      \$26  = 8'h00;
    end
  end
  assign r_data = produce_data;
  assign r_rdy = produce_valid;
  assign produce_ready = r_en;
  assign \$12  = rx;
  assign \$14  = { 1'h0, data_register[7:1] };
  assign \$15  = { rx, 7'h00 };
endmodule

(* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:144" *)
(* generator = "Amaranth" *)
module \risc_project.uart_rx.buffer (rst, r_rdy, r_data, w_port_data, w_en, r_en, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$17  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [3:0] \$14 ;
  reg [1:0] \$15 ;
  reg [1:0] \$16 ;
  reg [2:0] \$17 ;
  wire [2:0] \$2 ;
  wire \$3 ;
  wire [2:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [3:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  wire [1:0] consume;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  reg [2:0] level = 3'h0;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  wire [1:0] produce;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  output [7:0] r_data;
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  input r_en;
  wire r_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  wire [2:0] r_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg [1:0] r_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [7:0] r_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output r_rdy;
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [7:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  input w_en;
  wire w_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:90" *)
  wire [2:0] w_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg [1:0] w_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  input [7:0] w_port_data;
  wire [7:0] w_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:400" *)
  wire w_port_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  wire w_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:162" *)
  reg [7:0] storage [3:0];
  initial begin
    storage[0] = 8'h00;
    storage[1] = 8'h00;
    storage[2] = 8'h00;
    storage[3] = 8'h00;
  end
  always @(posedge clk) begin
    if (w_port_en)
      storage[w_port_addr] <= w_port_data;
  end
  assign r_data = storage[r_port_addr];
  assign w_rdy = level != (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:153" *) 3'h4;
  assign r_rdy = | (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:154" *) level;
  assign w_port_en = w_en & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:171" *) w_rdy;
  assign \$1  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$2  = w_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$3  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$4  = r_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$5  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$6  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$6 ;
  assign \$8  = \$5  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$7 ;
  assign \$9  = level + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:184" *) 1'h1;
  assign \$10  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$11  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$12  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$11 ;
  assign \$13  = \$10  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$12 ;
  assign \$14  = level - (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:186" *) 1'h1;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  always @(posedge clk)
    w_port_addr <= \$15 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  always @(posedge clk)
    r_port_addr <= \$16 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  always @(posedge clk)
    level <= \$17 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$17 ) begin end
    \$15  = w_port_addr;
    if (\$1 ) begin
      \$15  = \$2 [1:0];
    end
    if (rst) begin
      \$15  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$17 ) begin end
    \$16  = r_port_addr;
    if (\$3 ) begin
      \$16  = \$4 [1:0];
    end
    if (rst) begin
      \$16  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$17 ) begin end
    \$17  = level;
    if (\$8 ) begin
      \$17  = \$9 [2:0];
    end
    if (\$13 ) begin
      \$17  = \$14 [2:0];
    end
    if (rst) begin
      \$17  = 3'h0;
    end
  end
  assign w_level = level;
  assign r_level = level;
  assign produce = w_port_addr;
  assign w_data = w_port_data;
  assign consume = r_port_addr;
  assign r_port_data = r_data;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:22" *)
(* generator = "Amaranth" *)
module \risc_project.uart_tx (rst, consume_ready, tx, w_en, w_data, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$18  = 0;
  wire \$1 ;
  wire [7:0] \$10 ;
  wire \$11 ;
  wire [3:0] \$12 ;
  wire [10:0] \$13 ;
  wire \$14 ;
  wire [10:0] \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire [3:0] \$18 ;
  wire [10:0] \$19 ;
  wire \$2 ;
  reg [7:0] \$20 ;
  reg [9:0] \$21 ;
  reg [2:0] \$22 ;
  reg [2:0] \$23 ;
  reg \$24 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire [10:0] \$7 ;
  wire \$8 ;
  wire [1:0] \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:36" *)
  reg [2:0] byte_counter = 3'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:87" *)
  wire [7:0] consume_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  output consume_ready;
  wire consume_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  wire consume_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:35" *)
  reg [9:0] counter = 10'h000;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:32" *)
  reg [7:0] data_register = 8'h00;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:33" *)
  reg parity = 1'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  reg r_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:18" *)
  output tx;
  reg tx;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:87" *)
  input [7:0] w_data;
  wire [7:0] w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\infra\\signature.py:88" *)
  input w_en;
  wire w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  wire w_rdy;
  assign \$1  = ! (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) fsm_state;
  assign \$2  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 1'h1;
  assign \$3  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h2;
  assign \$4  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h3;
  assign \$5  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h4;
  assign \$6  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:50" *) counter;
  assign \$7  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:55" *) 1'h1;
  assign \$8  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:59" *) counter;
  assign \$9  = parity + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:60" *) data_register[0];
  assign \$11  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:63" *) byte_counter;
  assign \$12  = byte_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:70" *) 1'h1;
  assign \$13  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:72" *) 1'h1;
  assign \$14  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:76" *) counter;
  assign \$15  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:82" *) 1'h1;
  assign \$16  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:86" *) counter;
  assign \$17  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:87" *) byte_counter;
  assign \$18  = byte_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:90" *) 1'h1;
  assign \$19  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:93" *) 1'h1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:32" *)
  always @(posedge clk)
    data_register <= \$20 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:35" *)
  always @(posedge clk)
    counter <= \$21 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  always @(posedge clk)
    fsm_state <= \$22 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:36" *)
  always @(posedge clk)
    byte_counter <= \$23 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:33" *)
  always @(posedge clk)
    parity <= \$24 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:24" *)
  \risc_project.uart_tx.buffer  buffer (
    .clk(clk),
    .r_data(r_data),
    .r_en(r_en),
    .r_rdy(r_rdy),
    .rst(rst),
    .w_en(w_en),
    .w_port_data(w_data),
    .w_rdy(consume_ready)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$18 ) begin end
    tx = 1'h0;
    casez (fsm_state)
      3'h0:
          tx = 1'h1;
      3'h1:
          tx = 1'h0;
      3'h2:
          tx = data_register[0];
      3'h4:
          tx = parity;
      3'h3:
          tx = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$18 ) begin end
    r_en = 1'h0;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            r_en = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$18 ) begin end
    \$20  = data_register;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            \$20  = r_data;
          end
      3'h1:
          /* empty */;
      3'h2:
          if (\$8 ) begin
            \$20  = \$10 ;
          end
    endcase
    if (rst) begin
      \$20  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$18 ) begin end
    \$21  = counter;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            \$21  = 10'h363;
          end
      3'h1:
          (* full_case = 32'd1 *)
          if (\$6 ) begin
            \$21  = 10'h363;
          end else begin
            \$21  = \$7 [9:0];
          end
      3'h2:
          (* full_case = 32'd1 *)
          if (\$8 ) begin
            \$21  = 10'h363;
          end else begin
            \$21  = \$13 [9:0];
          end
      3'h4:
          (* full_case = 32'd1 *)
          if (\$14 ) begin
            \$21  = 10'h363;
          end else begin
            \$21  = \$15 [9:0];
          end
      3'h3:
          (* full_case = 32'd1 *)
          if (\$16 ) begin
            (* full_case = 32'd1 *)
            if (\$17 ) begin
            end else begin
              \$21  = 10'h363;
            end
          end else begin
            \$21  = \$19 [9:0];
          end
    endcase
    if (rst) begin
      \$21  = 10'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$18 ) begin end
    \$22  = fsm_state;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            \$22  = 3'h1;
          end
      3'h1:
          if (\$6 ) begin
            \$22  = 3'h2;
          end
      3'h2:
          if (\$8 ) begin
            if (\$11 ) begin
              \$22  = 3'h3;
            end
          end
      3'h4:
          if (\$14 ) begin
            \$22  = 3'h3;
          end
      3'h3:
          if (\$16 ) begin
            if (\$17 ) begin
              \$22  = 3'h0;
            end
          end
    endcase
    if (rst) begin
      \$22  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$18 ) begin end
    \$23  = byte_counter;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          if (\$6 ) begin
            \$23  = 3'h7;
          end
      3'h2:
          if (\$8 ) begin
            (* full_case = 32'd1 *)
            if (\$11 ) begin
              \$23  = 3'h1;
            end else begin
              \$23  = \$12 [2:0];
            end
          end
      3'h4:
          if (\$14 ) begin
            \$23  = 3'h1;
          end
      3'h3:
          if (\$16 ) begin
            (* full_case = 32'd1 *)
            if (\$17 ) begin
            end else begin
              \$23  = \$18 [2:0];
            end
          end
    endcase
    if (rst) begin
      \$23  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$18 ) begin end
    \$24  = parity;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          if (\$8 ) begin
            \$24  = \$9 [0];
          end
      3'h4:
          if (\$14 ) begin
            \$24  = 1'h0;
          end
    endcase
    if (rst) begin
      \$24  = 1'h0;
    end
  end
  assign consume_valid = w_en;
  assign consume_data = w_data;
  assign w_rdy = consume_ready;
  assign \$10  = { 1'h0, data_register[7:1] };
endmodule

(* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:144" *)
(* generator = "Amaranth" *)
module \risc_project.uart_tx.buffer (rst, w_rdy, r_rdy, r_data, r_en, w_en, w_port_data, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$19  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [3:0] \$14 ;
  reg [1:0] \$15 ;
  reg [1:0] \$16 ;
  reg [2:0] \$17 ;
  wire [2:0] \$2 ;
  wire \$3 ;
  wire [2:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [3:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  wire [1:0] consume;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  reg [2:0] level = 3'h0;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  wire [1:0] produce;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  output [7:0] r_data;
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  input r_en;
  wire r_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  wire [2:0] r_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg [1:0] r_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [7:0] r_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output r_rdy;
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [7:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  input w_en;
  wire w_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:90" *)
  wire [2:0] w_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg [1:0] w_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  input [7:0] w_port_data;
  wire [7:0] w_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:400" *)
  wire w_port_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  output w_rdy;
  wire w_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:162" *)
  reg [7:0] storage [3:0];
  initial begin
    storage[0] = 8'h00;
    storage[1] = 8'h00;
    storage[2] = 8'h00;
    storage[3] = 8'h00;
  end
  always @(posedge clk) begin
    if (w_port_en)
      storage[w_port_addr] <= w_port_data;
  end
  assign r_data = storage[r_port_addr];
  assign w_rdy = level != (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:153" *) 3'h4;
  assign r_rdy = | (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:154" *) level;
  assign w_port_en = w_en & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:171" *) w_rdy;
  assign \$1  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$2  = w_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$3  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$4  = r_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$5  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$6  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$6 ;
  assign \$8  = \$5  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$7 ;
  assign \$9  = level + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:184" *) 1'h1;
  assign \$10  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$11  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$12  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$11 ;
  assign \$13  = \$10  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$12 ;
  assign \$14  = level - (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:186" *) 1'h1;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  always @(posedge clk)
    w_port_addr <= \$15 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  always @(posedge clk)
    r_port_addr <= \$16 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  always @(posedge clk)
    level <= \$17 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$19 ) begin end
    \$15  = w_port_addr;
    if (\$1 ) begin
      \$15  = \$2 [1:0];
    end
    if (rst) begin
      \$15  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$19 ) begin end
    \$16  = r_port_addr;
    if (\$3 ) begin
      \$16  = \$4 [1:0];
    end
    if (rst) begin
      \$16  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$19 ) begin end
    \$17  = level;
    if (\$8 ) begin
      \$17  = \$9 [2:0];
    end
    if (\$13 ) begin
      \$17  = \$14 [2:0];
    end
    if (rst) begin
      \$17  = 3'h0;
    end
  end
  assign w_level = level;
  assign r_level = level;
  assign produce = w_port_addr;
  assign w_data = w_port_data;
  assign consume = r_port_addr;
  assign r_port_data = r_data;
endmodule
