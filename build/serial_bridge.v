/* Generated by Amaranth Yosys 0.40 (PyPI ver 0.40.0.0.post101, git sha1 a1bb0255d) */

(* top =  1  *)
(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\build_module.py:54" *)
(* generator = "Amaranth" *)
module serial_bridge(clk, rst, tx, rx);
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  wire [7:0] command_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  wire command_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  wire command_tvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  wire [7:0] consume_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  wire consume_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  wire consume_tvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  wire [7:0] produce_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  wire produce_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  wire produce_tvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  wire [7:0] reply_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  wire reply_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  wire reply_tvalid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:105" *)
  input rx;
  wire rx;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:18" *)
  output tx;
  wire tx;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\build_module.py:59" *)
  \serial_bridge.bridge  bridge (
    .clk(clk),
    .command_tdata(command_tdata),
    .command_tready(produce_tready),
    .command_tvalid(command_tvalid),
    .reply_tdata(consume_tdata),
    .reply_tready(reply_tready),
    .reply_tvalid(consume_tvalid),
    .rst(rst)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\build_module.py:57" *)
  \serial_bridge.uart_rx  uart_rx (
    .clk(clk),
    .produce_tdata(command_tdata),
    .produce_tvalid(command_tvalid),
    .r_en(produce_tready),
    .rst(rst),
    .rx(rx)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\build_module.py:56" *)
  \serial_bridge.uart_tx  uart_tx (
    .clk(clk),
    .consume_tready(reply_tready),
    .rst(rst),
    .tx(tx),
    .w_data(consume_tdata),
    .w_en(consume_tvalid)
  );
  assign reply_tdata = consume_tdata;
  assign consume_tready = reply_tready;
  assign reply_tvalid = consume_tvalid;
  assign produce_tdata = command_tdata;
  assign command_tready = produce_tready;
  assign produce_tvalid = command_tvalid;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:29" *)
(* generator = "Amaranth" *)
module \serial_bridge.bridge (rst, reply_tready, command_tvalid, command_tdata, command_tready, reply_tvalid, reply_tdata, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$1  = 0;
  wire [7:0] \$1 ;
  wire \$10 ;
  wire [2:0] \$11 ;
  wire \$12 ;
  wire [2:0] \$13 ;
  wire \$14 ;
  wire [2:0] \$15 ;
  wire \$16 ;
  reg [3:0] \$17 ;
  reg [31:0] \$18 ;
  reg \$19 ;
  wire \$2 ;
  reg [1:0] \$20 ;
  reg [1:0] \$21 ;
  reg [2:0] \$22 ;
  reg [7:0] \$23 ;
  reg [31:0] \$24 ;
  reg \$25 ;
  wire [5:0] \$26 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:35" *)
  reg [31:0] arg = 32'd0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  input [7:0] command_tdata;
  wire [7:0] command_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  output command_tready;
  reg command_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  input command_tvalid;
  wire command_tvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:32" *)
  reg [1:0] counter = 2'h0;
  (* init = 1'h1 *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:37" *)
  wire ext_reset;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:34" *)
  reg [7:0] prefix = 8'h00;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:10" *)
  wire produce_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:9" *)
  reg [3:0] produce_addr = 4'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:7" *)
  reg produce_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:13" *)
  wire [31:0] produce_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:8" *)
  reg produce_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:12" *)
  reg [31:0] produce_w_data = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:11" *)
  reg produce_w_en = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  output [7:0] reply_tdata;
  reg [7:0] reply_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  input reply_tready;
  wire reply_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  output reply_tvalid;
  reg reply_tvalid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:31" *)
  reg [1:0] size = 2'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:25" *)
  reg soft_reset = 1'h1;
  assign \$26  = counter * (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:133" *) 4'h8;
  assign \$1  = arg >> \$26 ;
  assign \$2  = ! (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) fsm_state;
  assign \$3  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 1'h1;
  assign \$4  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h2;
  assign \$5  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h3;
  assign \$6  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h4;
  assign \$7  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h5;
  assign \$8  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h6;
  assign \$9  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h7;
  assign \$10  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:91" *) counter;
  assign \$11  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:98" *) 1'h1;
  assign \$12  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:103" *) counter;
  assign \$13  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:106" *) 1'h1;
  assign \$14  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:136" *) counter;
  assign \$15  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:139" *) 1'h1;
  assign \$16  = reply_tvalid & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:155" *) reply_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:9" *)
  always @(posedge clk)
    produce_addr <= \$17 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:12" *)
  always @(posedge clk)
    produce_w_data <= \$18 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:11" *)
  always @(posedge clk)
    produce_w_en <= \$19 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:31" *)
  always @(posedge clk)
    size <= \$20 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:32" *)
  always @(posedge clk)
    counter <= \$21 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  always @(posedge clk)
    fsm_state <= \$22 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:34" *)
  always @(posedge clk)
    prefix <= \$23 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:35" *)
  always @(posedge clk)
    arg <= \$24 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:37" *)
  always @(posedge clk)
    soft_reset <= \$25 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    command_tready = 1'h0;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          command_tready = 1'h1;
      3'h1:
          command_tready = 1'h1;
      3'h5:
          command_tready = 1'h1;
      3'h6:
          /* empty */;
      3'h2:
          /* empty */;
      3'h7:
          /* empty */;
      3'h4:
          /* empty */;
      3'h3:
          command_tready = reply_tready;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    produce_stb = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          produce_stb = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    produce_cyc = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          produce_cyc = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    reply_tvalid = 1'h0;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          /* empty */;
      3'h2:
          reply_tvalid = 1'h1;
      3'h7:
          reply_tvalid = 1'h1;
      3'h4:
          reply_tvalid = 1'h1;
      3'h3:
          reply_tvalid = command_tvalid;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    reply_tdata = 8'h00;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          /* empty */;
      3'h2:
          reply_tdata = prefix;
      3'h7:
          reply_tdata = \$1 ;
      3'h4:
          reply_tdata = 8'h0a;
      3'h3:
          reply_tdata = command_tdata;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$17  = produce_addr;
    casez (fsm_state)
      3'h0:
          \$17  = 4'h0;
      3'h1:
          if (command_tvalid) begin
            casez (counter)
              2'h0:
                  \$17  = command_tdata[3:0];
            endcase
          end
    endcase
    if (rst) begin
      \$17  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$18  = produce_w_data;
    casez (fsm_state)
      3'h0:
          \$18  = 32'd0;
      3'h1:
          /* empty */;
      3'h5:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (counter)
              2'h0:
                  \$18 [7:0] = command_tdata;
              2'h1:
                  \$18 [15:8] = command_tdata;
              2'h2:
                  \$18 [23:16] = command_tdata;
              2'h3:
                  \$18 [31:24] = command_tdata;
            endcase
          end
    endcase
    if (rst) begin
      \$18  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$19  = produce_w_en;
    casez (fsm_state)
      3'h0:
        begin
          \$19  = 1'h0;
          if (command_tvalid) begin
            casez (command_tdata)
              8'h77:
                  \$19  = 1'h1;
              8'h57:
                  \$19  = 1'h1;
            endcase
          end
        end
    endcase
    if (rst) begin
      \$19  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$20  = size;
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            casez (command_tdata)
              8'h77:
                  \$20  = 2'h0;
              8'h57:
                  \$20  = 2'h3;
              8'h72:
                  \$20  = 2'h0;
              8'h52:
                  \$20  = 2'h3;
            endcase
          end
    endcase
    if (rst) begin
      \$20  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$21  = counter;
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (command_tdata)
              8'h77:
                  \$21  = 2'h0;
              8'h57:
                  \$21  = 2'h3;
              8'h72:
                  \$21  = 2'h0;
              8'h52:
                  \$21  = 2'h3;
              8'h49:
                  \$21  = 2'h0;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  /* empty */;
              default:
                  \$21  = 2'h0;
            endcase
          end
      3'h1:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            if (\$10 ) begin
              \$21  = size;
            end else begin
              \$21  = \$11 [1:0];
            end
          end
      3'h5:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            if (\$12 ) begin
            end else begin
              \$21  = \$13 [1:0];
            end
          end
      3'h6:
          /* empty */;
      3'h2:
          /* empty */;
      3'h7:
          if (reply_tready) begin
            (* full_case = 32'd1 *)
            if (\$14 ) begin
            end else begin
              \$21  = \$15 [1:0];
            end
          end
    endcase
    if (rst) begin
      \$21  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$22  = fsm_state;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (command_tdata)
              8'h77:
                  \$22  = 3'h1;
              8'h57:
                  \$22  = 3'h1;
              8'h72:
                  \$22  = 3'h1;
              8'h52:
                  \$22  = 3'h1;
              8'h49:
                  \$22  = 3'h2;
              8'h65:
                  \$22  = 3'h3;
              8'h0a:
                  \$22  = 3'h4;
              8'h78:
                  /* empty */;
              default:
                  \$22  = 3'h2;
            endcase
          end
      3'h1:
          if (command_tvalid) begin
            if (\$10 ) begin
              (* full_case = 32'd1 *)
              if (produce_w_en) begin
                \$22  = 3'h5;
              end else begin
                \$22  = 3'h6;
              end
            end
          end
      3'h5:
          if (command_tvalid) begin
            if (\$12 ) begin
              \$22  = 3'h6;
            end
          end
      3'h6:
          /* empty */;
      3'h2:
          if (reply_tready) begin
            \$22  = 3'h7;
          end
      3'h7:
          if (reply_tready) begin
            if (\$14 ) begin
              \$22  = 3'h0;
            end
          end
      3'h4:
          if (reply_tready) begin
            \$22  = 3'h0;
          end
      3'h3:
          if (\$16 ) begin
            \$22  = 3'h0;
          end
    endcase
    if (rst) begin
      \$22  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$23  = prefix;
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (command_tdata)
              8'h77:
                  /* empty */;
              8'h57:
                  /* empty */;
              8'h72:
                  /* empty */;
              8'h52:
                  /* empty */;
              8'h49:
                  \$23  = 8'h49;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  /* empty */;
              default:
                  \$23  = 8'h25;
            endcase
          end
    endcase
    if (rst) begin
      \$23  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$24  = arg;
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (command_tdata)
              8'h77:
                  /* empty */;
              8'h57:
                  /* empty */;
              8'h72:
                  /* empty */;
              8'h52:
                  /* empty */;
              8'h49:
                  \$24  = 32'd68;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  /* empty */;
              default:
                  \$24  = { 24'h000000, command_tdata };
            endcase
          end
    endcase
    if (rst) begin
      \$24  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$25  = soft_reset;
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            casez (command_tdata)
              8'h77:
                  /* empty */;
              8'h57:
                  /* empty */;
              8'h72:
                  /* empty */;
              8'h52:
                  /* empty */;
              8'h49:
                  /* empty */;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  \$25  = 1'h0;
            endcase
          end
    endcase
    if (rst) begin
      \$25  = 1'h1;
    end
  end
  assign ext_reset = soft_reset;
  assign produce_ack = 1'h0;
  assign produce_r_data = 32'd0;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:109" *)
(* generator = "Amaranth" *)
module \serial_bridge.uart_rx (clk, rst, produce_tvalid, produce_tdata, r_en, rx);
  reg \$auto$verilog_backend.cc:2352:dump_module$2  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [7:0] \$14 ;
  wire [7:0] \$15 ;
  wire [8:0] \$16 ;
  wire \$17 ;
  wire [3:0] \$18 ;
  wire \$19 ;
  wire \$2 ;
  wire \$20 ;
  wire \$21 ;
  wire [3:0] \$22 ;
  reg [13:0] \$23 ;
  reg [2:0] \$24 ;
  reg [2:0] \$25 ;
  reg [7:0] \$26 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [14:0] \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:124" *)
  reg [2:0] bit_counter = 3'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:119" *)
  reg [13:0] counter = 14'h0000;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:125" *)
  reg [7:0] data_register = 8'h00;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  output [7:0] produce_tdata;
  wire [7:0] produce_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  wire produce_tready;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output produce_tvalid;
  wire produce_tvalid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  input r_en;
  wire r_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:105" *)
  input rx;
  wire rx;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  reg [7:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  reg w_en;
  assign \$1  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:160" *) counter;
  assign \$2  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:161" *) bit_counter;
  assign \$3  = ! (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) fsm_state;
  assign \$4  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 1'h1;
  assign \$5  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h2;
  assign \$6  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h3;
  assign \$7  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h4;
  assign \$8  = counter > (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:121" *) 1'h0;
  assign \$9  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:122" *) 1'h1;
  assign \$10  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:129" *) rx;
  assign \$11  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:134" *) counter;
  assign \$13  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:143" *) counter;
  assign \$16  = \$14  + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:144" *) \$15 ;
  assign \$17  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:146" *) bit_counter;
  assign \$18  = bit_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:153" *) 1'h1;
  assign \$19  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:155" *) counter;
  assign \$20  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:160" *) counter;
  assign \$21  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:161" *) bit_counter;
  assign \$22  = bit_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:167" *) 1'h1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:119" *)
  always @(posedge clk)
    counter <= \$23 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  always @(posedge clk)
    fsm_state <= \$24 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:124" *)
  always @(posedge clk)
    bit_counter <= \$25 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:125" *)
  always @(posedge clk)
    data_register <= \$26 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:111" *)
  \serial_bridge.uart_rx.buffer  buffer (
    .clk(clk),
    .r_data(produce_tdata),
    .r_en(r_en),
    .r_rdy(produce_tvalid),
    .rst(rst),
    .w_en(w_en),
    .w_port_data(w_data)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    w_data = 8'h00;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h4:
          /* empty */;
      3'h3:
          if (\$1 ) begin
            if (\$2 ) begin
              w_data = data_register;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    w_en = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h4:
          /* empty */;
      3'h3:
          if (\$1 ) begin
            if (\$2 ) begin
              w_en = 1'h1;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$23  = counter;
    if (\$8 ) begin
      \$23  = \$9 [13:0];
    end
    casez (fsm_state)
      3'h0:
          if (\$10 ) begin
            \$23  = 14'h1458;
          end
      3'h1:
          if (\$11 ) begin
            (* full_case = 32'd1 *)
            if (\$12 ) begin
            end else begin
              \$23  = 14'h28b0;
            end
          end
      3'h2:
          if (\$13 ) begin
            \$23  = 14'h28b0;
          end
      3'h4:
          if (\$19 ) begin
            \$23  = 14'h28b0;
          end
      3'h3:
          if (\$20 ) begin
            (* full_case = 32'd1 *)
            if (\$21 ) begin
            end else begin
              \$23  = 14'h28b0;
            end
          end
    endcase
    if (rst) begin
      \$23  = 14'h0000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$24  = fsm_state;
    casez (fsm_state)
      3'h0:
          if (\$10 ) begin
            \$24  = 3'h1;
          end
      3'h1:
          if (\$11 ) begin
            (* full_case = 32'd1 *)
            if (\$12 ) begin
              \$24  = 3'h0;
            end else begin
              \$24  = 3'h2;
            end
          end
      3'h2:
          if (\$13 ) begin
            if (\$17 ) begin
              \$24  = 3'h3;
            end
          end
      3'h4:
          if (\$19 ) begin
            \$24  = 3'h3;
          end
      3'h3:
          if (\$20 ) begin
            if (\$21 ) begin
              \$24  = 3'h0;
            end
          end
    endcase
    if (rst) begin
      \$24  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$25  = bit_counter;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          if (\$11 ) begin
            (* full_case = 32'd1 *)
            if (\$12 ) begin
            end else begin
              \$25  = 3'h7;
            end
          end
      3'h2:
          if (\$13 ) begin
            (* full_case = 32'd1 *)
            if (\$17 ) begin
              \$25  = 3'h0;
            end else begin
              \$25  = \$18 [2:0];
            end
          end
      3'h4:
          if (\$19 ) begin
            \$25  = 3'h0;
          end
      3'h3:
          if (\$20 ) begin
            (* full_case = 32'd1 *)
            if (\$21 ) begin
            end else begin
              \$25  = \$22 [2:0];
            end
          end
    endcase
    if (rst) begin
      \$25  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$26  = data_register;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          if (\$13 ) begin
            \$26  = \$16 [7:0];
          end
    endcase
    if (rst) begin
      \$26  = 8'h00;
    end
  end
  assign r_data = produce_tdata;
  assign r_rdy = produce_tvalid;
  assign produce_tready = r_en;
  assign \$12  = rx;
  assign \$14  = { 1'h0, data_register[7:1] };
  assign \$15  = { rx, 7'h00 };
endmodule

(* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:144" *)
(* generator = "Amaranth" *)
module \serial_bridge.uart_rx.buffer (rst, r_rdy, r_data, w_port_data, w_en, r_en, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$3  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [3:0] \$14 ;
  reg [1:0] \$15 ;
  reg [1:0] \$16 ;
  reg [2:0] \$17 ;
  wire [2:0] \$2 ;
  wire \$3 ;
  wire [2:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [3:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  wire [1:0] consume;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  reg [2:0] level = 3'h0;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  wire [1:0] produce;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  output [7:0] r_data;
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  input r_en;
  wire r_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  wire [2:0] r_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg [1:0] r_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [7:0] r_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output r_rdy;
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [7:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  input w_en;
  wire w_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:90" *)
  wire [2:0] w_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg [1:0] w_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  input [7:0] w_port_data;
  wire [7:0] w_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:400" *)
  wire w_port_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  wire w_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:162" *)
  reg [7:0] storage [3:0];
  initial begin
    storage[0] = 8'h00;
    storage[1] = 8'h00;
    storage[2] = 8'h00;
    storage[3] = 8'h00;
  end
  always @(posedge clk) begin
    if (w_port_en)
      storage[w_port_addr] <= w_port_data;
  end
  assign r_data = storage[r_port_addr];
  assign w_rdy = level != (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:153" *) 3'h4;
  assign r_rdy = | (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:154" *) level;
  assign w_port_en = w_en & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:171" *) w_rdy;
  assign \$1  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$2  = w_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$3  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$4  = r_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$5  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$6  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$6 ;
  assign \$8  = \$5  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$7 ;
  assign \$9  = level + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:184" *) 1'h1;
  assign \$10  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$11  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$12  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$11 ;
  assign \$13  = \$10  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$12 ;
  assign \$14  = level - (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:186" *) 1'h1;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  always @(posedge clk)
    w_port_addr <= \$15 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  always @(posedge clk)
    r_port_addr <= \$16 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  always @(posedge clk)
    level <= \$17 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$15  = w_port_addr;
    if (\$1 ) begin
      \$15  = \$2 [1:0];
    end
    if (rst) begin
      \$15  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$16  = r_port_addr;
    if (\$3 ) begin
      \$16  = \$4 [1:0];
    end
    if (rst) begin
      \$16  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$17  = level;
    if (\$8 ) begin
      \$17  = \$9 [2:0];
    end
    if (\$13 ) begin
      \$17  = \$14 [2:0];
    end
    if (rst) begin
      \$17  = 3'h0;
    end
  end
  assign w_level = level;
  assign r_level = level;
  assign produce = w_port_addr;
  assign w_data = w_port_data;
  assign consume = r_port_addr;
  assign r_port_data = r_data;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:22" *)
(* generator = "Amaranth" *)
module \serial_bridge.uart_tx (rst, consume_tready, tx, w_en, w_data, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$4  = 0;
  wire \$1 ;
  wire [7:0] \$10 ;
  wire \$11 ;
  wire [3:0] \$12 ;
  wire [14:0] \$13 ;
  wire \$14 ;
  wire [14:0] \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire [3:0] \$18 ;
  wire [14:0] \$19 ;
  wire \$2 ;
  reg [7:0] \$20 ;
  reg [13:0] \$21 ;
  reg [2:0] \$22 ;
  reg [2:0] \$23 ;
  reg \$24 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire [14:0] \$7 ;
  wire \$8 ;
  wire [1:0] \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:36" *)
  reg [2:0] byte_counter = 3'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  wire [7:0] consume_tdata;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  output consume_tready;
  wire consume_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  wire consume_tvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:35" *)
  reg [13:0] counter = 14'h0000;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:32" *)
  reg [7:0] data_register = 8'h00;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:33" *)
  reg parity = 1'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  reg r_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:18" *)
  output tx;
  reg tx;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  input [7:0] w_data;
  wire [7:0] w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  input w_en;
  wire w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  wire w_rdy;
  assign \$1  = ! (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) fsm_state;
  assign \$2  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 1'h1;
  assign \$3  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h2;
  assign \$4  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h3;
  assign \$5  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h4;
  assign \$6  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:50" *) counter;
  assign \$7  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:55" *) 1'h1;
  assign \$8  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:59" *) counter;
  assign \$9  = parity + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:60" *) data_register[0];
  assign \$11  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:63" *) byte_counter;
  assign \$12  = byte_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:70" *) 1'h1;
  assign \$13  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:72" *) 1'h1;
  assign \$14  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:76" *) counter;
  assign \$15  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:82" *) 1'h1;
  assign \$16  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:86" *) counter;
  assign \$17  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:87" *) byte_counter;
  assign \$18  = byte_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:90" *) 1'h1;
  assign \$19  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:93" *) 1'h1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:32" *)
  always @(posedge clk)
    data_register <= \$20 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:35" *)
  always @(posedge clk)
    counter <= \$21 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  always @(posedge clk)
    fsm_state <= \$22 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:36" *)
  always @(posedge clk)
    byte_counter <= \$23 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:33" *)
  always @(posedge clk)
    parity <= \$24 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:24" *)
  \serial_bridge.uart_tx.buffer  buffer (
    .clk(clk),
    .r_data(r_data),
    .r_en(r_en),
    .r_rdy(r_rdy),
    .rst(rst),
    .w_en(w_en),
    .w_port_data(w_data),
    .w_rdy(consume_tready)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    tx = 1'h0;
    casez (fsm_state)
      3'h0:
          tx = 1'h1;
      3'h1:
          tx = 1'h0;
      3'h2:
          tx = data_register[0];
      3'h4:
          tx = parity;
      3'h3:
          tx = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    r_en = 1'h0;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            r_en = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$20  = data_register;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            \$20  = r_data;
          end
      3'h1:
          /* empty */;
      3'h2:
          if (\$8 ) begin
            \$20  = \$10 ;
          end
    endcase
    if (rst) begin
      \$20  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$21  = counter;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            \$21  = 14'h28b0;
          end
      3'h1:
          (* full_case = 32'd1 *)
          if (\$6 ) begin
            \$21  = 14'h28b0;
          end else begin
            \$21  = \$7 [13:0];
          end
      3'h2:
          (* full_case = 32'd1 *)
          if (\$8 ) begin
            \$21  = 14'h28b0;
          end else begin
            \$21  = \$13 [13:0];
          end
      3'h4:
          (* full_case = 32'd1 *)
          if (\$14 ) begin
            \$21  = 14'h28b0;
          end else begin
            \$21  = \$15 [13:0];
          end
      3'h3:
          (* full_case = 32'd1 *)
          if (\$16 ) begin
            (* full_case = 32'd1 *)
            if (\$17 ) begin
            end else begin
              \$21  = 14'h28b0;
            end
          end else begin
            \$21  = \$19 [13:0];
          end
    endcase
    if (rst) begin
      \$21  = 14'h0000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$22  = fsm_state;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            \$22  = 3'h1;
          end
      3'h1:
          if (\$6 ) begin
            \$22  = 3'h2;
          end
      3'h2:
          if (\$8 ) begin
            if (\$11 ) begin
              \$22  = 3'h3;
            end
          end
      3'h4:
          if (\$14 ) begin
            \$22  = 3'h3;
          end
      3'h3:
          if (\$16 ) begin
            if (\$17 ) begin
              \$22  = 3'h0;
            end
          end
    endcase
    if (rst) begin
      \$22  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$23  = byte_counter;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          if (\$6 ) begin
            \$23  = 3'h7;
          end
      3'h2:
          if (\$8 ) begin
            (* full_case = 32'd1 *)
            if (\$11 ) begin
              \$23  = 3'h1;
            end else begin
              \$23  = \$12 [2:0];
            end
          end
      3'h4:
          if (\$14 ) begin
            \$23  = 3'h1;
          end
      3'h3:
          if (\$16 ) begin
            (* full_case = 32'd1 *)
            if (\$17 ) begin
            end else begin
              \$23  = \$18 [2:0];
            end
          end
    endcase
    if (rst) begin
      \$23  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$24  = parity;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          if (\$8 ) begin
            \$24  = \$9 [0];
          end
      3'h4:
          if (\$14 ) begin
            \$24  = 1'h0;
          end
    endcase
    if (rst) begin
      \$24  = 1'h0;
    end
  end
  assign consume_tvalid = w_en;
  assign consume_tdata = w_data;
  assign w_rdy = consume_tready;
  assign \$10  = { 1'h0, data_register[7:1] };
endmodule

(* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:144" *)
(* generator = "Amaranth" *)
module \serial_bridge.uart_tx.buffer (rst, w_rdy, r_rdy, r_data, r_en, w_en, w_port_data, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$5  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [3:0] \$14 ;
  reg [1:0] \$15 ;
  reg [1:0] \$16 ;
  reg [2:0] \$17 ;
  wire [2:0] \$2 ;
  wire \$3 ;
  wire [2:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [3:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  wire [1:0] consume;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  reg [2:0] level = 3'h0;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  wire [1:0] produce;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  output [7:0] r_data;
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  input r_en;
  wire r_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  wire [2:0] r_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg [1:0] r_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [7:0] r_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output r_rdy;
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [7:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  input w_en;
  wire w_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:90" *)
  wire [2:0] w_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg [1:0] w_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  input [7:0] w_port_data;
  wire [7:0] w_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:400" *)
  wire w_port_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  output w_rdy;
  wire w_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:162" *)
  reg [7:0] storage [3:0];
  initial begin
    storage[0] = 8'h00;
    storage[1] = 8'h00;
    storage[2] = 8'h00;
    storage[3] = 8'h00;
  end
  always @(posedge clk) begin
    if (w_port_en)
      storage[w_port_addr] <= w_port_data;
  end
  assign r_data = storage[r_port_addr];
  assign w_rdy = level != (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:153" *) 3'h4;
  assign r_rdy = | (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:154" *) level;
  assign w_port_en = w_en & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:171" *) w_rdy;
  assign \$1  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$2  = w_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$3  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$4  = r_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$5  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$6  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$6 ;
  assign \$8  = \$5  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$7 ;
  assign \$9  = level + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:184" *) 1'h1;
  assign \$10  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$11  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$12  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$11 ;
  assign \$13  = \$10  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$12 ;
  assign \$14  = level - (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:186" *) 1'h1;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  always @(posedge clk)
    w_port_addr <= \$15 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  always @(posedge clk)
    r_port_addr <= \$16 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  always @(posedge clk)
    level <= \$17 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$15  = w_port_addr;
    if (\$1 ) begin
      \$15  = \$2 [1:0];
    end
    if (rst) begin
      \$15  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$16  = r_port_addr;
    if (\$3 ) begin
      \$16  = \$4 [1:0];
    end
    if (rst) begin
      \$16  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$17  = level;
    if (\$8 ) begin
      \$17  = \$9 [2:0];
    end
    if (\$13 ) begin
      \$17  = \$14 [2:0];
    end
    if (rst) begin
      \$17  = 3'h0;
    end
  end
  assign w_level = level;
  assign r_level = level;
  assign produce = w_port_addr;
  assign w_data = w_port_data;
  assign consume = r_port_addr;
  assign r_port_data = r_data;
endmodule
