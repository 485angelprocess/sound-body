/* Generated by Amaranth Yosys 0.40 (PyPI ver 0.40.0.0.post101, git sha1 a1bb0255d) */

(* top =  1  *)
(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\build_module.py:69" *)
(* generator = "Amaranth" *)
module serial_demo(sda_in, clk, rst, tx, soft_reset, sda, sda_en, scl, rx);
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:10" *)
  wire bus_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:9" *)
  wire [3:0] bus_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:7" *)
  wire bus_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:13" *)
  wire [31:0] bus_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:8" *)
  wire bus_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:12" *)
  wire [31:0] bus_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:11" *)
  wire bus_w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  wire [7:0] command_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  wire command_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  wire command_tvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  wire [7:0] consume_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  wire consume_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  wire consume_tvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:10" *)
  wire produce_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:9" *)
  wire [3:0] produce_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:7" *)
  wire produce_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:13" *)
  wire [31:0] produce_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:8" *)
  wire produce_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  wire [7:0] produce_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  wire produce_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  wire produce_tvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:12" *)
  wire [31:0] produce_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:11" *)
  wire produce_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  wire [7:0] reply_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  wire reply_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  wire reply_tvalid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:105" *)
  input rx;
  wire rx;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:377" *)
  output scl;
  wire scl;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:374" *)
  output sda;
  wire sda;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:375" *)
  output sda_en;
  wire sda_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:376" *)
  input sda_in;
  wire sda_in;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:25" *)
  output soft_reset;
  wire soft_reset;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:18" *)
  output tx;
  wire tx;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\build_module.py:74" *)
  \serial_demo.bridge  bridge (
    .clk(clk),
    .command_tdata(command_tdata),
    .command_tready(produce_tready),
    .command_tvalid(command_tvalid),
    .produce_ack(produce_ack),
    .produce_addr(bus_addr),
    .produce_cyc(bus_cyc),
    .produce_r_data(produce_r_data),
    .produce_stb(bus_stb),
    .produce_w_data(bus_w_data),
    .produce_w_en(bus_w_en),
    .reply_tdata(consume_tdata),
    .reply_tready(reply_tready),
    .reply_tvalid(consume_tvalid),
    .rst(rst),
    .soft_reset(soft_reset)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\build_module.py:76" *)
  \serial_demo.i2c  i2c (
    .bus_ack(produce_ack),
    .bus_addr(bus_addr),
    .bus_cyc(bus_cyc),
    .bus_r_data(produce_r_data),
    .bus_stb(bus_stb),
    .bus_w_data(bus_w_data),
    .bus_w_en(bus_w_en),
    .clk(clk),
    .rst(rst),
    .scl(scl),
    .sda(sda),
    .sda_en(sda_en),
    .sda_in(sda_in)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\build_module.py:72" *)
  \serial_demo.uart_rx  uart_rx (
    .clk(clk),
    .produce_tdata(command_tdata),
    .produce_tvalid(command_tvalid),
    .r_en(produce_tready),
    .rst(rst),
    .rx(rx)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\build_module.py:71" *)
  \serial_demo.uart_tx  uart_tx (
    .clk(clk),
    .consume_tready(reply_tready),
    .rst(rst),
    .tx(tx),
    .w_data(consume_tdata),
    .w_en(consume_tvalid)
  );
  assign reply_tdata = consume_tdata;
  assign consume_tready = reply_tready;
  assign reply_tvalid = consume_tvalid;
  assign produce_tdata = command_tdata;
  assign command_tready = produce_tready;
  assign produce_tvalid = command_tvalid;
  assign bus_ack = produce_ack;
  assign produce_addr = bus_addr;
  assign produce_cyc = bus_cyc;
  assign bus_r_data = produce_r_data;
  assign produce_stb = bus_stb;
  assign produce_w_data = bus_w_data;
  assign produce_w_en = bus_w_en;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:29" *)
(* generator = "Amaranth" *)
module \serial_demo.bridge (rst, reply_tready, command_tvalid, command_tdata, command_tready, produce_stb, produce_cyc, reply_tvalid, reply_tdata, produce_addr, produce_w_data, produce_w_en, soft_reset, produce_ack, produce_r_data, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$1  = 0;
  wire [7:0] \$1 ;
  wire \$10 ;
  wire [2:0] \$11 ;
  wire \$12 ;
  wire [2:0] \$13 ;
  wire \$14 ;
  wire [2:0] \$15 ;
  wire \$16 ;
  reg [3:0] \$17 ;
  reg [31:0] \$18 ;
  reg \$19 ;
  wire \$2 ;
  reg [1:0] \$20 ;
  reg [1:0] \$21 ;
  reg [2:0] \$22 ;
  reg [7:0] \$23 ;
  reg [31:0] \$24 ;
  reg \$25 ;
  wire [5:0] \$26 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:35" *)
  reg [31:0] arg = 32'd0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  input [7:0] command_tdata;
  wire [7:0] command_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  output command_tready;
  reg command_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  input command_tvalid;
  wire command_tvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:32" *)
  reg [1:0] counter = 2'h0;
  (* init = 1'h1 *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:37" *)
  wire ext_reset;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:34" *)
  reg [7:0] prefix = 8'h00;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:10" *)
  input produce_ack;
  wire produce_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:9" *)
  output [3:0] produce_addr;
  reg [3:0] produce_addr = 4'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:7" *)
  output produce_cyc;
  reg produce_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:13" *)
  input [31:0] produce_r_data;
  wire [31:0] produce_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:8" *)
  output produce_stb;
  reg produce_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:12" *)
  output [31:0] produce_w_data;
  reg [31:0] produce_w_data = 32'd0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:11" *)
  output produce_w_en;
  reg produce_w_en = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  output [7:0] reply_tdata;
  reg [7:0] reply_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  input reply_tready;
  wire reply_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  output reply_tvalid;
  reg reply_tvalid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:31" *)
  reg [1:0] size = 2'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:37" *)
  output soft_reset;
  reg soft_reset = 1'h1;
  assign \$26  = counter * (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:133" *) 4'h8;
  assign \$1  = arg >> \$26 ;
  assign \$2  = ! (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) fsm_state;
  assign \$3  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 1'h1;
  assign \$4  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h2;
  assign \$5  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h3;
  assign \$6  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h4;
  assign \$7  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h5;
  assign \$8  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h6;
  assign \$9  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h7;
  assign \$10  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:91" *) counter;
  assign \$11  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:98" *) 1'h1;
  assign \$12  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:103" *) counter;
  assign \$13  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:106" *) 1'h1;
  assign \$14  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:136" *) counter;
  assign \$15  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:139" *) 1'h1;
  assign \$16  = reply_tvalid & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:155" *) reply_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:9" *)
  always @(posedge clk)
    produce_addr <= \$17 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:12" *)
  always @(posedge clk)
    produce_w_data <= \$18 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:11" *)
  always @(posedge clk)
    produce_w_en <= \$19 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:31" *)
  always @(posedge clk)
    size <= \$20 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:32" *)
  always @(posedge clk)
    counter <= \$21 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  always @(posedge clk)
    fsm_state <= \$22 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:34" *)
  always @(posedge clk)
    prefix <= \$23 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:35" *)
  always @(posedge clk)
    arg <= \$24 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\serial_to_wishbone.py:37" *)
  always @(posedge clk)
    soft_reset <= \$25 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    command_tready = 1'h0;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          command_tready = 1'h1;
      3'h1:
          command_tready = 1'h1;
      3'h5:
          command_tready = 1'h1;
      3'h6:
          /* empty */;
      3'h2:
          /* empty */;
      3'h7:
          /* empty */;
      3'h4:
          /* empty */;
      3'h3:
          command_tready = reply_tready;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    produce_stb = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          produce_stb = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    produce_cyc = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          produce_cyc = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    reply_tvalid = 1'h0;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          /* empty */;
      3'h2:
          reply_tvalid = 1'h1;
      3'h7:
          reply_tvalid = 1'h1;
      3'h4:
          reply_tvalid = 1'h1;
      3'h3:
          reply_tvalid = command_tvalid;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    reply_tdata = 8'h00;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          /* empty */;
      3'h2:
          reply_tdata = prefix;
      3'h7:
          reply_tdata = \$1 ;
      3'h4:
          reply_tdata = 8'h0a;
      3'h3:
          reply_tdata = command_tdata;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$17  = produce_addr;
    casez (fsm_state)
      3'h0:
          \$17  = 4'h0;
      3'h1:
          if (command_tvalid) begin
            casez (counter)
              2'h0:
                  \$17  = command_tdata[3:0];
            endcase
          end
    endcase
    if (rst) begin
      \$17  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$18  = produce_w_data;
    casez (fsm_state)
      3'h0:
          \$18  = 32'd0;
      3'h1:
          /* empty */;
      3'h5:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (counter)
              2'h0:
                  \$18 [7:0] = command_tdata;
              2'h1:
                  \$18 [15:8] = command_tdata;
              2'h2:
                  \$18 [23:16] = command_tdata;
              2'h3:
                  \$18 [31:24] = command_tdata;
            endcase
          end
    endcase
    if (rst) begin
      \$18  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$19  = produce_w_en;
    casez (fsm_state)
      3'h0:
        begin
          \$19  = 1'h0;
          if (command_tvalid) begin
            casez (command_tdata)
              8'h77:
                  \$19  = 1'h1;
              8'h57:
                  \$19  = 1'h1;
            endcase
          end
        end
    endcase
    if (rst) begin
      \$19  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$20  = size;
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            casez (command_tdata)
              8'h77:
                  \$20  = 2'h0;
              8'h57:
                  \$20  = 2'h3;
              8'h72:
                  \$20  = 2'h0;
              8'h52:
                  \$20  = 2'h3;
            endcase
          end
    endcase
    if (rst) begin
      \$20  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$21  = counter;
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (command_tdata)
              8'h77:
                  \$21  = 2'h0;
              8'h57:
                  \$21  = 2'h3;
              8'h72:
                  \$21  = 2'h0;
              8'h52:
                  \$21  = 2'h3;
              8'h49:
                  \$21  = 2'h0;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  /* empty */;
              default:
                  \$21  = 2'h0;
            endcase
          end
      3'h1:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            if (\$10 ) begin
              \$21  = size;
            end else begin
              \$21  = \$11 [1:0];
            end
          end
      3'h5:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            if (\$12 ) begin
            end else begin
              \$21  = \$13 [1:0];
            end
          end
      3'h6:
          if (produce_ack) begin
            (* full_case = 32'd1 *)
            if (produce_w_en) begin
              \$21  = size;
            end else begin
              \$21  = size;
            end
          end
      3'h2:
          /* empty */;
      3'h7:
          if (reply_tready) begin
            (* full_case = 32'd1 *)
            if (\$14 ) begin
            end else begin
              \$21  = \$15 [1:0];
            end
          end
    endcase
    if (rst) begin
      \$21  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$22  = fsm_state;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (command_tdata)
              8'h77:
                  \$22  = 3'h1;
              8'h57:
                  \$22  = 3'h1;
              8'h72:
                  \$22  = 3'h1;
              8'h52:
                  \$22  = 3'h1;
              8'h49:
                  \$22  = 3'h2;
              8'h65:
                  \$22  = 3'h3;
              8'h0a:
                  \$22  = 3'h4;
              8'h78:
                  /* empty */;
              default:
                  \$22  = 3'h2;
            endcase
          end
      3'h1:
          if (command_tvalid) begin
            if (\$10 ) begin
              (* full_case = 32'd1 *)
              if (produce_w_en) begin
                \$22  = 3'h5;
              end else begin
                \$22  = 3'h6;
              end
            end
          end
      3'h5:
          if (command_tvalid) begin
            if (\$12 ) begin
              \$22  = 3'h6;
            end
          end
      3'h6:
          if (produce_ack) begin
            \$22  = 3'h2;
          end
      3'h2:
          if (reply_tready) begin
            \$22  = 3'h7;
          end
      3'h7:
          if (reply_tready) begin
            if (\$14 ) begin
              \$22  = 3'h0;
            end
          end
      3'h4:
          if (reply_tready) begin
            \$22  = 3'h0;
          end
      3'h3:
          if (\$16 ) begin
            \$22  = 3'h0;
          end
    endcase
    if (rst) begin
      \$22  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$23  = prefix;
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (command_tdata)
              8'h77:
                  /* empty */;
              8'h57:
                  /* empty */;
              8'h72:
                  /* empty */;
              8'h52:
                  /* empty */;
              8'h49:
                  \$23  = 8'h49;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  /* empty */;
              default:
                  \$23  = 8'h25;
            endcase
          end
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          if (produce_ack) begin
            (* full_case = 32'd1 *)
            if (produce_w_en) begin
              \$23  = 8'h57;
            end else begin
              \$23  = 8'h52;
            end
          end
    endcase
    if (rst) begin
      \$23  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$24  = arg;
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            (* full_case = 32'd1 *)
            casez (command_tdata)
              8'h77:
                  /* empty */;
              8'h57:
                  /* empty */;
              8'h72:
                  /* empty */;
              8'h52:
                  /* empty */;
              8'h49:
                  \$24  = 32'd68;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  /* empty */;
              default:
                  \$24  = { 24'h000000, command_tdata };
            endcase
          end
      3'h1:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          if (produce_ack) begin
            (* full_case = 32'd1 *)
            if (produce_w_en) begin
              \$24  = { 28'h0000000, produce_addr };
            end else begin
              \$24  = produce_r_data;
            end
          end
    endcase
    if (rst) begin
      \$24  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$25  = soft_reset;
    casez (fsm_state)
      3'h0:
          if (command_tvalid) begin
            casez (command_tdata)
              8'h77:
                  /* empty */;
              8'h57:
                  /* empty */;
              8'h72:
                  /* empty */;
              8'h52:
                  /* empty */;
              8'h49:
                  /* empty */;
              8'h65:
                  /* empty */;
              8'h0a:
                  /* empty */;
              8'h78:
                  \$25  = 1'h0;
            endcase
          end
    endcase
    if (rst) begin
      \$25  = 1'h1;
    end
  end
  assign ext_reset = soft_reset;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:381" *)
(* generator = "Amaranth" *)
module \serial_demo.i2c (clk, rst, bus_stb, bus_cyc, bus_addr, bus_w_data, bus_w_en, scl, sda_en, sda, bus_ack, bus_r_data, sda_in);
  wire [8:0] \$1 ;
  wire [11:0] \$2 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:135" *)
  wire ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:10" *)
  output bus_ack;
  wire bus_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:10" *)
  wire \bus_ack$25 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:9" *)
  input [3:0] bus_addr;
  wire [3:0] bus_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:9" *)
  wire [3:0] \bus_addr$27 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:7" *)
  input bus_cyc;
  wire bus_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:7" *)
  wire \bus_cyc$29 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:13" *)
  output [31:0] bus_r_data;
  wire [31:0] bus_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:13" *)
  wire [31:0] \bus_r_data$31 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:8" *)
  input bus_stb;
  wire bus_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:8" *)
  wire \bus_stb$33 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:12" *)
  input [31:0] bus_w_data;
  wire [31:0] bus_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:12" *)
  wire [31:0] \bus_w_data$35 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:11" *)
  input bus_w_en;
  wire bus_w_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:11" *)
  wire \bus_w_en$37 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:298" *)
  wire clk_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:142" *)
  wire \clk_en$11 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:126" *)
  wire [9:0] ctl_period;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:30" *)
  wire [31:0] \ctl_period$39 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:299" *)
  wire dat_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:143" *)
  wire \dat_en$13 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:38" *)
  wire \dat_en$51 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:300" *)
  wire data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:144" *)
  wire \data$15 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:124" *)
  wire enable;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:33" *)
  wire \enable$45 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:149" *)
  wire i2c_read_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:150" *)
  wire i2c_read_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:303" *)
  wire [9:0] period;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:147" *)
  wire [9:0] \period$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:43" *)
  wire read_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:305" *)
  wire read_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:42" *)
  wire [7:0] \read_data$56 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:134" *)
  wire [7:0] \read_data$57 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:136" *)
  wire read_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:45" *)
  wire \read_ready$63 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:306" *)
  wire read_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:44" *)
  wire \read_valid$60 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:137" *)
  wire \read_valid$61 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:145" *)
  wire ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:301" *)
  wire \ready$17 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:32" *)
  wire [31:0] rlen;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:140" *)
  wire [3:0] \rlen$43 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:311" *)
  output scl;
  wire scl;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:311" *)
  wire \scl$7 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:308" *)
  output sda;
  wire sda;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:308" *)
  wire \sda$1 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:309" *)
  output sda_en;
  wire sda_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:309" *)
  wire \sda_en$3 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:305" *)
  input sda_in;
  wire sda_in;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:376" *)
  wire \sda_in$5 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:129" *)
  wire start;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:37" *)
  wire \start$49 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:302" *)
  wire valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:146" *)
  wire \valid$19 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:31" *)
  wire [31:0] wlen;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:139" *)
  wire [3:0] \wlen$41 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:128" *)
  wire [7:0] write_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:36" *)
  wire [7:0] \write_data$47 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:130" *)
  wire write_data_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:40" *)
  wire write_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:132" *)
  wire \write_ready$55 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:131" *)
  wire write_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:39" *)
  wire \write_valid$53 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:413" *)
  \serial_demo.i2c.controller  controller (
    .bus_ack(bus_ack),
    .bus_addr(bus_addr),
    .bus_cyc(bus_cyc),
    .bus_r_data(bus_r_data),
    .bus_stb(bus_stb),
    .bus_w_data(bus_w_data),
    .bus_w_en(bus_w_en),
    .clk(clk),
    .dat_en(write_data_en),
    .enable(enable),
    .period(\$2 ),
    .\port$354$0 (\$1 ),
    .\port$498$0 (\wlen$41 ),
    .\port$506$0 (\rlen$43 ),
    .read_ready(read_ready),
    .read_valid(\read_valid$60 ),
    .rst(rst),
    .start(start),
    .write_data(write_data),
    .write_valid(write_valid)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:384" *)
  \serial_demo.i2c.out  out (
    .clk(clk),
    .\clk_en$16 (clk_en),
    .\dat_en$17 (dat_en),
    .\data$19 (data),
    .period(\$2 [9:0]),
    .read_data(sda_in),
    .read_valid(i2c_read_en),
    .ready(ready),
    .rst(rst),
    .scl(scl),
    .sda(sda),
    .sda_en(sda_en),
    .valid(valid)
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:395" *)
  \serial_demo.i2c.send  send (
    .clk(clk),
    .clk_en(clk_en),
    .dat_en(dat_en),
    .data(data),
    .enable(enable),
    .i2c_read_data(sda_in),
    .i2c_read_en(i2c_read_en),
    .period(\$2 [9:0]),
    .\r_data$29 (\$1 ),
    .\r_en$33 (read_ready),
    .read_valid(\read_valid$60 ),
    .ready(ready),
    .rlen(\rlen$43 ),
    .rst(rst),
    .start(start),
    .valid(valid),
    .w_en(write_valid),
    .wlen(\wlen$41 ),
    .write_data(write_data),
    .write_data_en(write_data_en),
    .write_ready(write_ready)
  );
  assign \sda$1  = sda;
  assign \sda_en$3  = sda_en;
  assign \sda_in$5  = sda_in;
  assign \scl$7  = scl;
  assign period = \$2 [9:0];
  assign \period$9  = \$2 [9:0];
  assign \clk_en$11  = clk_en;
  assign \dat_en$13  = dat_en;
  assign \data$15  = data;
  assign \ready$17  = ready;
  assign \valid$19  = valid;
  assign i2c_read_data = sda_in;
  assign read_data = sda_in;
  assign read_valid = i2c_read_en;
  assign \bus_ack$25  = bus_ack;
  assign \bus_addr$27  = bus_addr;
  assign \bus_cyc$29  = bus_cyc;
  assign \bus_r_data$31  = bus_r_data;
  assign \bus_stb$33  = bus_stb;
  assign \bus_w_data$35  = bus_w_data;
  assign \bus_w_en$37  = bus_w_en;
  assign ctl_period = \$2 [9:0];
  assign \ctl_period$39  = { 20'h00000, \$2  };
  assign wlen = { 28'h0000000, \wlen$41  };
  assign rlen = { 28'h0000000, \rlen$43  };
  assign \enable$45  = enable;
  assign \write_data$47  = write_data;
  assign \start$49  = start;
  assign \dat_en$51  = write_data_en;
  assign \write_valid$53  = write_valid;
  assign \write_ready$55  = write_ready;
  assign \read_data$56  = \$1 [8:1];
  assign \read_data$57  = \$1 [8:1];
  assign read_ack = \$1 [0];
  assign ack = \$1 [0];
  assign \read_valid$61  = \read_valid$60 ;
  assign \read_ready$63  = read_ready;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:49" *)
(* generator = "Amaranth" *)
module \serial_demo.i2c.controller (rst, read_valid, \port$354$0 , bus_stb, bus_cyc, bus_addr, bus_w_data, bus_w_en, \port$498$0 , \port$506$0 , write_valid, bus_ack, write_data, read_ready, bus_r_data, enable, start, period, dat_en, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$2  = 0;
  wire \$1 ;
  wire \$2 ;
  wire \$3 ;
  wire \$4 ;
  reg \$5 ;
  reg \$6 ;
  reg [11:0] \$7 ;
  reg \$8 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:10" *)
  output bus_ack;
  reg bus_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:9" *)
  input [3:0] bus_addr;
  wire [3:0] bus_addr;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:7" *)
  input bus_cyc;
  wire bus_cyc;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:13" *)
  output [31:0] bus_r_data;
  reg [31:0] bus_r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:8" *)
  input bus_stb;
  wire bus_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:12" *)
  input [31:0] bus_w_data;
  wire [31:0] bus_w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:11" *)
  input bus_w_en;
  wire bus_w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:30" *)
  wire [31:0] ctl_period;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:38" *)
  output dat_en;
  reg dat_en = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:33" *)
  output enable;
  reg enable = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:51" *)
  output [11:0] period;
  reg [11:0] period = 12'h064;
  input [8:0] \port$354$0 ;
  wire [8:0] \port$354$0 ;
  input [3:0] \port$498$0 ;
  wire [3:0] \port$498$0 ;
  input [3:0] \port$506$0 ;
  wire [3:0] \port$506$0 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:43" *)
  wire read_ack;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:42" *)
  wire [7:0] read_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:45" *)
  output read_ready;
  reg read_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:44" *)
  input read_valid;
  wire read_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:32" *)
  wire [31:0] rlen;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:37" *)
  output start;
  reg start = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:31" *)
  wire [31:0] wlen;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:36" *)
  output [7:0] write_data;
  reg [7:0] write_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:39" *)
  output write_valid;
  reg write_valid;
  assign \$2  = bus_addr == (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:58" *) 1'h1;
  assign \$3  = bus_addr == (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:84" *) 3'h5;
  assign \$4  = bus_cyc & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:55" *) bus_stb;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:33" *)
  always @(posedge clk)
    enable <= \$5 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:37" *)
  always @(posedge clk)
    start <= \$6 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:51" *)
  always @(posedge clk)
    period <= \$7 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:38" *)
  always @(posedge clk)
    dat_en <= \$8 ;
  assign \$1  = bus_cyc & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:55" *) bus_stb;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    write_valid = 1'h0;
    if (\$1 ) begin
      if (bus_w_en) begin
        if (\$2 ) begin
          write_valid = 1'h1;
        end
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    bus_ack = 1'h0;
    if (\$1 ) begin
      (* full_case = 32'd1 *)
      if (bus_w_en) begin
        (* full_case = 32'd1 *)
        if (\$2 ) begin
          bus_ack = 1'h1;
        end else begin
          bus_ack = 1'h1;
        end
      end else begin
        (* full_case = 32'd1 *)
        if (\$3 ) begin
          bus_ack = read_valid;
        end else begin
          bus_ack = 1'h1;
        end
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    write_data = 8'h00;
    if (\$1 ) begin
      if (bus_w_en) begin
        casez (bus_addr)
          4'h0:
              /* empty */;
          4'h1:
              write_data = bus_w_data[7:0];
        endcase
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    read_ready = 1'h0;
    if (\$1 ) begin
      (* full_case = 32'd1 *)
      if (bus_w_en) begin
      end else begin
        if (\$3 ) begin
          read_ready = 1'h1;
        end
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    bus_r_data = 32'd0;
    casez (bus_addr)
      4'h0:
          bus_r_data = { 31'h00000000, enable };
      4'h1:
          /* empty */;
      4'h2:
          bus_r_data = { 31'h00000000, start };
      4'h4:
          bus_r_data = { 28'h0000000, \port$498$0  };
      4'h5:
          bus_r_data = { 24'h000000, \port$354$0 [8:1] };
      4'h7:
          bus_r_data = { 31'h00000000, \port$354$0 [0] };
      4'h6:
          bus_r_data = { 28'h0000000, \port$506$0  };
      4'h3:
          bus_r_data = { 31'h00000000, dat_en };
      4'h8:
          bus_r_data = { 20'h00000, period };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$5  = enable;
    if (\$4 ) begin
      if (bus_w_en) begin
        casez (bus_addr)
          4'h0:
              \$5  = bus_w_data[0];
        endcase
      end
    end
    if (rst) begin
      \$5  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$6  = start;
    if (\$4 ) begin
      if (bus_w_en) begin
        casez (bus_addr)
          4'h0:
              /* empty */;
          4'h1:
              \$6  = 1'h0;
          4'h2:
              \$6  = bus_w_data[0];
        endcase
      end
    end
    if (rst) begin
      \$6  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$7  = period;
    if (\$4 ) begin
      if (bus_w_en) begin
        casez (bus_addr)
          4'h0:
              /* empty */;
          4'h1:
              /* empty */;
          4'h2:
              /* empty */;
          4'h8:
              \$7  = bus_w_data[11:0];
        endcase
      end
    end
    if (rst) begin
      \$7  = 12'h064;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$8  = dat_en;
    if (\$4 ) begin
      if (bus_w_en) begin
        casez (bus_addr)
          4'h0:
              /* empty */;
          4'h1:
              /* empty */;
          4'h2:
              /* empty */;
          4'h8:
              /* empty */;
          4'h3:
              \$8  = bus_w_data[0];
        endcase
      end
    end
    if (rst) begin
      \$8  = 1'h0;
    end
  end
  assign ctl_period = { 20'h00000, period };
  assign wlen = { 28'h0000000, \port$498$0  };
  assign read_data = \port$354$0 [8:1];
  assign read_ack = \port$354$0 [0];
  assign rlen = { 28'h0000000, \port$506$0  };
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:315" *)
(* generator = "Amaranth" *)
module \serial_demo.i2c.out (clk, rst, read_valid, scl, sda_en, sda, ready, \dat_en$17 , \clk_en$16 , \data$19 , valid, period, read_data);
  reg \$auto$verilog_backend.cc:2352:dump_module$3  = 0;
  wire \$1 ;
  reg \$10 ;
  reg [9:0] \$11 ;
  reg [9:0] \$12 ;
  reg \$13 ;
  reg \$14 ;
  wire [10:0] \$2 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire [9:0] \$6 ;
  wire [10:0] \$7 ;
  wire \$8 ;
  reg \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:320" *)
  reg clk_en = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:298" *)
  input \clk_en$16 ;
  wire \clk_en$16 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:317" *)
  reg [9:0] counter = 10'h000;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:321" *)
  reg dat_en = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:299" *)
  input \dat_en$17 ;
  wire \dat_en$17 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:334" *)
  reg data = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:300" *)
  input \data$19 ;
  wire \data$19 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  reg fsm_state = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:318" *)
  reg [9:0] half_period = 10'h000;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:303" *)
  input [9:0] period;
  wire [9:0] period;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:310" *)
  input read_data;
  wire read_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:306" *)
  output read_valid;
  wire read_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:301" *)
  output ready;
  reg ready;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:311" *)
  output scl;
  reg scl;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:308" *)
  output sda;
  reg sda;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:309" *)
  output sda_en;
  reg sda_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:310" *)
  wire sda_in;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:302" *)
  input valid;
  wire valid;
  assign \$1  = counter < (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:325" *) half_period;
  assign \$2  = half_period - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:331" *) 2'h2;
  assign \$3  = counter == (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:331" *) \$2 ;
  assign read_valid = clk_en & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:331" *) \$3 ;
  assign \$4  = ! (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) fsm_state;
  assign \$7  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:361" *) 1'h1;
  assign \$8  = counter == (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:362" *) 1'h1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:320" *)
  always @(posedge clk)
    clk_en <= \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:321" *)
  always @(posedge clk)
    dat_en <= \$10 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:317" *)
  always @(posedge clk)
    counter <= \$11 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:318" *)
  always @(posedge clk)
    half_period <= \$12 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:334" *)
  always @(posedge clk)
    data <= \$13 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  always @(posedge clk)
    fsm_state <= \$14 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    (* full_case = 32'd1 *)
    if (clk_en) begin
      scl = \$1 ;
    end else begin
      scl = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    (* full_case = 32'd1 *)
    if (dat_en) begin
      sda_en = 1'h1;
    end else begin
      sda_en = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    (* full_case = 32'd1 *)
    if (dat_en) begin
      sda = data;
    end else begin
      sda = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    ready = 1'h0;
    casez (fsm_state)
      1'h0:
          ready = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$9  = clk_en;
    casez (fsm_state)
      1'h0:
          (* full_case = 32'd1 *)
          if (valid) begin
            \$9  = \clk_en$16 ;
          end else begin
            \$9  = 1'h0;
          end
    endcase
    if (rst) begin
      \$9  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$10  = dat_en;
    casez (fsm_state)
      1'h0:
          (* full_case = 32'd1 *)
          if (valid) begin
            \$10  = \dat_en$17 ;
          end else begin
            \$10  = 1'h0;
          end
    endcase
    if (rst) begin
      \$10  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$11  = counter;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      1'h0:
          if (valid) begin
            \$11  = period;
          end
      1'h1:
          \$11  = \$7 [9:0];
    endcase
    if (rst) begin
      \$11  = 10'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$12  = half_period;
    casez (fsm_state)
      1'h0:
          if (valid) begin
            \$12  = \$6 ;
          end
    endcase
    if (rst) begin
      \$12  = 10'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$13  = data;
    casez (fsm_state)
      1'h0:
          if (valid) begin
            \$13  = \data$19 ;
          end
    endcase
    if (rst) begin
      \$13  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$14  = fsm_state;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      1'h0:
          if (valid) begin
            \$14  = 1'h1;
          end
      1'h1:
          if (\$8 ) begin
            \$14  = 1'h0;
          end
    endcase
    if (rst) begin
      \$14  = 1'h0;
    end
  end
  assign sda_in = read_data;
  assign \$5  = fsm_state;
  assign \$6  = { 1'h0, period[9:1] };
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:154" *)
(* generator = "Amaranth" *)
module \serial_demo.i2c.send (clk, rst, i2c_read_en, write_ready, read_valid, \r_data$29 , ready, dat_en, clk_en, data, valid, wlen, rlen, w_en, write_data, \r_en$33 , enable, start, period, write_data_en, i2c_read_data
);
  reg \$auto$verilog_backend.cc:2352:dump_module$4  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire [3:0] \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  wire [4:0] \$16 ;
  reg [3:0] \$17 ;
  reg [2:0] \$18 ;
  reg [2:0] \$19 ;
  wire \$2 ;
  reg \$20 ;
  reg [8:0] \$21 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:135" *)
  wire ack;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:142" *)
  output clk_en;
  reg clk_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:126" *)
  wire [9:0] ctl_period;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:143" *)
  output dat_en;
  reg dat_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:144" *)
  output data;
  reg data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:124" *)
  input enable;
  wire enable;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:149" *)
  input i2c_read_data;
  wire i2c_read_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:150" *)
  input i2c_read_en;
  wire i2c_read_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  wire [4:0] level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  wire [4:0] \level$23 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:126" *)
  input [9:0] period;
  wire [9:0] period;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  wire [9:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  output [8:0] \r_data$29 ;
  wire [8:0] \r_data$29 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  reg r_en;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:136" *)
  input \r_en$33 ;
  wire \r_en$33 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  wire \r_rdy$37 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:182" *)
  reg [3:0] read_counter = 4'h8;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:134" *)
  wire [7:0] read_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:262" *)
  reg read_flag = 1'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:136" *)
  wire read_ready;
  (* init = 9'h000 *)
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:261" *)
  wire [8:0] read_register;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output read_valid;
  wire read_valid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:145" *)
  input ready;
  wire ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:140" *)
  output [3:0] rlen;
  wire [3:0] rlen;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:129" *)
  input start;
  wire start;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:175" *)
  wire \start$10 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:146" *)
  output valid;
  reg valid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [9:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  reg [8:0] \w_data$24  = 9'h000;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:131" *)
  input w_en;
  wire w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  reg \w_en$27 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  wire w_rdy;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:139" *)
  output [3:0] wlen;
  wire [3:0] wlen;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:176" *)
  reg [2:0] write_counter = 3'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:128" *)
  input [7:0] write_data;
  wire [7:0] write_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:130" *)
  input write_data_en;
  wire write_data_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  output write_ready;
  wire write_ready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:131" *)
  wire write_valid;
  assign \$1  = r_data >> write_counter;
  assign \$2  = write_counter == (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:244" *) 1'h1;
  assign \$3  = ! (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) fsm_state;
  assign \$4  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 1'h1;
  assign \$5  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h2;
  assign \$6  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h3;
  assign \$7  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h4;
  assign \$8  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h5;
  assign \$9  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h6;
  assign \$10  = \r_rdy$37  & (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:187" *) enable;
  assign \$11  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:218" *) write_counter;
  assign \$12  = write_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:224" *) 1'h1;
  assign \$13  = level > (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:235" *) 1'h1;
  assign \$14  = write_counter == (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:244" *) 1'h1;
  assign \$15  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:275" *) read_counter;
  assign \$16  = read_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:278" *) 1'h1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:182" *)
  always @(posedge clk)
    read_counter <= \$17 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:176" *)
  always @(posedge clk)
    write_counter <= \$18 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  always @(posedge clk)
    fsm_state <= \$19 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:262" *)
  always @(posedge clk)
    read_flag <= \$20 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:261" *)
  always @(posedge clk)
    \w_data$24  <= \$21 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:256" *)
  \serial_demo.i2c.send.rbuffer  rbuffer (
    .clk(clk),
    .level(\level$23 ),
    .r_data(\r_data$29 ),
    .r_en(\r_en$33 ),
    .r_rdy(read_valid),
    .rst(rst),
    .w_en(\w_en$27 ),
    .w_port_data(\w_data$24 )
  );
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\i2c.py:159" *)
  \serial_demo.i2c.send.wbuffer  wbuffer (
    .clk(clk),
    .level(level),
    .r_data(r_data),
    .r_en(r_en),
    .r_rdy(\r_rdy$37 ),
    .rst(rst),
    .w_en(w_en),
    .w_port_data(w_data),
    .w_rdy(write_ready)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    dat_en = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          dat_en = 1'h1;
      3'h3:
          dat_en = 1'h1;
      3'h2:
          dat_en = r_data[8];
      3'h4:
          dat_en = 1'h0;
      3'h5:
          /* empty */;
      3'h6:
          dat_en = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    clk_en = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          clk_en = 1'h0;
      3'h3:
          clk_en = 1'h0;
      3'h2:
          clk_en = 1'h1;
      3'h4:
          clk_en = 1'h1;
      3'h5:
          /* empty */;
      3'h6:
          clk_en = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    data = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          data = 1'h1;
      3'h3:
          data = 1'h0;
      3'h2:
          data = \$1 ;
      3'h4:
          /* empty */;
      3'h5:
          /* empty */;
      3'h6:
          (* full_case = 32'd1 *)
          if (\$2 ) begin
            data = 1'h0;
          end else begin
            data = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    valid = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          valid = 1'h1;
      3'h3:
          valid = 1'h1;
      3'h2:
          valid = 1'h1;
      3'h4:
          valid = 1'h1;
      3'h5:
          /* empty */;
      3'h6:
          valid = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    r_en = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h3:
          /* empty */;
      3'h2:
          /* empty */;
      3'h4:
          /* empty */;
      3'h5:
          if (i2c_read_en) begin
            r_en = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \w_en$27  = 1'h0;
    if (read_flag) begin
      \w_en$27  = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$17  = read_counter;
    casez (fsm_state)
      3'h0:
          if (\$10 ) begin
            \$17  = 4'h8;
          end
    endcase
    if (read_flag) begin
      \$17  = 4'h8;
    end
    if (i2c_read_en) begin
      (* full_case = 32'd1 *)
      if (\$15 ) begin
      end else begin
        \$17  = \$16 [3:0];
      end
    end
    if (rst) begin
      \$17  = 4'h8;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$18  = write_counter;
    casez (fsm_state)
      3'h0:
          if (\$10 ) begin
            \$18  = 3'h7;
          end
      3'h1:
          /* empty */;
      3'h3:
          if (ready) begin
            \$18  = 3'h7;
          end
      3'h2:
          if (ready) begin
            (* full_case = 32'd1 *)
            if (\$11 ) begin
              \$18  = 3'h7;
            end else begin
              \$18  = \$12 [2:0];
            end
          end
      3'h4:
          /* empty */;
      3'h5:
          if (i2c_read_en) begin
            (* full_case = 32'd1 *)
            if (\$13 ) begin
            end else begin
              \$18  = 3'h1;
            end
          end
      3'h6:
          (* full_case = 32'd1 *)
          if (\$14 ) begin
          end else begin
            if (ready) begin
              \$18  = 3'h0;
            end
          end
    endcase
    if (rst) begin
      \$18  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$19  = fsm_state;
    casez (fsm_state)
      3'h0:
          if (\$10 ) begin
            (* full_case = 32'd1 *)
            if (r_data[9]) begin
              \$19  = 3'h1;
            end else begin
              \$19  = 3'h2;
            end
          end
      3'h1:
          if (ready) begin
            \$19  = 3'h3;
          end
      3'h3:
          if (ready) begin
            \$19  = 3'h2;
          end
      3'h2:
          if (ready) begin
            if (\$11 ) begin
              \$19  = 3'h4;
            end
          end
      3'h4:
          if (ready) begin
            \$19  = 3'h5;
          end
      3'h5:
          if (i2c_read_en) begin
            (* full_case = 32'd1 *)
            if (\$13 ) begin
              \$19  = 3'h0;
            end else begin
              \$19  = 3'h6;
            end
          end
      3'h6:
          if (\$14 ) begin
            if (ready) begin
              \$19  = 3'h0;
            end
          end
    endcase
    if (rst) begin
      \$19  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$20  = read_flag;
    if (read_flag) begin
      \$20  = 1'h0;
    end
    if (i2c_read_en) begin
      if (\$15 ) begin
        \$20  = 1'h1;
      end
    end
    if (rst) begin
      \$20  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$21  = \w_data$24 ;
    if (read_flag) begin
      \$21  = 9'h000;
    end
    if (i2c_read_en) begin
      casez (read_counter)
        4'h0:
            \$21 [0] = i2c_read_data;
        4'h1:
            \$21 [1] = i2c_read_data;
        4'h2:
            \$21 [2] = i2c_read_data;
        4'h3:
            \$21 [3] = i2c_read_data;
        4'h4:
            \$21 [4] = i2c_read_data;
        4'h5:
            \$21 [5] = i2c_read_data;
        4'h6:
            \$21 [6] = i2c_read_data;
        4'h7:
            \$21 [7] = i2c_read_data;
        4'h8:
            \$21 [8] = i2c_read_data;
      endcase
    end
    if (rst) begin
      \$21  = 9'h000;
    end
  end
  assign write_valid = w_en;
  assign w_rdy = write_ready;
  assign \start$10  = r_data[9];
  assign ctl_period = period;
  assign read_register = \w_data$24 ;
  assign ack = \r_data$29 [0];
  assign read_data = \r_data$29 [8:1];
  assign r_rdy = read_valid;
  assign read_ready = \r_en$33 ;
  assign wlen = level[3:0];
  assign rlen = \level$23 [3:0];
  assign w_data[8] = write_data_en;
  assign w_data[9] = start;
  assign w_data[7:0] = write_data;
endmodule

(* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:144" *)
(* generator = "Amaranth" *)
module \serial_demo.i2c.send.rbuffer (rst, r_rdy, r_data, w_en, w_port_data, level, r_en, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$5  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [5:0] \$14 ;
  reg [3:0] \$15 ;
  reg [3:0] \$16 ;
  reg [4:0] \$17 ;
  wire [4:0] \$2 ;
  wire \$3 ;
  wire [4:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [5:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* init = 4'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  wire [3:0] consume;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  output [4:0] level;
  reg [4:0] level = 5'h00;
  (* init = 4'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  wire [3:0] produce;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  output [8:0] r_data;
  wire [8:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  input r_en;
  wire r_en;
  (* init = 5'h00 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  wire [4:0] r_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg [3:0] r_port_addr = 4'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [8:0] r_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output r_rdy;
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [8:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  input w_en;
  wire w_en;
  (* init = 5'h00 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:90" *)
  wire [4:0] w_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg [3:0] w_port_addr = 4'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  input [8:0] w_port_data;
  wire [8:0] w_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:400" *)
  wire w_port_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  wire w_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:162" *)
  reg [8:0] storage [15:0];
  initial begin
    storage[0] = 9'h000;
    storage[1] = 9'h000;
    storage[2] = 9'h000;
    storage[3] = 9'h000;
    storage[4] = 9'h000;
    storage[5] = 9'h000;
    storage[6] = 9'h000;
    storage[7] = 9'h000;
    storage[8] = 9'h000;
    storage[9] = 9'h000;
    storage[10] = 9'h000;
    storage[11] = 9'h000;
    storage[12] = 9'h000;
    storage[13] = 9'h000;
    storage[14] = 9'h000;
    storage[15] = 9'h000;
  end
  always @(posedge clk) begin
    if (w_port_en)
      storage[w_port_addr] <= w_port_data;
  end
  assign r_data = storage[r_port_addr];
  assign w_rdy = level != (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:153" *) 5'h10;
  assign r_rdy = | (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:154" *) level;
  assign w_port_en = w_en & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:171" *) w_rdy;
  assign \$1  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$2  = w_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$3  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$4  = r_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$5  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$6  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$6 ;
  assign \$8  = \$5  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$7 ;
  assign \$9  = level + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:184" *) 1'h1;
  assign \$10  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$11  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$12  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$11 ;
  assign \$13  = \$10  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$12 ;
  assign \$14  = level - (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:186" *) 1'h1;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  always @(posedge clk)
    w_port_addr <= \$15 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  always @(posedge clk)
    r_port_addr <= \$16 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  always @(posedge clk)
    level <= \$17 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$15  = w_port_addr;
    if (\$1 ) begin
      \$15  = \$2 [3:0];
    end
    if (rst) begin
      \$15  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$16  = r_port_addr;
    if (\$3 ) begin
      \$16  = \$4 [3:0];
    end
    if (rst) begin
      \$16  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$17  = level;
    if (\$8 ) begin
      \$17  = \$9 [4:0];
    end
    if (\$13 ) begin
      \$17  = \$14 [4:0];
    end
    if (rst) begin
      \$17  = 5'h00;
    end
  end
  assign w_level = level;
  assign r_level = level;
  assign produce = w_port_addr;
  assign w_data = w_port_data;
  assign consume = r_port_addr;
  assign r_port_data = r_data;
endmodule

(* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:144" *)
(* generator = "Amaranth" *)
module \serial_demo.i2c.send.wbuffer (rst, w_rdy, r_rdy, r_data, w_port_data, r_en, level, w_en, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$6  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [5:0] \$14 ;
  reg [3:0] \$15 ;
  reg [3:0] \$16 ;
  reg [4:0] \$17 ;
  wire [4:0] \$2 ;
  wire \$3 ;
  wire [4:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [5:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* init = 4'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  wire [3:0] consume;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  output [4:0] level;
  reg [4:0] level = 5'h00;
  (* init = 4'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  wire [3:0] produce;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  output [9:0] r_data;
  wire [9:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  input r_en;
  wire r_en;
  (* init = 5'h00 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  wire [4:0] r_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg [3:0] r_port_addr = 4'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [9:0] r_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output r_rdy;
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [9:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  input w_en;
  wire w_en;
  (* init = 5'h00 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:90" *)
  wire [4:0] w_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg [3:0] w_port_addr = 4'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  input [9:0] w_port_data;
  wire [9:0] w_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:400" *)
  wire w_port_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  output w_rdy;
  wire w_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:162" *)
  reg [9:0] storage [15:0];
  initial begin
    storage[0] = 10'h000;
    storage[1] = 10'h000;
    storage[2] = 10'h000;
    storage[3] = 10'h000;
    storage[4] = 10'h000;
    storage[5] = 10'h000;
    storage[6] = 10'h000;
    storage[7] = 10'h000;
    storage[8] = 10'h000;
    storage[9] = 10'h000;
    storage[10] = 10'h000;
    storage[11] = 10'h000;
    storage[12] = 10'h000;
    storage[13] = 10'h000;
    storage[14] = 10'h000;
    storage[15] = 10'h000;
  end
  always @(posedge clk) begin
    if (w_port_en)
      storage[w_port_addr] <= w_port_data;
  end
  assign r_data = storage[r_port_addr];
  assign w_rdy = level != (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:153" *) 5'h10;
  assign r_rdy = | (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:154" *) level;
  assign w_port_en = w_en & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:171" *) w_rdy;
  assign \$1  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$2  = w_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$3  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$4  = r_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$5  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$6  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$6 ;
  assign \$8  = \$5  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$7 ;
  assign \$9  = level + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:184" *) 1'h1;
  assign \$10  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$11  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$12  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$11 ;
  assign \$13  = \$10  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$12 ;
  assign \$14  = level - (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:186" *) 1'h1;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  always @(posedge clk)
    w_port_addr <= \$15 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  always @(posedge clk)
    r_port_addr <= \$16 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  always @(posedge clk)
    level <= \$17 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$15  = w_port_addr;
    if (\$1 ) begin
      \$15  = \$2 [3:0];
    end
    if (rst) begin
      \$15  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$16  = r_port_addr;
    if (\$3 ) begin
      \$16  = \$4 [3:0];
    end
    if (rst) begin
      \$16  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$17  = level;
    if (\$8 ) begin
      \$17  = \$9 [4:0];
    end
    if (\$13 ) begin
      \$17  = \$14 [4:0];
    end
    if (rst) begin
      \$17  = 5'h00;
    end
  end
  assign w_level = level;
  assign r_level = level;
  assign produce = w_port_addr;
  assign w_data = w_port_data;
  assign consume = r_port_addr;
  assign r_port_data = r_data;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:109" *)
(* generator = "Amaranth" *)
module \serial_demo.uart_rx (clk, rst, produce_tvalid, produce_tdata, r_en, rx);
  reg \$auto$verilog_backend.cc:2352:dump_module$7  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [7:0] \$14 ;
  wire [7:0] \$15 ;
  wire [8:0] \$16 ;
  wire \$17 ;
  wire [3:0] \$18 ;
  wire \$19 ;
  wire \$2 ;
  wire \$20 ;
  wire \$21 ;
  wire [3:0] \$22 ;
  reg [13:0] \$23 ;
  reg [2:0] \$24 ;
  reg [2:0] \$25 ;
  reg [7:0] \$26 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [14:0] \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:124" *)
  reg [2:0] bit_counter = 3'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:119" *)
  reg [13:0] counter = 14'h0000;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:125" *)
  reg [7:0] data_register = 8'h00;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  output [7:0] produce_tdata;
  wire [7:0] produce_tdata;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  wire produce_tready;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output produce_tvalid;
  wire produce_tvalid;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:67" *)
  input r_en;
  wire r_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:105" *)
  input rx;
  wire rx;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  reg [7:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  reg w_en;
  assign \$1  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:160" *) counter;
  assign \$2  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:161" *) bit_counter;
  assign \$3  = ! (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) fsm_state;
  assign \$4  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 1'h1;
  assign \$5  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h2;
  assign \$6  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h3;
  assign \$7  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h4;
  assign \$8  = counter > (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:121" *) 1'h0;
  assign \$9  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:122" *) 1'h1;
  assign \$10  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:129" *) rx;
  assign \$11  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:134" *) counter;
  assign \$13  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:143" *) counter;
  assign \$16  = \$14  + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:144" *) \$15 ;
  assign \$17  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:146" *) bit_counter;
  assign \$18  = bit_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:153" *) 1'h1;
  assign \$19  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:155" *) counter;
  assign \$20  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:160" *) counter;
  assign \$21  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:161" *) bit_counter;
  assign \$22  = bit_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:167" *) 1'h1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:119" *)
  always @(posedge clk)
    counter <= \$23 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  always @(posedge clk)
    fsm_state <= \$24 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:124" *)
  always @(posedge clk)
    bit_counter <= \$25 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:125" *)
  always @(posedge clk)
    data_register <= \$26 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:111" *)
  \serial_demo.uart_rx.buffer  buffer (
    .clk(clk),
    .r_data(produce_tdata),
    .r_en(r_en),
    .r_rdy(produce_tvalid),
    .rst(rst),
    .w_en(w_en),
    .w_port_data(w_data)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    w_data = 8'h00;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h4:
          /* empty */;
      3'h3:
          if (\$1 ) begin
            if (\$2 ) begin
              w_data = data_register;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    w_en = 1'h0;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h4:
          /* empty */;
      3'h3:
          if (\$1 ) begin
            if (\$2 ) begin
              w_en = 1'h1;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    \$23  = counter;
    if (\$8 ) begin
      \$23  = \$9 [13:0];
    end
    casez (fsm_state)
      3'h0:
          if (\$10 ) begin
            \$23  = 14'h1458;
          end
      3'h1:
          if (\$11 ) begin
            (* full_case = 32'd1 *)
            if (\$12 ) begin
            end else begin
              \$23  = 14'h28b0;
            end
          end
      3'h2:
          if (\$13 ) begin
            \$23  = 14'h28b0;
          end
      3'h4:
          if (\$19 ) begin
            \$23  = 14'h28b0;
          end
      3'h3:
          if (\$20 ) begin
            (* full_case = 32'd1 *)
            if (\$21 ) begin
            end else begin
              \$23  = 14'h28b0;
            end
          end
    endcase
    if (rst) begin
      \$23  = 14'h0000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    \$24  = fsm_state;
    casez (fsm_state)
      3'h0:
          if (\$10 ) begin
            \$24  = 3'h1;
          end
      3'h1:
          if (\$11 ) begin
            (* full_case = 32'd1 *)
            if (\$12 ) begin
              \$24  = 3'h0;
            end else begin
              \$24  = 3'h2;
            end
          end
      3'h2:
          if (\$13 ) begin
            if (\$17 ) begin
              \$24  = 3'h3;
            end
          end
      3'h4:
          if (\$19 ) begin
            \$24  = 3'h3;
          end
      3'h3:
          if (\$20 ) begin
            if (\$21 ) begin
              \$24  = 3'h0;
            end
          end
    endcase
    if (rst) begin
      \$24  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    \$25  = bit_counter;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          if (\$11 ) begin
            (* full_case = 32'd1 *)
            if (\$12 ) begin
            end else begin
              \$25  = 3'h7;
            end
          end
      3'h2:
          if (\$13 ) begin
            (* full_case = 32'd1 *)
            if (\$17 ) begin
              \$25  = 3'h0;
            end else begin
              \$25  = \$18 [2:0];
            end
          end
      3'h4:
          if (\$19 ) begin
            \$25  = 3'h0;
          end
      3'h3:
          if (\$20 ) begin
            (* full_case = 32'd1 *)
            if (\$21 ) begin
            end else begin
              \$25  = \$22 [2:0];
            end
          end
    endcase
    if (rst) begin
      \$25  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    \$26  = data_register;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          if (\$13 ) begin
            \$26  = \$16 [7:0];
          end
    endcase
    if (rst) begin
      \$26  = 8'h00;
    end
  end
  assign r_data = produce_tdata;
  assign r_rdy = produce_tvalid;
  assign produce_tready = r_en;
  assign \$12  = rx;
  assign \$14  = { 1'h0, data_register[7:1] };
  assign \$15  = { rx, 7'h00 };
endmodule

(* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:144" *)
(* generator = "Amaranth" *)
module \serial_demo.uart_rx.buffer (rst, r_rdy, r_data, w_port_data, w_en, r_en, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$8  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [3:0] \$14 ;
  reg [1:0] \$15 ;
  reg [1:0] \$16 ;
  reg [2:0] \$17 ;
  wire [2:0] \$2 ;
  wire \$3 ;
  wire [2:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [3:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  wire [1:0] consume;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  reg [2:0] level = 3'h0;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  wire [1:0] produce;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  output [7:0] r_data;
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  input r_en;
  wire r_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  wire [2:0] r_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg [1:0] r_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [7:0] r_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output r_rdy;
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [7:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  input w_en;
  wire w_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:90" *)
  wire [2:0] w_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg [1:0] w_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  input [7:0] w_port_data;
  wire [7:0] w_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:400" *)
  wire w_port_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  wire w_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:162" *)
  reg [7:0] storage [3:0];
  initial begin
    storage[0] = 8'h00;
    storage[1] = 8'h00;
    storage[2] = 8'h00;
    storage[3] = 8'h00;
  end
  always @(posedge clk) begin
    if (w_port_en)
      storage[w_port_addr] <= w_port_data;
  end
  assign r_data = storage[r_port_addr];
  assign w_rdy = level != (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:153" *) 3'h4;
  assign r_rdy = | (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:154" *) level;
  assign w_port_en = w_en & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:171" *) w_rdy;
  assign \$1  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$2  = w_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$3  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$4  = r_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$5  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$6  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$6 ;
  assign \$8  = \$5  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$7 ;
  assign \$9  = level + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:184" *) 1'h1;
  assign \$10  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$11  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$12  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$11 ;
  assign \$13  = \$10  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$12 ;
  assign \$14  = level - (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:186" *) 1'h1;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  always @(posedge clk)
    w_port_addr <= \$15 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  always @(posedge clk)
    r_port_addr <= \$16 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  always @(posedge clk)
    level <= \$17 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$15  = w_port_addr;
    if (\$1 ) begin
      \$15  = \$2 [1:0];
    end
    if (rst) begin
      \$15  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$16  = r_port_addr;
    if (\$3 ) begin
      \$16  = \$4 [1:0];
    end
    if (rst) begin
      \$16  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$17  = level;
    if (\$8 ) begin
      \$17  = \$9 [2:0];
    end
    if (\$13 ) begin
      \$17  = \$14 [2:0];
    end
    if (rst) begin
      \$17  = 3'h0;
    end
  end
  assign w_level = level;
  assign r_level = level;
  assign produce = w_port_addr;
  assign w_data = w_port_data;
  assign consume = r_port_addr;
  assign r_port_data = r_data;
endmodule

(* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:22" *)
(* generator = "Amaranth" *)
module \serial_demo.uart_tx (rst, consume_tready, tx, w_en, w_data, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$9  = 0;
  wire \$1 ;
  wire [7:0] \$10 ;
  wire \$11 ;
  wire [3:0] \$12 ;
  wire [14:0] \$13 ;
  wire \$14 ;
  wire [14:0] \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire [3:0] \$18 ;
  wire [14:0] \$19 ;
  wire \$2 ;
  reg [7:0] \$20 ;
  reg [13:0] \$21 ;
  reg [2:0] \$22 ;
  reg [2:0] \$23 ;
  reg \$24 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire [14:0] \$7 ;
  wire \$8 ;
  wire [1:0] \$9 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:36" *)
  reg [2:0] byte_counter = 3'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  wire [7:0] consume_tdata;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  output consume_tready;
  wire consume_tready;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  wire consume_tvalid;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:35" *)
  reg [13:0] counter = 14'h0000;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:32" *)
  reg [7:0] data_register = 8'h00;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:33" *)
  reg parity = 1'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:92" *)
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  reg r_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:18" *)
  output tx;
  reg tx;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:65" *)
  input [7:0] w_data;
  wire [7:0] w_data;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\signature.py:66" *)
  input w_en;
  wire w_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  wire w_rdy;
  assign \$1  = ! (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) fsm_state;
  assign \$2  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 1'h1;
  assign \$3  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h2;
  assign \$4  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 2'h3;
  assign \$5  = fsm_state == (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_dsl.py:486" *) 3'h4;
  assign \$6  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:50" *) counter;
  assign \$7  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:55" *) 1'h1;
  assign \$8  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:59" *) counter;
  assign \$9  = parity + (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:60" *) data_register[0];
  assign \$11  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:63" *) byte_counter;
  assign \$12  = byte_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:70" *) 1'h1;
  assign \$13  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:72" *) 1'h1;
  assign \$14  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:76" *) counter;
  assign \$15  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:82" *) 1'h1;
  assign \$16  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:86" *) counter;
  assign \$17  = ! (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:87" *) byte_counter;
  assign \$18  = byte_counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:90" *) 1'h1;
  assign \$19  = counter - (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:93" *) 1'h1;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:32" *)
  always @(posedge clk)
    data_register <= \$20 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:35" *)
  always @(posedge clk)
    counter <= \$21 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64_qbz5n2kfra8p0\\Lib\\contextlib.py:144" *)
  always @(posedge clk)
    fsm_state <= \$22 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:36" *)
  always @(posedge clk)
    byte_counter <= \$23 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:33" *)
  always @(posedge clk)
    parity <= \$24 ;
  (* src = "C:\\Users\\magen\\Documents\\Programs\\audio_fpga\\sapf\\ser\\uart.py:24" *)
  \serial_demo.uart_tx.buffer  buffer (
    .clk(clk),
    .r_data(r_data),
    .r_en(r_en),
    .r_rdy(r_rdy),
    .rst(rst),
    .w_en(w_en),
    .w_port_data(w_data),
    .w_rdy(consume_tready)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$9 ) begin end
    tx = 1'h0;
    casez (fsm_state)
      3'h0:
          tx = 1'h1;
      3'h1:
          tx = 1'h0;
      3'h2:
          tx = data_register[0];
      3'h4:
          tx = parity;
      3'h3:
          tx = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$9 ) begin end
    r_en = 1'h0;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            r_en = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$9 ) begin end
    \$20  = data_register;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            \$20  = r_data;
          end
      3'h1:
          /* empty */;
      3'h2:
          if (\$8 ) begin
            \$20  = \$10 ;
          end
    endcase
    if (rst) begin
      \$20  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$9 ) begin end
    \$21  = counter;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            \$21  = 14'h28b0;
          end
      3'h1:
          (* full_case = 32'd1 *)
          if (\$6 ) begin
            \$21  = 14'h28b0;
          end else begin
            \$21  = \$7 [13:0];
          end
      3'h2:
          (* full_case = 32'd1 *)
          if (\$8 ) begin
            \$21  = 14'h28b0;
          end else begin
            \$21  = \$13 [13:0];
          end
      3'h4:
          (* full_case = 32'd1 *)
          if (\$14 ) begin
            \$21  = 14'h28b0;
          end else begin
            \$21  = \$15 [13:0];
          end
      3'h3:
          (* full_case = 32'd1 *)
          if (\$16 ) begin
            (* full_case = 32'd1 *)
            if (\$17 ) begin
            end else begin
              \$21  = 14'h28b0;
            end
          end else begin
            \$21  = \$19 [13:0];
          end
    endcase
    if (rst) begin
      \$21  = 14'h0000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$9 ) begin end
    \$22  = fsm_state;
    casez (fsm_state)
      3'h0:
          if (r_rdy) begin
            \$22  = 3'h1;
          end
      3'h1:
          if (\$6 ) begin
            \$22  = 3'h2;
          end
      3'h2:
          if (\$8 ) begin
            if (\$11 ) begin
              \$22  = 3'h3;
            end
          end
      3'h4:
          if (\$14 ) begin
            \$22  = 3'h3;
          end
      3'h3:
          if (\$16 ) begin
            if (\$17 ) begin
              \$22  = 3'h0;
            end
          end
    endcase
    if (rst) begin
      \$22  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$9 ) begin end
    \$23  = byte_counter;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          if (\$6 ) begin
            \$23  = 3'h7;
          end
      3'h2:
          if (\$8 ) begin
            (* full_case = 32'd1 *)
            if (\$11 ) begin
              \$23  = 3'h1;
            end else begin
              \$23  = \$12 [2:0];
            end
          end
      3'h4:
          if (\$14 ) begin
            \$23  = 3'h1;
          end
      3'h3:
          if (\$16 ) begin
            (* full_case = 32'd1 *)
            if (\$17 ) begin
            end else begin
              \$23  = \$18 [2:0];
            end
          end
    endcase
    if (rst) begin
      \$23  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$9 ) begin end
    \$24  = parity;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          if (\$8 ) begin
            \$24  = \$9 [0];
          end
      3'h4:
          if (\$14 ) begin
            \$24  = 1'h0;
          end
    endcase
    if (rst) begin
      \$24  = 1'h0;
    end
  end
  assign consume_tvalid = w_en;
  assign consume_tdata = w_data;
  assign w_rdy = consume_tready;
  assign \$10  = { 1'h0, data_register[7:1] };
endmodule

(* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:144" *)
(* generator = "Amaranth" *)
module \serial_demo.uart_tx.buffer (rst, w_rdy, r_rdy, r_data, r_en, w_en, w_port_data, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$10  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [3:0] \$14 ;
  reg [1:0] \$15 ;
  reg [1:0] \$16 ;
  reg [2:0] \$17 ;
  wire [2:0] \$2 ;
  wire \$3 ;
  wire [2:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire [3:0] \$9 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input clk;
  wire clk;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  wire [1:0] consume;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  reg [2:0] level = 3'h0;
  (* init = 2'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  wire [1:0] produce;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  output [7:0] r_data;
  wire [7:0] r_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:94" *)
  input r_en;
  wire r_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:95" *)
  wire [2:0] r_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg [1:0] r_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [7:0] r_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:93" *)
  output r_rdy;
  wire r_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\hdl\\_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  wire [7:0] w_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:89" *)
  input w_en;
  wire w_en;
  (* init = 3'h0 *)
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:90" *)
  wire [2:0] w_level;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg [1:0] w_port_addr = 2'h0;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:87" *)
  input [7:0] w_port_data;
  wire [7:0] w_port_data;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\memory.py:400" *)
  wire w_port_en;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:88" *)
  output w_rdy;
  wire w_rdy;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:162" *)
  reg [7:0] storage [3:0];
  initial begin
    storage[0] = 8'h00;
    storage[1] = 8'h00;
    storage[2] = 8'h00;
    storage[3] = 8'h00;
  end
  always @(posedge clk) begin
    if (w_port_en)
      storage[w_port_addr] <= w_port_data;
  end
  assign r_data = storage[r_port_addr];
  assign w_rdy = level != (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:153" *) 3'h4;
  assign r_rdy = | (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:154" *) level;
  assign w_port_en = w_en & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:171" *) w_rdy;
  assign \$1  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$2  = w_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$3  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$4  = r_port_addr + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:116" *) 1'h1;
  assign \$5  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$6  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$7  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$6 ;
  assign \$8  = \$5  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:183" *) \$7 ;
  assign \$9  = level + (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:184" *) 1'h1;
  assign \$10  = r_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:159" *) r_en;
  assign \$11  = w_rdy & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:160" *) w_en;
  assign \$12  = ~ (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$11 ;
  assign \$13  = \$10  & (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:185" *) \$12 ;
  assign \$14  = level - (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:186" *) 1'h1;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:165" *)
  always @(posedge clk)
    w_port_addr <= \$15 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:166" *)
  always @(posedge clk)
    r_port_addr <= \$16 ;
  (* src = "C:\\Users\\magen\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\amaranth\\lib\\fifo.py:141" *)
  always @(posedge clk)
    level <= \$17 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$10 ) begin end
    \$15  = w_port_addr;
    if (\$1 ) begin
      \$15  = \$2 [1:0];
    end
    if (rst) begin
      \$15  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$10 ) begin end
    \$16  = r_port_addr;
    if (\$3 ) begin
      \$16  = \$4 [1:0];
    end
    if (rst) begin
      \$16  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$10 ) begin end
    \$17  = level;
    if (\$8 ) begin
      \$17  = \$9 [2:0];
    end
    if (\$13 ) begin
      \$17  = \$14 [2:0];
    end
    if (rst) begin
      \$17  = 3'h0;
    end
  end
  assign w_level = level;
  assign r_level = level;
  assign produce = w_port_addr;
  assign w_data = w_port_data;
  assign consume = r_port_addr;
  assign r_port_data = r_data;
endmodule
